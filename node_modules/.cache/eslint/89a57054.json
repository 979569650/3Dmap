[{"D:\\km\\vue2-babylon\\src\\main.ts":"1","D:\\km\\vue2-babylon\\src\\App.vue":"2","D:\\km\\vue2-babylon\\src\\router\\index.ts":"3","D:\\km\\vue2-babylon\\src\\views\\HomeView.vue":"4","D:\\km\\vue2-babylon\\src\\components\\HelloWorld.vue":"5","D:\\km\\vue2-babylon\\src\\components\\index.ts":"6","D:\\km\\vue2-babylon\\scene\\MaterialFactory.ts":"7","D:\\km\\vue2-babylon\\scene\\MeshFactory.ts":"8"},{"size":185,"mtime":1698285821369,"results":"9","hashOfConfig":"10"},{"size":561,"mtime":1698286825254,"results":"11","hashOfConfig":"10"},{"size":360,"mtime":1698286064874,"results":"12","hashOfConfig":"10"},{"size":522,"mtime":1698286808136,"results":"13","hashOfConfig":"10"},{"size":402,"mtime":1698287943870,"results":"14","hashOfConfig":"10"},{"size":19166,"mtime":1698289704249,"results":"15","hashOfConfig":"10"},{"size":2519,"mtime":1698290070252,"results":"16","hashOfConfig":"10"},{"size":10614,"mtime":1698288177770,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"o7kl57",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","errorCount":46,"fatalErrorCount":0,"warningCount":34,"fixableErrorCount":43,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":4,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":4,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":7,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":7,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"D:\\km\\vue2-babylon\\src\\main.ts",[],[],"D:\\km\\vue2-babylon\\src\\App.vue",[],[],"D:\\km\\vue2-babylon\\src\\router\\index.ts",[],"D:\\km\\vue2-babylon\\src\\views\\HomeView.vue",[],"D:\\km\\vue2-babylon\\src\\components\\HelloWorld.vue",[],"D:\\km\\vue2-babylon\\src\\components\\index.ts",["39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118"],"import { Component, Prop, Vue } from \"vue-property-decorator\";\r\nimport * as BABYLON from \"babylonjs\";\r\nimport { AbstractMesh, ArcRotateCamera, CannonJSPlugin, Color3, Color4, CreateBox, CreateGround, CreateLines, CreatePlane, CreateSphere, CreateText, Curve3, DynamicTexture, Engine, GlowLayer, IFontData, Material, Mesh, MeshBuilder, PhysicsImpostor, PointerDragBehavior, Scene, SpotLight, StandardMaterial, Vector3, Vector4 } from '@babylonjs/core'\r\nimport { MaterialFactory } from '../../scene/MaterialFactory';\r\nimport { MeshFactory } from '../../scene/MeshFactory';\r\nimport { AdvancedDynamicTexture, Control, TextBlock } from '@babylonjs/gui';\r\nimport * as china from '../../resources/China.json'\r\nimport * as earcut from 'earcut';\r\nimport { CreatePolygon } from '@babylonjs/core';\r\nimport * as YSBTH_ttf from '../../ziti/YouSheBiaoTiHei_Regular.json'\r\nimport * as YSBTH from '../../ziti/YouSheBiaoTiHei_Regular.json'\r\n// import { MeshWriter } from 'meshwriter'\r\n// import './styles.css';\r\n\r\n// import * as GUI from 'babylonjs-gui';\r\n// import * as GUI from '@babylonjs/gui'\r\n\r\n@Component\r\nexport default class BabylonAPP extends Vue {\r\n    @Prop() private msg!: string;\r\n    public engine!: Engine;\r\n    public scene!: Scene;\r\n    public camera: any;\r\n    public _canvas!: HTMLCanvasElement;\r\n\r\n\r\n\r\n    mounted() {\r\n        this._canvas = document.getElementById('rendCanvas') as HTMLCanvasElement;\r\n        this.engine = new Engine(this._canvas);\r\n        this.scene = new Scene(this.engine);\r\n        this.scene.clearColor = new Color4(230 / 255, 224 / 255, 218 / 255);\r\n        // this.scene.debugLayer.show()\r\n        this.camera = new ArcRotateCamera(\r\n            \"Camera\",\r\n            -Math.PI / 2,\r\n            0,\r\n            50,\r\n            Vector3.Zero(),\r\n            this.scene\r\n        );\r\n        this.camera.attachControl(this._canvas, true);\r\n        // this.scene.createDefaultLight();\r\n        // this.scene.createDefaultEnvironment();\r\n\r\n        this.init();\r\n\r\n        this.engine.runRenderLoop(() => {\r\n            this.scene.render();\r\n        });\r\n    }\r\n    init() {\r\n        this.chinaMap();\r\n    }\r\n    async chinaMap() {\r\n\r\n        var light = new SpotLight(\"spotLight\", new Vector3(-50, 0, -50), new Vector3(1, 0, 1), Math.PI, 2, this.scene);\r\n        light.diffuse = new Color3(254 / 255, 254 / 255, 81 / 255)\r\n        light.specular = new Color3(254 / 255, 254 / 255, 81 / 255); // 蓝色\r\n        // 存放省名\r\n        var adt = AdvancedDynamicTexture.CreateFullscreenUI('text', true, this.scene)\r\n\r\n        var material = MaterialFactory.RGB_emissive(215 / 255, 126 / 255, 40 / 255, this.scene)\r\n        var material2 = MaterialFactory.RGB_emissive(200 / 255, 100 / 255, 80 / 255, this.scene)\r\n        // material.alpha = 0.9\r\n        var material3 = MaterialFactory.RGB_emissive(135 / 255, 62 / 255, 14 / 255, this.scene)\r\n        var color0 = MaterialFactory.RGB_emissive(254 / 255, 254 / 255, 211 / 255, this.scene)\r\n        var color1 = MaterialFactory.RGB_emissive(253 / 255, 217 / 255, 142 / 255, this.scene)\r\n        var color2 = MaterialFactory.RGB_emissive(254 / 255, 152 / 255, 41 / 255, this.scene)\r\n        var color3 = MaterialFactory.RGB_emissive(217 / 255, 95 / 255, 13 / 255, this.scene)\r\n        var color4 = MaterialFactory.RGB_emissive(153 / 255, 51 / 255, 4 / 255, this.scene)\r\n        var centerX = 108\r\n        var centerZ = 34\r\n        var grandModel:any = new Mesh(\"grandModel\", this.scene);\r\n\r\n        var hight = 4;\r\n        var chinaData = china.features;\r\n        console.log(chinaData);\r\n\r\n        var flyLineParent = new Mesh('flyLineParent', this.scene) // 用于存放飞线模型\r\n\r\n        for (let l = 0; l < chinaData.length; l++) {\r\n            // console.log(l)\r\n            var boundaries = chinaData[l].geometry.coordinates;\r\n            // console.log(boundaries)\r\n            var parentModel = new Mesh(chinaData[l].properties.name, this.scene)\r\n\r\n            var centerXZ: number[]\r\n            centerXZ = chinaData[l].properties.centroid\r\n\r\n\r\n            // 边框\r\n            boundaries.forEach(pointGroup => {\r\n                var up: number[][] = [];\r\n                var down: number[][] = [];\r\n                pointGroup.forEach(point => {\r\n                    point.forEach(point => {\r\n                        down.push([point[0] - centerX, 0, point[1] - centerZ])\r\n                        up.push([point[0] - centerX, hight, point[1] - centerZ])\r\n                    })\r\n                })\r\n                var points: number[][] = [];\r\n                down.forEach(d => {\r\n                    points.push(d)\r\n                })\r\n                up.forEach(u => {\r\n                    points.push(u)\r\n                })\r\n\r\n                var face = []//点/2+2个  \r\n                for (var i = 0; i < points.length / 2 - 1; i++) {\r\n                    face.push([i, points.length / 2 + i, points.length / 2 + 1 + i, i + 1])\r\n                }\r\n                face.push([points.length / 2 - 1, points.length - 1, points.length / 2, 0])\r\n\r\n                var heptagonalPrism = {\r\n                    \"name\": \"Heptagonal Prism\", \"category\": [\"Prism\"], \"vertex\": points,\r\n                    \"face\": face\r\n                };\r\n\r\n                var mesh:any = MeshBuilder.CreatePolyhedron(\"h\", { custom: heptagonalPrism }, this.scene);\r\n                mesh.renderingGroupId = 0\r\n                mesh.parent = parentModel\r\n                mesh.material = material3\r\n            })\r\n\r\n\r\n            for (var i = 0; i <= 1; i++) {\r\n                boundaries.forEach(pointGroup => {\r\n                    var points: any[] = [];\r\n                    // console.log(pointGroup)\r\n                    pointGroup.forEach(point => {\r\n                        // console.log(point)\r\n                        point.forEach(point => {\r\n                            points.push(new Vector3(point[0] - centerX, i * hight, point[1] - centerZ))\r\n                        })\r\n                    })\r\n\r\n                    // 卡特穆尔-罗姆样条所需点集\r\n                    var catmullRom = Curve3.CreateCatmullRomSpline(points, 60, true)\r\n                    // console.log(catmullRom.getPoints())\r\n\r\n                    var cter = CreateSphere('center', { diameter: 0.01 }, this.scene);\r\n                    cter.isVisible = false\r\n                    // if (chinaData[l] !=undefined){\r\n                    cter.position = new Vector3(centerXZ[0] - centerX, hight, centerXZ[1] - centerZ)\r\n                    // }\r\n                    if (china.features[l].properties.name != undefined) {\r\n                        var name = text(adt, cter, china.features[l].properties.name)\r\n                    }\r\n\r\n                    //面\r\n                    // var polygon = CreatePolygon(\"polygon\", points, this.scene);\r\n                    var polygon:any = CreatePolygon(\"polygon\", { shape: points }, this.scene, earcut);\r\n                    polygon.position = new Vector3(0, i * hight, 0)\r\n                    /* if (chinaData[l].properties.color === 0) {\r\n                        polygon.material = color0;\r\n                    } else if (chinaData[l].properties.color === 1) {\r\n                        polygon.material = color1;\r\n                    } else if (chinaData[l].properties.color === 2) {\r\n                        polygon.material = color2;\r\n                    } else if (chinaData[l].properties.color === 3) {\r\n                        polygon.material = color3;\r\n                    } else if (chinaData[l].properties.color === 4) {\r\n                        polygon.material = color4;\r\n                    } else {\r\n                        polygon.material = material\r\n                    } */\r\n                    polygon.material = material\r\n                    polygon.parent = parentModel;\r\n                    polygon.renderingGroupId = 0\r\n\r\n                    // //轮廓\r\n                    if (i == 1) {\r\n                        /* const curveMesh = BABYLON.MeshBuilder.CreateLines(\"\", { points: catmullRom.getPoints(), updatable: true }, scene)\r\n                        curveMesh.enableEdgesRendering(); // 启用边缘渲染\r\n                        curveMesh.edgesWidth = 5; // 设置线条宽度\r\n                        \r\n                        curveMesh.renderingGroupId = 1;\r\n                        curveMesh.color = new BABYLON.Color3(1, 1, 1)\r\n                        curveMesh.alpha = 0.8\r\n                        curveMesh.parent = parentModel; */\r\n\r\n                        const curveMesh2:any = MeshBuilder.CreateLines(\"side\", { points: catmullRom.getPoints(), updatable: false }, this.scene)\r\n                        curveMesh2.enableEdgesRendering(); // 启用边缘渲染\r\n                        curveMesh2.edgesWidth = 10; // 设置线条宽度\r\n                        curveMesh2.edgesColor = new Color4(234 / 255, 205 / 255, 123 / 255, 1); // 设置边缘颜色\r\n                        curveMesh2.renderingGroupId = 0;\r\n                        // curveMesh2.color = new BABYLON.Color3(1, 1, 1)\r\n                        curveMesh2.alpha = 1\r\n                        curveMesh2.parent = parentModel;\r\n                        // glow.referenceMeshToUseItsOwnMaterial(curveMesh2)\r\n\r\n\r\n                    }\r\n                    //轮廓\r\n                    // if (i == 0) {\r\n                    //     const curveMesh = BABYLON.MeshBuilder.CreateLines(\"side\", { points: catmullRom.getPoints(), updatable: false }, scene)\r\n                    //     curveMesh.enableEdgesRendering(); // 启用边缘渲染\r\n                    //     curveMesh.edgesWidth = 1; // 设置线条宽度\r\n                    //     curveMesh.edgesColor = new BABYLON.Color4(0, 1, 0.5, 0.5); // 设置边缘颜色\r\n                    //     curveMesh.renderingGroupId = 0;\r\n                    //     curveMesh.color = new BABYLON.Color3(0, 0, 0)\r\n                    //     curveMesh.alpha = 0.3\r\n                    //     curveMesh.parent = parentModel\r\n                    // }\r\n                })\r\n            }\r\n            parentModel.parent = grandModel;\r\n\r\n        }\r\n        flyLine(this.scene, this.engine);\r\n\r\n\r\n\r\n        // const fontData = await (await fetch('/ziti/YouSheBiaoTiHei_Regular.json')).json();\r\n        // const text_3d: any = MeshBuilder.CreateText(\r\n        //     \"myText\",\r\n        //     \"Hello World !! @ #$ % é  啊 A\",\r\n        //     fontData,\r\n        //     {\r\n        //         size: 4,\r\n        //         resolution: 8, // 分辨率\r\n        //         depth: 1,\r\n        //     },\r\n        //     this.scene,\r\n        //     earcut\r\n        // );\r\n        // text_3d.material = material2\r\n        const t_3d = MeshFactory.Text_3D(\"\", \"中国地图，新疆\", this.scene)\r\n        // t_3d.rout\r\n\r\n\r\n        // 鼠标移动事件 主要用于变色，没什么别的用\r\n        var onPointerOver = () => {\r\n            var pickResult = this.scene.pick(this.scene.pointerX, this.scene.pointerY)\r\n            var pickedMesh = pickResult.pickedMesh\r\n\r\n            grandModel._children.forEach((children:any) => {\r\n                if (pickedMesh && children.getChildren().includes(pickedMesh)) {\r\n                    // if (children.position.y !== 1.5) {\r\n                    // gsap.to(camera.target, { x: children.getChildren()[0].position.x * 2, y: 2.5, z: children.getChildren()[0].position.z * 2, duration: 1, ease: 'Power1.easeInout' })\r\n                    // gsap.to(camera, { radius: 30, duration: 1, ease: 'Power1.easeInout' })\r\n                    // gsap.to(children.position, { y: 1.5, duration: 1, ease: 'Power1.easeInout' })\r\n                    // children.position.y = 1.5\r\n                    children._children.forEach((child:any) => {\r\n                        /* if (child.name == 'h') {\r\n                          // child.material = material32\r\n                          child.material = child.metadata[1]\r\n                        }\r\n                        if (child.name == 'polygon') {\r\n                          // child.material = material1\r\n                          child.material = child.metadata[1]\r\n                        } */\r\n                        if (child.name == 'h' || child.name == 'polygon') {\r\n                            // child.material = child.metadata[1]\r\n                            child.material = material2\r\n                        }\r\n\r\n                        // child.edgesColor = new BABYLON.Color4(1, 1, 1, 1)\r\n                        // child.renderingGroupId = 1\r\n                    })\r\n                }\r\n                else {\r\n                    // children.position.y = 0\r\n                    // gsap.to(children.position, { y: 0, duration: 1, ease: 'Power1.easeInout' })\r\n                    // gsap.to(camera, { radius: 50, duration: 1, ease: 'Power1.easeInout' })\r\n                    // gsap.to(camera.target, { x: 0, y: 0, z: 0, duration: 1, ease: 'Power1.easeInout' })\r\n                    children._children.forEach((child:any) => {\r\n                        // if (child.onReady != '1') {\r\n                        /* if (child.name == 'h') {\r\n                          child.material = material3\r\n                        }\r\n                        if (child.name == 'polygon') {\r\n                          child.material = material\r\n                        } */\r\n                        if (child.name == 'h' || child.name == 'polygon') {\r\n                            child.material = material\r\n                        }\r\n                        // child.edgesColor = new BABYLON.Color4(0, 1, 1, 1)\r\n                        // child.renderingGroupId = 0\r\n                        // }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n        this._canvas.addEventListener('pointermove', onPointerOver, false)\r\n\r\n        // 加载字体文件\r\n        // var fontData = \r\n        // const fontData: IFontData = {\r\n        //     resolution: 0,\r\n        //     underlineThickness: 0,\r\n        //     boundingBox: {\r\n        //         yMax: 0,\r\n        //         yMin: 0\r\n        //     },\r\n        //     glyphs: {}\r\n        // };\r\n        // var myText = MeshBuilder.CreateText(\"myText\", \"HELLO WORLD\", fontData, {\r\n        //     size: 16,\r\n        //     resolution: 64,\r\n        //     depth: 10,\r\n        //     faceUV: [\r\n        //         new Vector4(0, 0, 1, 1),\r\n        //         new Vector4(0, 0, 1, 1),\r\n        //         new Vector4(0, 0, 1, 1),\r\n        //     ]\r\n        // },this.scene,earcut);\r\n\r\n\r\n        function flyLine(scene: Scene, engine: Engine) {\r\n            const color = new Color3(1, 1, 0) // 颜色0, 106, 233\r\n            const result = MaterialFactory.picMaterial('../../resources/arrow2.jpg', color, scene) // 引用资源\r\n            const pMaterial = result.picMaterial\r\n\r\n\r\n            china.features.forEach(f => {\r\n                if (f.properties.center != undefined) {\r\n                    var x0 = (117.000923 - centerX)\r\n                    var z0 = (36.675807 - centerZ)\r\n                    var x = (f.properties.center[0] - centerX)\r\n                    var z = (f.properties.center[1] - centerZ)\r\n\r\n\r\n                    var pathPoint = [\r\n                        new Vector3(x0, 0.5, z0),\r\n                        new Vector3(\r\n                            x0 + (x - x0) * 0.3,\r\n                            Math.abs(Math.sqrt((x - x0) * (x - x0) + (z - z0) * (z - z0)) * 0.5),\r\n                            z0 + (z - z0) * 0.3 + Math.abs(z - z0) * 0.5\r\n                        ),\r\n                        new Vector3(\r\n                            x0 + (x - x0) * 0.7,\r\n                            Math.abs(Math.sqrt((x - x0) * (x - x0) + (z - z0) * (z - z0)) * 0.5),\r\n                            z0 + (z - z0) * 0.9 + Math.abs(z - z0) * 0.5\r\n                        ),\r\n                        new Vector3(x, 0.5, z)\r\n                    ]\r\n                    var path = MeshFactory.BezierLine(pathPoint).getPoints()\r\n                    var Wl = MeshFactory.widthLine('feixian', 0.5, path, undefined)\r\n                    Wl.material = pMaterial\r\n                    Wl.renderingGroupId = 2\r\n                    Wl.isPickable = false\r\n                    Wl.parent = flyLineParent\r\n                }\r\n            })\r\n\r\n            engine.runRenderLoop(() => {\r\n                result.flowTexture.vOffset += 0.03\r\n            })\r\n        }\r\n\r\n\r\n        function text(adt: AdvancedDynamicTexture, mesh: Mesh, name: string) {\r\n            // 自动计算高度（行数）和宽度\r\n            var h = name.split('\\n').length // 计算行数，一个\\n加一行\r\n            var wMax = 0 // 计算文本框最大宽度\r\n            name.split('\\n').forEach(t => {\r\n                var w = 0\r\n                var u = t.match(/[\\u4e00-\\u9fa5\\uff00-\\uffef]|[0-9a-zA-Z]/g)\r\n                if (u != null) {\r\n                    u.forEach(function (match: string) {\r\n                        if (/[\\u4e00-\\u9fa5\\uff00-\\uffef]/.test(match)) {\r\n                            w += 2 // 汉字，n+2\r\n                        } else {\r\n                            w += 1.2 // 数字、符号、字母，n+1\r\n                        }\r\n                    })\r\n                }\r\n                if (w > wMax) {\r\n                    wMax = w\r\n                }\r\n            })\r\n\r\n            const size = 15 // 设置字体大小，同时让框的大小自适应\r\n            const width = size * (8 / 15) * wMax + 'px' // 一个单位长度设置位8px\r\n            const height = size * (18 / 15) * h + 'px' // h是行数，18px为一行\r\n\r\n            // const panel = new BABYLON.GUI.Rectangle('panel') // 创建一个背景\r\n            // panel.width = width\r\n            // panel.height = height\r\n            // panel.background = '#ffffff00' // 背景板颜色\r\n            // panel.alpha = 1\r\n            // panel.overlapGroup = 0 // 让背景板拥挤时自动调整位置\r\n            // adt.addControl(panel) // 添加GUI控制\r\n            // panel.linkWithMesh(mesh) // 绑定到物体\r\n            // panel.linkOffsetY = 30 // 距离物体的位置，+为向下调整，-为向上调整\r\n\r\n            const text = new TextBlock(name, name) // 创建文本，第一个属性为'name'，第二个属性为文本内容\r\n            // text.color = '#e5e5e5' // 字体颜色\r\n            text.color = '#ffffff' // 字体颜色\r\n            text.fontWeight = '30' // 字体粗细\r\n            text.fontSizeInPixels = size // 字体大小\r\n            text.width = width // 字体外框的大小（边界）\r\n            text.height = height\r\n            text.textWrapping = true // 开启自动换行\r\n            text.alpha = 1\r\n            text.linkOffsetYInPixels = 0 // 连接线\r\n            text.isReadOnly = true // 标签内容不可选中（网页上点一下可以改）\r\n            text.isPointerBlocker = true\r\n            adt.addControl(text) // 添加GUI控制\r\n            text.linkWithMesh(mesh)\r\n            text.linkOffsetY = 0\r\n            text.textHorizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT\r\n            text.textVerticalAlignment = Control.VERTICAL_ALIGNMENT_TOP\r\n            text.overlapGroup = 0\r\n\r\n            return text\r\n        }\r\n    }\r\n}\r\n","D:\\km\\vue2-babylon\\scene\\MaterialFactory.ts",["119","120","121","122","123","124","125","126","127","128","129","130"],"\r\nimport {\r\n    Scene, ShaderMaterial, AbstractMesh, Mesh, Texture,\r\n    Color3, PBRMaterial, StandardMaterial\r\n} from \"@babylonjs/core\";\r\n\r\n\r\nexport class MaterialFactory {\r\n    /**\r\n     * 创建图片纹理\r\n     * @param src \r\n     * @param color \r\n     * @param scene \r\n     * @returns \r\n     */\r\n    public static picMaterial(src: string, color: Color3, scene: Scene) {\r\n        // 流动材质-纹理\r\n        let flowTexture = new Texture(src, scene);\r\n        // flowTexture.wAng = - Math.PI / 2; // 旋转90度\r\n        flowTexture.uScale = 1; // 水平缩放为2倍\r\n        flowTexture.vScale = 1; // 垂直缩放为2倍\r\n        // 设置纹理的位置偏移\r\n        flowTexture.uOffset = 0; // 在水平方向上偏移0.5个单位\r\n        flowTexture.vOffset = 0; // 在垂直方向上偏移0.5个单位\r\n\r\n        let picMaterial = new StandardMaterial(\"material\", scene);\r\n        // pbrMaterial.diffuseTexture = flowTexture\r\n        picMaterial.diffuseColor = color\r\n        picMaterial.emissiveColor = color\r\n        picMaterial.opacityTexture = flowTexture\r\n        picMaterial.opacityTexture.getAlphaFromRGB = true;\r\n        // pbrMaterial.alphaMode = BABYLON.Engine.ALPHA_ADD;\r\n\r\n        return { flowTexture, picMaterial }\r\n    }\r\n    //效果二\r\n    public static picMaterial2(src: string, scene: Scene) {\r\n        // 流动材质-纹理\r\n        let flowTexture = new Texture(src, scene);\r\n        // flowTexture.wAng = - Math.PI / 2; // 旋转90度\r\n        flowTexture.uScale = 1; // 水平缩放为2倍\r\n        flowTexture.vScale = 1; // 垂直缩放为2倍\r\n        // 设置纹理的位置偏移\r\n        flowTexture.uOffset = 0; // 在水平方向上偏移0.5个单位\r\n        flowTexture.vOffset = 0; // 在垂直方向上偏移0.5个单位\r\n\r\n        let picMaterial = new StandardMaterial(\"material\", scene);\r\n        // picMaterial.emissiveColor = color\r\n        picMaterial.emissiveTexture = flowTexture\r\n        picMaterial.opacityTexture = flowTexture\r\n        // picMaterial.opacityTexture.getAlphaFromRGB = true;\r\n        // pbrMaterial.alphaMode = BABYLON.Engine.ALPHA_ADD;\r\n\r\n        return { flowTexture, picMaterial }\r\n    }\r\n\r\n    /**\r\n     * 自发光材质\r\n     * @param r \r\n     * @param g \r\n     * @param b \r\n     * @param scene \r\n     * @returns \r\n     */\r\n    public static RGB_emissive(r: any, g: any, b: any, scene: any) {\r\n        const RGB = new StandardMaterial(\"RGB\", scene,)\r\n        RGB.emissiveColor = new Color3(r, g, b)\r\n        return RGB\r\n    }\r\n\r\n}","D:\\km\\vue2-babylon\\scene\\MeshFactory.ts",["131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147"],"import {\r\n    Scene, Vector3, DynamicTexture, Mesh, StandardMaterial, Color3\r\n    , MeshBuilder, ActionManager, ExecuteCodeAction, InterpolateValueAction, Curve3, ParticleSystem, Texture, Color4, TrailMesh\r\n} from \"@babylonjs/core\";\r\nimport { DeepImmutableObject } from \"@babylonjs/core/types\";\r\nimport { AdvancedDynamicTexture, Control, TextBlock } from \"@babylonjs/gui\";\r\nimport * as earcut from 'earcut';\r\n// import { MaterialFactory } from \"./MaterialFactory\";\r\n// import * as GUI from \"@babylonjs/gui\";\r\n\r\n\r\nexport class MeshFactory {\r\n\r\n    /**\r\n     * 创建标签\r\n     * @param cfg {\"name\":\"\",\"position\":\"vec3\",\"material\":\"材质\"}\r\n     */\r\n    public static createMarkerMesh(scene: Scene, cfg: any): Mesh {\r\n        var options = {};\r\n        let marker = MeshBuilder.CreatePlane(cfg.name, options, scene);\r\n\r\n        //marker.parent = this.getPrimary().marker_mesh;\r\n        marker.scaling.y = 1.7 / 1.5;\r\n        //marker.position = this.getSlotPosition(slot);\r\n        marker.position = cfg.position;\r\n        if (cfg && cfg.material) {\r\n            marker.material = cfg.material;\r\n        }\r\n\r\n        marker.actionManager = new ActionManager(scene);\r\n        marker.actionManager.registerAction(new ExecuteCodeAction(ActionManager.OnPickTrigger, function () {\r\n            // _this.onClick();\r\n        }));\r\n\r\n        marker.actionManager.registerAction(new ExecuteCodeAction(ActionManager.OnPointerOverTrigger, function () {\r\n            // var primary = _this.getPrimary();\r\n            let primary;\r\n            //Building.text_mesh.parent = primary.root_mesh;\r\n            //primary.drawText(_this.name);\r\n        }));\r\n        // marker.actionManager.registerAction(new InterpolateValueAction(ActionManager.OnPointerOverTrigger,\r\n        //      Building.text_mesh, 'material.alpha', 1.0, 300.0, null, true));\r\n\r\n        // marker.actionManager.registerAction(new InterpolateValueAction(ActionManager.OnPointerOutTrigger,\r\n        //      Building.text_mesh, 'material.alpha', 0.0, 300.0, null, true));\r\n\r\n\r\n        // if (this.type == Building.TYPE.EVENT_SOON) {\r\n        //     var particles = new BABYLON.ParticleSystem(\"Particles_b_\" + this.id, 1000, this.renderer.scene);\r\n        //     particles.particleTexture = this.renderer.materials.marker_textures[this.type];\r\n        //     particles.emitter = this.marker;\r\n        //     particles.emitRate = 10;\r\n\r\n        //     particles.minEmitBox = new BABYLON.Vector3(-0.2, 0.22, 0);\r\n        //     particles.maxEmitBox = new BABYLON.Vector3(0.2, -0.22, 0);\r\n\r\n        //     particles.direction1 = new BABYLON.Vector3(-0.15, -0.2, 0);\r\n        //     particles.direction2 = new BABYLON.Vector3(0.15, -0.5, 0);\r\n        //     particles.minSize = 0.1;\r\n        //     particles.maxSize = 0.1;\r\n\r\n        //     particles.color1 = new BABYLON.Color4(1.0, 1.0, 1.0, 1.0);\r\n        //     particles.color2 = new BABYLON.Color4(1.0, 1.0, 1.0, 1.0);\r\n        //     particles.colorDead = new BABYLON.Color4(1, 1, 1, 0.0);\r\n\r\n        //     particles.blendMode = BABYLON.ParticleSystem.BLENDMODE_STANDARD;\r\n\r\n        //     particles.start();\r\n\r\n        //     this.highlight = Math.random() + this.offset;\r\n        // }\r\n        return marker;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * 创建文字\r\n     * @param cfg {\"name\":\"\",\"position\":\"vec3\",\"material\":\"材质\"}\r\n     * @returns \r\n     */\r\n    public static createTextMesh(scene: Scene, cfg: any): Mesh {\r\n        let options = cfg.options;\r\n        let text_mesh = MeshBuilder.CreatePlane(cfg.name, options, scene);\r\n        text_mesh.scaling.x = 4.0;\r\n        text_mesh.scaling.y = 0.5;\r\n        text_mesh.position.y = 2.1;\r\n        let material = new StandardMaterial(`stand-${cfg.name}`, scene);\r\n        material.diffuseTexture = new DynamicTexture(`dyna-${cfg.name}`,\r\n            { width: 512, height: 64 }, scene, true);\r\n        material.diffuseTexture.hasAlpha = true;\r\n        material.useAlphaFromDiffuseTexture = true;\r\n        material.specularColor = Color3.Black();\r\n        material.emissiveColor = Color3.White();\r\n        material.alpha = 0.0;\r\n        text_mesh.billboardMode = Mesh.BILLBOARDMODE_Y;\r\n        return text_mesh;\r\n    }\r\n\r\n    /**\r\n     * 创建一个三次贝塞尔曲线\r\n     * @param point \r\n     * @returns \r\n     */\r\n    public static BezierLine(point: DeepImmutableObject<Vector3>[]) {\r\n\r\n        const bezier = Curve3.CreateCubicBezier( //通过四个点构建曲线\r\n            point[0], point[1], point[2], point[3],\r\n            60);\r\n\r\n        return bezier\r\n    }\r\n\r\n    /**\r\n     * 自定义条形，挤压，类似于带宽度的线\r\n     * @param width \r\n     * @param path \r\n     * @returns \r\n     */\r\n    public static widthLine(name: string, width: number, path: any, shape: Vector3[] | undefined) {\r\n        const shapeDefault = [\r\n            new Vector3(-width / 2, 0, 0),\r\n            new Vector3(width / 2, 0, 0)\r\n        ];\r\n\r\n        //创建形状\r\n        var extruded = MeshBuilder.ExtrudeShapeCustom(\r\n            name, {\r\n            shape: shape !== undefined ? shape : shapeDefault,\r\n            path: path,\r\n            updatable: true,\r\n            scaleFunction: null,\r\n            sideOrientation: Mesh.DOUBLESIDE\r\n        });\r\n\r\n        return extruded\r\n    }\r\n\r\n    /**\r\n     * 天空例子效果\r\n     */\r\n    public static SkyParticle(scene: Scene) {\r\n        var particleSystem = new ParticleSystem(\"snow\", 2000, scene);\r\n        particleSystem.emitter = new Vector3(0, 120, 0);  // 设置发射器位置为天空的某个点\r\n        particleSystem.minEmitBox = new Vector3(-100, 0, -100);  // 设置发射器的边界范围\r\n        particleSystem.maxEmitBox = new Vector3(100, 0, 100);\r\n        particleSystem.gravity = new Vector3(0, -9.81, 0);  // 设置重力向下\r\n\r\n        particleSystem.particleTexture = new Texture(\"../resources/images/snow.png\", scene);\r\n        particleSystem.color1 = new Color4(1, 1, 1, 1);\r\n        particleSystem.color2 = new Color4(0.8, 0.8, 1, 1);\r\n        particleSystem.minSize = 0.2;\r\n        particleSystem.maxSize = 1.5;\r\n        particleSystem.minLifeTime = 15;\r\n        particleSystem.maxLifeTime = 30;\r\n        particleSystem.emitRate = 240;\r\n\r\n        particleSystem.start();\r\n    }\r\n\r\n\r\n    /**\r\n     * 物体移动拖尾效果\r\n     * @param mesh 物体\r\n     * @param scene \r\n     * @param wid? 轨迹宽度||0.5,参考值：mesh小球的半径\r\n     * @param long? 轨迹长度||30，参考值：40*mesh小球的半径\r\n     */\r\n    public static Tailing(scene: Scene, options: { mesh: any, wid?: number, long?: number }) {\r\n        // 轨迹对象，轨迹的宽度为0.2，轨迹的长度为30\r\n        const width = options.wid || 0.5;\r\n        const length = options.long || 30;\r\n        const trail = new TrailMesh(\"new\", options.mesh, scene, width, length, true);\r\n\r\n        const sourceMat = new StandardMaterial(\"sourceMat\", scene);\r\n        sourceMat.emissiveColor = sourceMat.diffuseColor = Color3.Blue();\r\n        // sourceMat.specularColor = BABYLON.Color3.Black();\r\n\r\n        trail.material = sourceMat;\r\n    }\r\n\r\n\r\n    /**\r\n     * gui文本\r\n     * @param adt 控制器\r\n     * @param mesh 绑定物体\r\n     * @param name 文本内容\r\n     * @returns \r\n     */\r\n    // public static text(adt: any, mesh: Mesh, name: string) {\r\n    //     // 自动计算高度（行数）和宽度\r\n    //     var h = name.split('\\n').length // 计算行数，一个\\n加一行\r\n    //     var wMax = 0 // 计算文本框最大宽度\r\n    //     name.split('\\n').forEach(t => {\r\n    //         var w = 0\r\n    //         var u = t.match(/[\\u4e00-\\u9fa5\\uff00-\\uffef]|[0-9a-zA-Z]/g)\r\n    //         if (u != null) {\r\n    //             u.forEach(function (match: string) {\r\n    //                 if (/[\\u4e00-\\u9fa5\\uff00-\\uffef]/.test(match)) {\r\n    //                     w += 2 // 汉字，n+2\r\n    //                 } else {\r\n    //                     w += 1.2 // 数字、符号、字母，n+1\r\n    //                 }\r\n    //             })\r\n    //         }\r\n    //         if (w > wMax) {\r\n    //             wMax = w\r\n    //         }\r\n    //     })\r\n\r\n    //     const size = 15 // 设置字体大小，同时让框的大小自适应\r\n    //     const width = size * (8 / 15) * wMax + 'px' // 一个单位长度设置位8px\r\n    //     const height = size * (18 / 15) * h + 'px' // h是行数，18px为一行\r\n\r\n    //     // const panel = new BABYLON.GUI.Rectangle('panel') // 创建一个背景\r\n    //     // panel.width = width\r\n    //     // panel.height = height\r\n    //     // panel.background = '#ffffff00' // 背景板颜色\r\n    //     // panel.alpha = 1\r\n    //     // panel.overlapGroup = 0 // 让背景板拥挤时自动调整位置\r\n    //     // adt.addControl(panel) // 添加GUI控制\r\n    //     // panel.linkWithMesh(mesh) // 绑定到物体\r\n    //     // panel.linkOffsetY = 30 // 距离物体的位置，+为向下调整，-为向上调整\r\n\r\n    //     const text = new TextBlock(name, name) // 创建文本，第一个属性为'name'，第二个属性为文本内容\r\n    //     // text.color = '#e5e5e5' // 字体颜色\r\n    //     text.color = '#ffffff' // 字体颜色\r\n    //     text.fontWeight = '30' // 字体粗细\r\n    //     text.fontSizeInPixels = size // 字体大小\r\n    //     text.width = width // 字体外框的大小（边界）\r\n    //     text.height = height\r\n    //     text.textWrapping = true // 开启自动换行\r\n    //     text.alpha = 1\r\n    //     text.linkOffsetYInPixels = 0 // 连接线\r\n    //     text.isReadOnly = true // 标签内容不可选中（网页上点一下可以改）\r\n    //     text.isPointerBlocker = true\r\n    //     adt.addControl(text) // 添加GUI控制\r\n    //     text.linkWithMesh(mesh)\r\n    //     text.linkOffsetY = 0\r\n    //     text.textHorizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT\r\n    //     text.textVerticalAlignment = Control.VERTICAL_ALIGNMENT_TOP\r\n    //     text.overlapGroup = 0\r\n\r\n    //     return text\r\n    // }\r\n\r\n\r\n    /**\r\n     * 3D字体\r\n     * @param name \r\n     * @param text 文本内容\r\n     * @param scene \r\n     * @returns \r\n     */\r\n    public static async Text_3D(name: string, text: string , scene: Scene) {\r\n        const fontData = await (await fetch('/ziti/YouSheBiaoTiHei_Regular.json')).json();\r\n        const text_3d: any = MeshBuilder.CreateText(\r\n            name,\r\n            text,\r\n            fontData,\r\n            {\r\n                size: 1,\r\n                resolution: 64, // 分辨率\r\n                depth: 1,\r\n            },\r\n            scene,\r\n            earcut\r\n        );\r\n        return text_3d\r\n    }\r\n\r\n}",{"ruleId":"148","severity":1,"message":"149","line":2,"column":13,"nodeType":"150","messageId":"151","endLine":2,"endColumn":20},{"ruleId":"148","severity":1,"message":"152","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":22},{"ruleId":"148","severity":1,"message":"153","line":3,"column":41,"nodeType":"150","messageId":"151","endLine":3,"endColumn":55},{"ruleId":"148","severity":1,"message":"154","line":3,"column":73,"nodeType":"150","messageId":"151","endLine":3,"endColumn":82},{"ruleId":"148","severity":1,"message":"155","line":3,"column":84,"nodeType":"150","messageId":"151","endLine":3,"endColumn":96},{"ruleId":"148","severity":1,"message":"156","line":3,"column":98,"nodeType":"150","messageId":"151","endLine":3,"endColumn":109},{"ruleId":"148","severity":1,"message":"157","line":3,"column":111,"nodeType":"150","messageId":"151","endLine":3,"endColumn":122},{"ruleId":"148","severity":1,"message":"158","line":3,"column":138,"nodeType":"150","messageId":"151","endLine":3,"endColumn":148},{"ruleId":"148","severity":1,"message":"159","line":3,"column":158,"nodeType":"150","messageId":"151","endLine":3,"endColumn":172},{"ruleId":"148","severity":1,"message":"160","line":3,"column":182,"nodeType":"150","messageId":"151","endLine":3,"endColumn":191},{"ruleId":"148","severity":1,"message":"161","line":3,"column":193,"nodeType":"150","messageId":"151","endLine":3,"endColumn":202},{"ruleId":"148","severity":1,"message":"162","line":3,"column":204,"nodeType":"150","messageId":"151","endLine":3,"endColumn":212},{"ruleId":"148","severity":1,"message":"163","line":3,"column":233,"nodeType":"150","messageId":"151","endLine":3,"endColumn":248},{"ruleId":"148","severity":1,"message":"164","line":3,"column":250,"nodeType":"150","messageId":"151","endLine":3,"endColumn":269},{"ruleId":"148","severity":1,"message":"165","line":3,"column":289,"nodeType":"150","messageId":"151","endLine":3,"endColumn":305},{"ruleId":"148","severity":1,"message":"166","line":3,"column":316,"nodeType":"150","messageId":"151","endLine":3,"endColumn":323},{"ruleId":"148","severity":1,"message":"167","line":10,"column":13,"nodeType":"150","messageId":"151","endLine":10,"endColumn":22},{"ruleId":"148","severity":1,"message":"168","line":11,"column":13,"nodeType":"150","messageId":"151","endLine":11,"endColumn":18},{"ruleId":"169","severity":1,"message":"170","line":23,"column":20,"nodeType":"171","messageId":"172","endLine":23,"endColumn":23,"suggestions":"173"},{"ruleId":"174","severity":2,"message":"175","line":57,"column":9,"nodeType":"176","messageId":"177","endLine":57,"endColumn":120,"fix":"178"},{"ruleId":"174","severity":2,"message":"175","line":61,"column":9,"nodeType":"176","messageId":"177","endLine":61,"endColumn":86,"fix":"179"},{"ruleId":"174","severity":2,"message":"175","line":63,"column":9,"nodeType":"176","messageId":"177","endLine":63,"endColumn":96,"fix":"180"},{"ruleId":"174","severity":2,"message":"175","line":64,"column":9,"nodeType":"176","messageId":"177","endLine":64,"endColumn":97,"fix":"181"},{"ruleId":"174","severity":2,"message":"175","line":66,"column":9,"nodeType":"176","messageId":"177","endLine":66,"endColumn":96,"fix":"182"},{"ruleId":"174","severity":2,"message":"175","line":67,"column":9,"nodeType":"176","messageId":"177","endLine":67,"endColumn":95,"fix":"183"},{"ruleId":"148","severity":1,"message":"184","line":67,"column":13,"nodeType":"150","messageId":"151","endLine":67,"endColumn":19},{"ruleId":"174","severity":2,"message":"175","line":68,"column":9,"nodeType":"176","messageId":"177","endLine":68,"endColumn":95,"fix":"185"},{"ruleId":"148","severity":1,"message":"186","line":68,"column":13,"nodeType":"150","messageId":"151","endLine":68,"endColumn":19},{"ruleId":"174","severity":2,"message":"175","line":69,"column":9,"nodeType":"176","messageId":"177","endLine":69,"endColumn":94,"fix":"187"},{"ruleId":"148","severity":1,"message":"188","line":69,"column":13,"nodeType":"150","messageId":"151","endLine":69,"endColumn":19},{"ruleId":"174","severity":2,"message":"175","line":70,"column":9,"nodeType":"176","messageId":"177","endLine":70,"endColumn":93,"fix":"189"},{"ruleId":"148","severity":1,"message":"190","line":70,"column":13,"nodeType":"150","messageId":"151","endLine":70,"endColumn":19},{"ruleId":"174","severity":2,"message":"175","line":71,"column":9,"nodeType":"176","messageId":"177","endLine":71,"endColumn":92,"fix":"191"},{"ruleId":"148","severity":1,"message":"192","line":71,"column":13,"nodeType":"150","messageId":"151","endLine":71,"endColumn":19},{"ruleId":"174","severity":2,"message":"175","line":72,"column":9,"nodeType":"176","messageId":"177","endLine":72,"endColumn":26,"fix":"193"},{"ruleId":"174","severity":2,"message":"175","line":73,"column":9,"nodeType":"176","messageId":"177","endLine":73,"endColumn":25,"fix":"194"},{"ruleId":"174","severity":2,"message":"175","line":74,"column":9,"nodeType":"176","messageId":"177","endLine":74,"endColumn":65,"fix":"195"},{"ruleId":"169","severity":1,"message":"170","line":74,"column":24,"nodeType":"171","messageId":"172","endLine":74,"endColumn":27,"suggestions":"196"},{"ruleId":"174","severity":2,"message":"175","line":76,"column":9,"nodeType":"176","messageId":"177","endLine":76,"endColumn":23,"fix":"197"},{"ruleId":"174","severity":2,"message":"175","line":77,"column":9,"nodeType":"176","messageId":"177","endLine":77,"endColumn":40,"fix":"198"},{"ruleId":"174","severity":2,"message":"175","line":80,"column":9,"nodeType":"176","messageId":"177","endLine":80,"endColumn":66,"fix":"199"},{"ruleId":"174","severity":2,"message":"175","line":84,"column":13,"nodeType":"176","messageId":"177","endLine":84,"endColumn":64,"fix":"200"},{"ruleId":"174","severity":2,"message":"175","line":86,"column":13,"nodeType":"176","messageId":"177","endLine":86,"endColumn":81},{"ruleId":"174","severity":2,"message":"175","line":88,"column":13,"nodeType":"176","messageId":"177","endLine":88,"endColumn":35},{"ruleId":"174","severity":2,"message":"175","line":94,"column":17,"nodeType":"176","messageId":"177","endLine":94,"endColumn":41,"fix":"201"},{"ruleId":"174","severity":2,"message":"175","line":95,"column":17,"nodeType":"176","messageId":"177","endLine":95,"endColumn":43,"fix":"202"},{"ruleId":"174","severity":2,"message":"175","line":102,"column":17,"nodeType":"176","messageId":"177","endLine":102,"endColumn":45,"fix":"203"},{"ruleId":"174","severity":2,"message":"175","line":110,"column":17,"nodeType":"176","messageId":"177","endLine":110,"endColumn":30,"fix":"204"},{"ruleId":"174","severity":2,"message":"175","line":111,"column":22,"nodeType":"176","messageId":"177","endLine":111,"endColumn":31,"fix":"205"},{"ruleId":"174","severity":2,"message":"175","line":116,"column":17,"nodeType":"176","messageId":"177","endLine":119,"endColumn":19,"fix":"206"},{"ruleId":"174","severity":2,"message":"175","line":121,"column":17,"nodeType":"176","messageId":"177","endLine":121,"endColumn":107,"fix":"207"},{"ruleId":"169","severity":1,"message":"170","line":121,"column":26,"nodeType":"171","messageId":"172","endLine":121,"endColumn":29,"suggestions":"208"},{"ruleId":"174","severity":2,"message":"175","line":128,"column":18,"nodeType":"176","messageId":"177","endLine":128,"endColumn":27},{"ruleId":"174","severity":2,"message":"175","line":130,"column":21,"nodeType":"176","messageId":"177","endLine":130,"endColumn":44,"fix":"209"},{"ruleId":"169","severity":1,"message":"170","line":130,"column":33,"nodeType":"171","messageId":"172","endLine":130,"endColumn":36,"suggestions":"210"},{"ruleId":"174","severity":2,"message":"175","line":140,"column":21,"nodeType":"176","messageId":"177","endLine":140,"endColumn":85,"fix":"211"},{"ruleId":"174","severity":2,"message":"175","line":143,"column":21,"nodeType":"176","messageId":"177","endLine":143,"endColumn":87,"fix":"212"},{"ruleId":"174","severity":2,"message":"175","line":149,"column":25,"nodeType":"176","messageId":"177","endLine":149,"endColumn":86,"fix":"213"},{"ruleId":"148","severity":1,"message":"214","line":149,"column":29,"nodeType":"150","messageId":"151","endLine":149,"endColumn":33},{"ruleId":"174","severity":2,"message":"175","line":154,"column":21,"nodeType":"176","messageId":"177","endLine":154,"endColumn":103,"fix":"215"},{"ruleId":"169","severity":1,"message":"170","line":154,"column":33,"nodeType":"171","messageId":"172","endLine":154,"endColumn":36,"suggestions":"216"},{"ruleId":"169","severity":1,"message":"170","line":184,"column":42,"nodeType":"171","messageId":"172","endLine":184,"endColumn":45,"suggestions":"217"},{"ruleId":"148","severity":1,"message":"218","line":230,"column":15,"nodeType":"150","messageId":"151","endLine":230,"endColumn":19},{"ruleId":"174","severity":2,"message":"175","line":235,"column":9,"nodeType":"176","messageId":"177","endLine":286,"endColumn":10,"fix":"219"},{"ruleId":"174","severity":2,"message":"175","line":236,"column":13,"nodeType":"176","messageId":"177","endLine":236,"endColumn":87,"fix":"220"},{"ruleId":"174","severity":2,"message":"175","line":237,"column":13,"nodeType":"176","messageId":"177","endLine":237,"endColumn":51,"fix":"221"},{"ruleId":"169","severity":1,"message":"170","line":239,"column":52,"nodeType":"171","messageId":"172","endLine":239,"endColumn":55,"suggestions":"222"},{"ruleId":"169","severity":1,"message":"170","line":246,"column":55,"nodeType":"171","messageId":"172","endLine":246,"endColumn":58,"suggestions":"223"},{"ruleId":"169","severity":1,"message":"170","line":269,"column":55,"nodeType":"171","messageId":"172","endLine":269,"endColumn":58,"suggestions":"224"},{"ruleId":"174","severity":2,"message":"175","line":320,"column":21,"nodeType":"176","messageId":"177","endLine":320,"endColumn":52,"fix":"225"},{"ruleId":"174","severity":2,"message":"175","line":321,"column":21,"nodeType":"176","messageId":"177","endLine":321,"endColumn":51,"fix":"226"},{"ruleId":"174","severity":2,"message":"175","line":322,"column":21,"nodeType":"176","messageId":"177","endLine":322,"endColumn":63,"fix":"227"},{"ruleId":"174","severity":2,"message":"175","line":323,"column":21,"nodeType":"176","messageId":"177","endLine":323,"endColumn":63,"fix":"228"},{"ruleId":"174","severity":2,"message":"175","line":326,"column":21,"nodeType":"176","messageId":"177","endLine":339,"endColumn":22,"fix":"229"},{"ruleId":"174","severity":2,"message":"175","line":340,"column":21,"nodeType":"176","messageId":"177","endLine":340,"endColumn":77,"fix":"230"},{"ruleId":"174","severity":2,"message":"175","line":341,"column":21,"nodeType":"176","messageId":"177","endLine":341,"endColumn":84,"fix":"231"},{"ruleId":"174","severity":2,"message":"175","line":357,"column":13,"nodeType":"176","messageId":"177","endLine":357,"endColumn":44,"fix":"232"},{"ruleId":"174","severity":2,"message":"175","line":358,"column":13,"nodeType":"176","messageId":"177","endLine":358,"endColumn":25,"fix":"233"},{"ruleId":"174","severity":2,"message":"175","line":360,"column":17,"nodeType":"176","messageId":"177","endLine":360,"endColumn":26,"fix":"234"},{"ruleId":"174","severity":2,"message":"175","line":361,"column":17,"nodeType":"176","messageId":"177","endLine":361,"endColumn":77,"fix":"235"},{"ruleId":"148","severity":1,"message":"236","line":3,"column":12,"nodeType":"150","messageId":"151","endLine":3,"endColumn":26},{"ruleId":"148","severity":1,"message":"152","line":3,"column":28,"nodeType":"150","messageId":"151","endLine":3,"endColumn":40},{"ruleId":"148","severity":1,"message":"237","line":3,"column":42,"nodeType":"150","messageId":"151","endLine":3,"endColumn":46},{"ruleId":"148","severity":1,"message":"238","line":4,"column":13,"nodeType":"150","messageId":"151","endLine":4,"endColumn":24},{"ruleId":"239","severity":2,"message":"240","line":18,"column":13,"nodeType":"150","messageId":"241","endLine":18,"endColumn":24,"fix":"242"},{"ruleId":"239","severity":2,"message":"243","line":26,"column":13,"nodeType":"150","messageId":"241","endLine":26,"endColumn":24,"fix":"244"},{"ruleId":"239","severity":2,"message":"240","line":39,"column":13,"nodeType":"150","messageId":"241","endLine":39,"endColumn":24,"fix":"245"},{"ruleId":"239","severity":2,"message":"243","line":47,"column":13,"nodeType":"150","messageId":"241","endLine":47,"endColumn":24,"fix":"246"},{"ruleId":"169","severity":1,"message":"170","line":65,"column":35,"nodeType":"171","messageId":"172","endLine":65,"endColumn":38,"suggestions":"247"},{"ruleId":"169","severity":1,"message":"170","line":65,"column":43,"nodeType":"171","messageId":"172","endLine":65,"endColumn":46,"suggestions":"248"},{"ruleId":"169","severity":1,"message":"170","line":65,"column":51,"nodeType":"171","messageId":"172","endLine":65,"endColumn":54,"suggestions":"249"},{"ruleId":"169","severity":1,"message":"170","line":65,"column":63,"nodeType":"171","messageId":"172","endLine":65,"endColumn":66,"suggestions":"250"},{"ruleId":"148","severity":1,"message":"251","line":3,"column":54,"nodeType":"150","messageId":"151","endLine":3,"endColumn":76},{"ruleId":"148","severity":1,"message":"252","line":6,"column":10,"nodeType":"150","messageId":"151","endLine":6,"endColumn":32},{"ruleId":"148","severity":1,"message":"253","line":6,"column":34,"nodeType":"150","messageId":"151","endLine":6,"endColumn":41},{"ruleId":"148","severity":1,"message":"254","line":6,"column":43,"nodeType":"150","messageId":"151","endLine":6,"endColumn":52},{"ruleId":"169","severity":1,"message":"170","line":18,"column":55,"nodeType":"171","messageId":"172","endLine":18,"endColumn":58,"suggestions":"255"},{"ruleId":"174","severity":2,"message":"175","line":19,"column":9,"nodeType":"176","messageId":"177","endLine":19,"endColumn":26,"fix":"256"},{"ruleId":"239","severity":2,"message":"257","line":20,"column":13,"nodeType":"150","messageId":"241","endLine":20,"endColumn":19,"fix":"258"},{"ruleId":"148","severity":1,"message":"259","line":37,"column":17,"nodeType":"150","messageId":"151","endLine":37,"endColumn":24},{"ruleId":"169","severity":1,"message":"170","line":82,"column":53,"nodeType":"171","messageId":"172","endLine":82,"endColumn":56,"suggestions":"260"},{"ruleId":"239","severity":2,"message":"261","line":83,"column":13,"nodeType":"150","messageId":"241","endLine":83,"endColumn":20,"fix":"262"},{"ruleId":"239","severity":2,"message":"263","line":84,"column":13,"nodeType":"150","messageId":"241","endLine":84,"endColumn":22,"fix":"264"},{"ruleId":"239","severity":2,"message":"265","line":88,"column":13,"nodeType":"150","messageId":"241","endLine":88,"endColumn":21,"fix":"266"},{"ruleId":"169","severity":1,"message":"170","line":120,"column":64,"nodeType":"171","messageId":"172","endLine":120,"endColumn":67,"suggestions":"267"},{"ruleId":"174","severity":2,"message":"175","line":127,"column":9,"nodeType":"176","messageId":"177","endLine":134,"endColumn":12,"fix":"268"},{"ruleId":"174","severity":2,"message":"175","line":143,"column":9,"nodeType":"176","messageId":"177","endLine":143,"endColumn":70,"fix":"269"},{"ruleId":"169","severity":1,"message":"170","line":169,"column":58,"nodeType":"171","messageId":"172","endLine":169,"endColumn":61,"suggestions":"270"},{"ruleId":"169","severity":1,"message":"170","line":257,"column":24,"nodeType":"171","messageId":"172","endLine":257,"endColumn":27,"suggestions":"271"},"@typescript-eslint/no-unused-vars","'BABYLON' is defined but never used.","Identifier","unusedVar","'AbstractMesh' is defined but never used.","'CannonJSPlugin' is defined but never used.","'CreateBox' is defined but never used.","'CreateGround' is defined but never used.","'CreateLines' is defined but never used.","'CreatePlane' is defined but never used.","'CreateText' is defined but never used.","'DynamicTexture' is defined but never used.","'GlowLayer' is defined but never used.","'IFontData' is defined but never used.","'Material' is defined but never used.","'PhysicsImpostor' is defined but never used.","'PointerDragBehavior' is defined but never used.","'StandardMaterial' is defined but never used.","'Vector4' is defined but never used.","'YSBTH_ttf' is defined but never used.","'YSBTH' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["272","273"],"no-var","Unexpected var, use let or const instead.","VariableDeclaration","unexpectedVar",{"range":"274","text":"275"},{"range":"276","text":"275"},{"range":"277","text":"275"},{"range":"278","text":"275"},{"range":"279","text":"275"},{"range":"280","text":"275"},"'color0' is assigned a value but never used.",{"range":"281","text":"275"},"'color1' is assigned a value but never used.",{"range":"282","text":"275"},"'color2' is assigned a value but never used.",{"range":"283","text":"275"},"'color3' is assigned a value but never used.",{"range":"284","text":"275"},"'color4' is assigned a value but never used.",{"range":"285","text":"275"},{"range":"286","text":"275"},{"range":"287","text":"275"},["288","289"],{"range":"290","text":"275"},{"range":"291","text":"275"},{"range":"292","text":"275"},{"range":"293","text":"275"},{"range":"294","text":"275"},{"range":"295","text":"275"},{"range":"296","text":"275"},{"range":"297","text":"275"},{"range":"298","text":"275"},{"range":"299","text":"275"},{"range":"300","text":"275"},["301","302"],{"range":"303","text":"275"},["304","305"],{"range":"306","text":"275"},{"range":"307","text":"275"},{"range":"308","text":"275"},"'name' is assigned a value but never used.",{"range":"309","text":"275"},["310","311"],["312","313"],"'t_3d' is assigned a value but never used.",{"range":"314","text":"275"},{"range":"315","text":"275"},{"range":"316","text":"275"},["317","318"],["319","320"],["321","322"],{"range":"323","text":"275"},{"range":"324","text":"275"},{"range":"325","text":"275"},{"range":"326","text":"275"},{"range":"327","text":"275"},{"range":"328","text":"275"},{"range":"329","text":"275"},{"range":"330","text":"275"},{"range":"331","text":"275"},{"range":"332","text":"275"},{"range":"333","text":"275"},"'ShaderMaterial' is defined but never used.","'Mesh' is defined but never used.","'PBRMaterial' is defined but never used.","prefer-const","'flowTexture' is never reassigned. Use 'const' instead.","useConst",{"range":"334","text":"335"},"'picMaterial' is never reassigned. Use 'const' instead.",{"range":"336","text":"337"},{"range":"338","text":"335"},{"range":"339","text":"337"},["340","341"],["342","343"],["344","345"],["346","347"],"'InterpolateValueAction' is defined but never used.","'AdvancedDynamicTexture' is defined but never used.","'Control' is defined but never used.","'TextBlock' is defined but never used.",["348","349"],{"range":"350","text":"275"},"'marker' is never reassigned. Use 'const' instead.",{"range":"351","text":"352"},"'primary' is defined but never used.",["353","354"],"'options' is never reassigned. Use 'const' instead.",{"range":"355","text":"356"},"'text_mesh' is never reassigned. Use 'const' instead.",{"range":"357","text":"358"},"'material' is never reassigned. Use 'const' instead.",{"range":"359","text":"360"},["361","362"],{"range":"363","text":"275"},{"range":"364","text":"275"},["365","366"],["367","368"],{"messageId":"369","fix":"370","desc":"371"},{"messageId":"372","fix":"373","desc":"374"},[2168,2171],"let",[2450,2453],[2539,2542],[2636,2639],[2767,2770],[2864,2867],[2960,2963],[3056,3059],[3151,3154],[3245,3248],[3338,3341],[3365,3368],[3391,3394],{"messageId":"369","fix":"375","desc":"371"},{"messageId":"372","fix":"376","desc":"374"},[3459,3462],[3483,3486],[3559,3562],[3729,3732],[4086,4089],[4128,4131],[4471,4474],[4703,4706],[4749,4752],[5018,5021],[5205,5208],{"messageId":"369","fix":"377","desc":"371"},{"messageId":"372","fix":"378","desc":"374"},[5562,5565],{"messageId":"369","fix":"379","desc":"371"},{"messageId":"372","fix":"380","desc":"374"},[6000,6003],[6148,6151],[6542,6545],[6759,6762],{"messageId":"369","fix":"381","desc":"371"},{"messageId":"372","fix":"382","desc":"374"},{"messageId":"369","fix":"383","desc":"371"},{"messageId":"372","fix":"384","desc":"374"},[10600,10603],[10641,10644],[10729,10732],{"messageId":"369","fix":"385","desc":"371"},{"messageId":"372","fix":"386","desc":"374"},{"messageId":"369","fix":"387","desc":"371"},{"messageId":"372","fix":"388","desc":"374"},{"messageId":"369","fix":"389","desc":"371"},{"messageId":"372","fix":"390","desc":"374"},[14622,14625],[14675,14678],[14727,14730],[14791,14794],[14859,14862],[15598,15601],[15676,15679],[16205,16208],[16266,16269],[16354,16357],[16381,16384],[393,435],"const flowTexture = new Texture(src, scene);",[716,774],"const picMaterial = new StandardMaterial(\"material\", scene);",[1240,1282],[1563,1621],{"messageId":"369","fix":"391","desc":"371"},{"messageId":"372","fix":"392","desc":"374"},{"messageId":"369","fix":"393","desc":"371"},{"messageId":"372","fix":"394","desc":"374"},{"messageId":"369","fix":"395","desc":"371"},{"messageId":"372","fix":"396","desc":"374"},{"messageId":"369","fix":"397","desc":"371"},{"messageId":"372","fix":"398","desc":"374"},{"messageId":"369","fix":"399","desc":"371"},{"messageId":"372","fix":"400","desc":"374"},[715,718],[742,805],"const marker = MeshBuilder.CreatePlane(cfg.name, options, scene);",{"messageId":"369","fix":"401","desc":"371"},{"messageId":"372","fix":"402","desc":"374"},[3408,3434],"const options = cfg.options;",[3444,3510],"const text_mesh = MeshBuilder.CreatePlane(cfg.name, options, scene);",[3629,3693],"const material = new StandardMaterial(`stand-${cfg.name}`, scene);",{"messageId":"369","fix":"403","desc":"371"},{"messageId":"372","fix":"404","desc":"374"},[4831,4834],[5236,5239],{"messageId":"369","fix":"405","desc":"371"},{"messageId":"372","fix":"406","desc":"374"},{"messageId":"369","fix":"407","desc":"371"},{"messageId":"372","fix":"408","desc":"374"},"suggestUnknown",{"range":"409","text":"410"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"409","text":"411"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"412","text":"410"},{"range":"412","text":"411"},{"range":"413","text":"410"},{"range":"413","text":"411"},{"range":"414","text":"410"},{"range":"414","text":"411"},{"range":"415","text":"410"},{"range":"415","text":"411"},{"range":"416","text":"410"},{"range":"416","text":"411"},{"range":"417","text":"410"},{"range":"417","text":"411"},{"range":"418","text":"410"},{"range":"418","text":"411"},{"range":"419","text":"410"},{"range":"419","text":"411"},{"range":"420","text":"410"},{"range":"420","text":"411"},{"range":"421","text":"410"},{"range":"421","text":"411"},{"range":"422","text":"410"},{"range":"422","text":"411"},{"range":"423","text":"410"},{"range":"423","text":"411"},{"range":"424","text":"410"},{"range":"424","text":"411"},{"range":"425","text":"410"},{"range":"425","text":"411"},{"range":"426","text":"410"},{"range":"426","text":"411"},{"range":"427","text":"410"},{"range":"427","text":"411"},{"range":"428","text":"410"},{"range":"428","text":"411"},[1252,1255],"unknown","never",[3406,3409],[5214,5217],[5574,5577],[6771,6774],[8424,8427],[10822,10825],[11463,11466],[12713,12716],[2111,2114],[2119,2122],[2127,2130],[2139,2142],[693,696],[3386,3389],[4637,4640],[6280,6283],[9560,9563]]