{"ast":null,"code":"import { TransformNode } from \"@babylonjs/core/Meshes/transformNode.js\";\nimport { ContentDisplay3D } from \"./contentDisplay3D.js\";\n/**\n * Class used as a root to all buttons\n */\nexport class AbstractButton3D extends ContentDisplay3D {\n  /**\n   * Creates a new button\n   * @param name defines the control name\n   */\n  constructor(name) {\n    super(name);\n  }\n  _getTypeName() {\n    return \"AbstractButton3D\";\n  }\n  // Mesh association\n  _createNode(scene) {\n    return new TransformNode(\"button\" + this.name, scene);\n  }\n}","map":{"version":3,"names":["TransformNode","ContentDisplay3D","AbstractButton3D","constructor","name","_getTypeName","_createNode","scene"],"sources":["../../../../../dev/gui/src/3D/controls/abstractButton3D.ts"],"sourcesContent":["import { TransformNode } from \"core/Meshes/transformNode\";\r\nimport type { Scene } from \"core/scene\";\r\nimport { ContentDisplay3D } from \"./contentDisplay3D\";\r\n\r\n/**\r\n * Class used as a root to all buttons\r\n */\r\nexport class AbstractButton3D extends ContentDisplay3D {\r\n    /**\r\n     * Creates a new button\r\n     * @param name defines the control name\r\n     */\r\n    constructor(name?: string) {\r\n        super(name);\r\n    }\r\n\r\n    protected _getTypeName(): string {\r\n        return \"AbstractButton3D\";\r\n    }\r\n\r\n    // Mesh association\r\n    protected _createNode(scene: Scene): TransformNode {\r\n        return new TransformNode(\"button\" + this.name, scene);\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAE;AAExB,SAASC,gBAAgB,QAAQ,uBAAqB;AAEtD;;;AAGA,OAAM,MAAOC,gBAAiB,SAAQD,gBAAgB;EAClD;;;;EAIAE,YAAYC,IAAa;IACrB,KAAK,CAACA,IAAI,CAAC;EACf;EAEUC,YAAYA,CAAA;IAClB,OAAO,kBAAkB;EAC7B;EAEA;EACUC,WAAWA,CAACC,KAAY;IAC9B,OAAO,IAAIP,aAAa,CAAC,QAAQ,GAAG,IAAI,CAACI,IAAI,EAAEG,KAAK,CAAC;EACzD"},"metadata":{},"sourceType":"module","externalDependencies":[]}