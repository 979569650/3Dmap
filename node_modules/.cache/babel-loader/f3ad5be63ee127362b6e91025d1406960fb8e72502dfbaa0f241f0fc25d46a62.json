{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __decorate } from \"@babylonjs/core/tslib.es6.js\";\nimport { SerializationHelper, serialize } from \"@babylonjs/core/Misc/decorators.js\";\nimport { Vector2, Vector3, Vector4 } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { Texture } from \"@babylonjs/core/Materials/Textures/texture.js\";\nimport { MaterialDefines } from \"@babylonjs/core/Materials/materialDefines.js\";\nimport { MaterialHelper } from \"@babylonjs/core/Materials/materialHelper.js\";\nimport { PushMaterial } from \"@babylonjs/core/Materials/pushMaterial.js\";\nimport { VertexBuffer } from \"@babylonjs/core/Buffers/buffer.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport { Color4 } from \"@babylonjs/core/Maths/math.color.js\";\nimport { EffectFallbacks } from \"@babylonjs/core/Materials/effectFallbacks.js\";\nimport { Constants } from \"@babylonjs/core/Engines/constants.js\";\nimport \"./shaders/mrdlSliderBar.fragment.js\";\nimport \"./shaders/mrdlSliderBar.vertex.js\";\n/** @internal */\nclass MRDLSliderBarMaterialDefines extends MaterialDefines {\n  constructor() {\n    super();\n    /*\n        \"SKY_ENABLED\", \"BLOB_ENABLE_2\", \"IRIDESCENCE_ENABLED\"\n    */\n    this.SKY_ENABLED = true;\n    this.BLOB_ENABLE_2 = true;\n    this.IRIDESCENCE_ENABLED = true;\n    this._needNormals = true;\n    this._needUVs = true;\n    this.rebuild();\n  }\n}\n/**\n * Class used to render Slider Bar material with MRDL\n */\nexport class MRDLSliderBarMaterial extends PushMaterial {\n  constructor(name, scene) {\n    super(name, scene);\n    /**\n     * Gets or sets the corner Radius on the slider bar.\n     */\n    this.radius = 0.6;\n    /**\n     * Gets or sets the Bevel Front on the slider bar.\n     */\n    this.bevelFront = 0.6;\n    /**\n     * Gets or sets the Bevel Front Stretch on the slider bar.\n     */\n    this.bevelFrontStretch = 0.077;\n    /**\n     * Gets or sets the Bevel Back on the slider bar.\n     */\n    this.bevelBack = 0;\n    /**\n     * Gets or sets the Bevel Back Stretch on the slider bar.\n     */\n    this.bevelBackStretch = 0;\n    /**\n     * Gets or sets the top left Radii Multiplier.\n     */\n    this.radiusTopLeft = 1.0;\n    /**\n     * Gets or sets the top left Radii Multiplier.\n     */\n    this.radiusTopRight = 1.0;\n    /**\n     * Gets or sets the top left Radii Multiplier.\n     */\n    this.radiusBottomLeft = 1.0;\n    /**\n     * Gets or sets the top left Radii Multiplier.\n     */\n    this.radiusBottomRight = 1.0;\n    /**\n     * Gets or sets whether Bulge is enabled.\n     * Default is false.\n     */\n    this.bulgeEnabled = false;\n    /**\n     * Gets or sets the Bulge Height.\n     */\n    this.bulgeHeight = -0.323;\n    /**\n     * Gets or sets the Bulge Radius.\n     */\n    this.bulgeRadius = 0.73;\n    /**\n     * Gets or sets the Sun Intensity.\n     */\n    this.sunIntensity = 1.102;\n    /**\n     * Gets or sets the Sun Theta.\n     */\n    this.sunTheta = 0.76;\n    /**\n     * Gets or sets the Sun Phi.\n     */\n    this.sunPhi = 0.526;\n    /**\n     * Gets or sets the Indirect Diffuse.\n     */\n    this.indirectDiffuse = 0.658;\n    /**\n     * Gets or sets the base albedo.\n     */\n    this.albedo = new Color4(0.0117647, 0.505882, 0.996078, 1);\n    /**\n     * Gets or sets the Specular value.\n     */\n    this.specular = 0;\n    /**\n     * Gets or sets the Shininess value.\n     */\n    this.shininess = 10;\n    /**\n     * Gets or sets the Sharpness value.\n     */\n    this.sharpness = 0;\n    /**\n     * Gets or sets the Subsurface value.\n     */\n    this.subsurface = 0;\n    /**\n     * Gets or sets the left gradient color.\n     */\n    this.leftGradientColor = new Color4(0.0117647, 0.505882, 0.996078, 1);\n    /**\n     * Gets or sets the right gradient color.\n     */\n    this.rightGradientColor = new Color4(0.0117647, 0.505882, 0.996078, 1);\n    /**\n     * Gets or sets the reflection value.\n     */\n    this.reflection = 0.749;\n    /**\n     * Gets or sets the front reflect value.\n     */\n    this.frontReflect = 0;\n    /**\n     * Gets or sets the edge reflect value.\n     */\n    this.edgeReflect = 0.09;\n    /**\n     * Gets or sets the power value.\n     */\n    this.power = 8.13;\n    /**\n     * Gets or sets the sky color.\n     */\n    this.skyColor = new Color4(0.0117647, 0.964706, 0.996078, 1);\n    /**\n     * Gets or sets the horizon color.\n     */\n    this.horizonColor = new Color4(0.0117647, 0.333333, 0.996078, 1);\n    /**\n     * Gets or sets the ground color.\n     */\n    this.groundColor = new Color4(0, 0.254902, 0.996078, 1);\n    /**\n     * Gets or sets the horizon power value.\n     */\n    this.horizonPower = 1;\n    /**\n     * Gets or sets the finger occlusion width value.\n     */\n    this.width = 0.02;\n    /**\n     * Gets or sets the finger occlusion fuzz value.\n     */\n    this.fuzz = 0.5;\n    /**\n     * Gets or sets the minimum finger occlusion fuzz value.\n     */\n    this.minFuzz = 0.001;\n    /**\n     * Gets or sets the finger occlusion clip fade value.\n     */\n    this.clipFade = 0.01;\n    /**\n     * Gets or sets the hue shift value.\n     */\n    this.hueShift = 0;\n    /**\n     * Gets or sets the saturation shift value.\n     */\n    this.saturationShift = 0;\n    /**\n     * Gets or sets the value shift.\n     */\n    this.valueShift = 0;\n    /**\n     * Gets or sets the position of the hover glow effect.\n     */\n    this.blobPosition = new Vector3(0, 0, 0.1);\n    /**\n     * Gets or sets the intensity of the hover glow effect.\n     */\n    this.blobIntensity = 0.5;\n    /**\n     * Gets or sets the near size of the hover glow effect.\n     */\n    this.blobNearSize = 0.01;\n    /**\n     * Gets or sets the far size of the hover glow effect.\n     */\n    this.blobFarSize = 0.03;\n    /**\n     * Gets or sets the distance considered \"near\" to the mesh, which controls the size of the hover glow effect (see blobNearSize).\n     */\n    this.blobNearDistance = 0;\n    /**\n     * Gets or sets the distance considered \"far\" from the mesh, which controls the size of the hover glow effect (see blobFarSize).\n     */\n    this.blobFarDistance = 0.08;\n    /**\n     * Gets or sets the length of the hover glow effect fade.\n     */\n    this.blobFadeLength = 0.576;\n    /**\n     * Gets or sets the progress of the hover glow effect selection animation corresponding to the left pointer (0.0 - 1.0).\n     */\n    this.blobPulse = 0;\n    /**\n     * Gets or sets the opacity of the hover glow effect corresponding to the left pointer (0.0 - 1.0). Default is 0.\n     */\n    this.blobFade = 1;\n    /**\n     * Gets or sets the position of the hover glow effect.\n     */\n    this.blobPosition2 = new Vector3(0.2, 0, 0.1);\n    /**\n     * Gets or sets the size of the hover glow effect when the right pointer is considered \"near\" to the mesh (see blobNearDistance).\n     */\n    this.blobNearSize2 = 0.01;\n    /**\n     * Gets or sets the progress of the hover glow effect selection animation corresponding to the right pointer (0.0 - 1.0).\n     */\n    this.blobPulse2 = 0;\n    /**\n     * Gets or sets the opacity of the hover glow effect corresponding to the right pointer (0.0 - 1.0). Default is 1.\n     */\n    this.blobFade2 = 1;\n    /**\n     * Gets or sets the texture of the hover glow effect.\n     */\n    this.blobTexture = new Texture(\"\", this.getScene());\n    /**\n     * Gets or sets the finger position for left index.\n     */\n    this.leftIndexPosition = new Vector3(0, 0, 1);\n    /**\n     * Gets or sets the finger position for right index.\n     */\n    this.rightIndexPosition = new Vector3(-1, -1, -1);\n    /**\n     * Gets or sets the finger position for left index middle position.\n     */\n    this.leftIndexMiddlePosition = new Vector3(0, 0, 0);\n    /**\n     * Gets or sets the finger position for right index middle position.\n     */\n    this.rightIndexMiddlePosition = new Vector3(0, 0, 0);\n    /**\n     * Gets or sets the Decal Scle for XY.\n     */\n    this.decalScaleXY = new Vector2(1.5, 1.5);\n    /**\n     * Gets or sets decalFrontOnly\n     * Default is true\n     */\n    this.decalFrontOnly = true;\n    /**\n     * Gets or sets the Rim Light intensity.\n     */\n    this.rimIntensity = 0.287;\n    /**\n     * Gets or sets the Rim Light hue shift value.\n     */\n    this.rimHueShift = 0;\n    /**\n     * Gets or sets the Rim Light saturation shift value.\n     */\n    this.rimSaturationShift = 0;\n    /**\n     * Gets or sets the Rim Light value shift.\n     */\n    this.rimValueShift = -1;\n    /**\n     * Gets or sets the intensity of the iridescence effect.\n     */\n    this.iridescenceIntensity = 0;\n    /**\n     * @internal\n     */\n    this.useGlobalLeftIndex = 1.0;\n    /**\n     * @internal\n     */\n    this.useGlobalRightIndex = 1.0;\n    /**\n     * @internal\n     */\n    this.globalLeftIndexTipProximity = 0.0;\n    /**\n     * @internal\n     */\n    this.globalRightIndexTipProximity = 0.0;\n    /**\n     * @internal\n     */\n    this.globalLeftIndexTipPosition = new Vector4(0.5, 0.0, -0.55, 1.0);\n    /**\n     * @internal\n     */\n    this.globaRightIndexTipPosition = new Vector4(0.0, 0.0, 0.0, 1.0);\n    /**\n     * @internal\n     */\n    this.globalLeftThumbTipPosition = new Vector4(0.5, 0.0, -0.55, 1.0);\n    /**\n     * @internal\n     */\n    this.globalRightThumbTipPosition = new Vector4(0.0, 0.0, 0.0, 1.0);\n    /**\n     * @internal\n     */\n    this.globalLeftIndexMiddlePosition = new Vector4(0.5, 0.0, -0.55, 1.0);\n    /**\n     * @internal\n     */\n    this.globalRightIndexMiddlePosition = new Vector4(0.0, 0.0, 0.0, 1.0);\n    this.alphaMode = Constants.ALPHA_DISABLE;\n    this.backFaceCulling = false;\n    this._blueGradientTexture = new Texture(MRDLSliderBarMaterial.BLUE_GRADIENT_TEXTURE_URL, this.getScene(), true, false, Texture.NEAREST_SAMPLINGMODE);\n    this._decalTexture = new Texture(\"\", this.getScene());\n    this._reflectionMapTexture = new Texture(\"\", this.getScene());\n    this._indirectEnvTexture = new Texture(\"\", this.getScene());\n  }\n  needAlphaBlending() {\n    return false;\n  }\n  needAlphaTesting() {\n    return false;\n  }\n  getAlphaTestTexture() {\n    return null;\n  }\n  // Methods\n  isReadyForSubMesh(mesh, subMesh) {\n    if (this.isFrozen) {\n      if (subMesh.effect && subMesh.effect._wasPreviouslyReady) {\n        return true;\n      }\n    }\n    if (!subMesh.materialDefines) {\n      subMesh.materialDefines = new MRDLSliderBarMaterialDefines();\n    }\n    const defines = subMesh.materialDefines;\n    const scene = this.getScene();\n    if (this._isReadyForSubMesh(subMesh)) {\n      return true;\n    }\n    const engine = scene.getEngine();\n    // Attribs\n    MaterialHelper.PrepareDefinesForAttributes(mesh, defines, false, false);\n    // Get correct effect\n    if (defines.isDirty) {\n      defines.markAsProcessed();\n      scene.resetCachedMaterial();\n      // Fallbacks\n      const fallbacks = new EffectFallbacks();\n      if (defines.FOG) {\n        fallbacks.addFallback(1, \"FOG\");\n      }\n      MaterialHelper.HandleFallbacksForShadows(defines, fallbacks);\n      defines.IMAGEPROCESSINGPOSTPROCESS = scene.imageProcessingConfiguration.applyByPostProcess;\n      //Attributes\n      const attribs = [VertexBuffer.PositionKind];\n      if (defines.NORMAL) {\n        attribs.push(VertexBuffer.NormalKind);\n      }\n      if (defines.UV1) {\n        attribs.push(VertexBuffer.UVKind);\n      }\n      if (defines.UV2) {\n        attribs.push(VertexBuffer.UV2Kind);\n      }\n      if (defines.VERTEXCOLOR) {\n        attribs.push(VertexBuffer.ColorKind);\n      }\n      if (defines.TANGENT) {\n        attribs.push(VertexBuffer.TangentKind);\n      }\n      MaterialHelper.PrepareAttributesForInstances(attribs, defines);\n      // Legacy browser patch\n      const shaderName = \"mrdlSliderBar\";\n      const join = defines.toString();\n      const uniforms = [\"world\", \"viewProjection\", \"cameraPosition\", \"_Radius_\", \"_Bevel_Front_\", \"_Bevel_Front_Stretch_\", \"_Bevel_Back_\", \"_Bevel_Back_Stretch_\", \"_Radius_Top_Left_\", \"_Radius_Top_Right_\", \"_Radius_Bottom_Left_\", \"_Radius_Bottom_Right_\", \"_Bulge_Enabled_\", \"_Bulge_Height_\", \"_Bulge_Radius_\", \"_Sun_Intensity_\", \"_Sun_Theta_\", \"_Sun_Phi_\", \"_Indirect_Diffuse_\", \"_Albedo_\", \"_Specular_\", \"_Shininess_\", \"_Sharpness_\", \"_Subsurface_\", \"_Left_Color_\", \"_Right_Color_\", \"_Reflection_\", \"_Front_Reflect_\", \"_Edge_Reflect_\", \"_Power_\", \"_Sky_Color_\", \"_Horizon_Color_\", \"_Ground_Color_\", \"_Horizon_Power_\", \"_Reflection_Map_\", \"_Indirect_Environment_\", \"_Width_\", \"_Fuzz_\", \"_Min_Fuzz_\", \"_Clip_Fade_\", \"_Hue_Shift_\", \"_Saturation_Shift_\", \"_Value_Shift_\", \"_Blob_Position_\", \"_Blob_Intensity_\", \"_Blob_Near_Size_\", \"_Blob_Far_Size_\", \"_Blob_Near_Distance_\", \"_Blob_Far_Distance_\", \"_Blob_Fade_Length_\", \"_Blob_Pulse_\", \"_Blob_Fade_\", \"_Blob_Texture_\", \"_Blob_Position_2_\", \"_Blob_Near_Size_2_\", \"_Blob_Pulse_2_\", \"_Blob_Fade_2_\", \"_Left_Index_Pos_\", \"_Right_Index_Pos_\", \"_Left_Index_Middle_Pos_\", \"_Right_Index_Middle_Pos_\", \"_Decal_\", \"_Decal_Scale_XY_\", \"_Decal_Front_Only_\", \"_Rim_Intensity_\", \"_Rim_Texture_\", \"_Rim_Hue_Shift_\", \"_Rim_Saturation_Shift_\", \"_Rim_Value_Shift_\", \"_Iridescence_Intensity_\", \"_Iridescence_Texture_\", \"Use_Global_Left_Index\", \"Use_Global_Right_Index\", \"Global_Left_Index_Tip_Position\", \"Global_Right_Index_Tip_Position\", \"Global_Left_Thumb_Tip_Position\", \"Global_Right_Thumb_Tip_Position\", \"Global_Left_Index_Middle_Position;\", \"Global_Right_Index_Middle_Position\", \"Global_Left_Index_Tip_Proximity\", \"Global_Right_Index_Tip_Proximity\"];\n      const samplers = [\"_Rim_Texture_\", \"_Iridescence_Texture_\"];\n      const uniformBuffers = new Array();\n      MaterialHelper.PrepareUniformsAndSamplersList({\n        uniformsNames: uniforms,\n        uniformBuffersNames: uniformBuffers,\n        samplers: samplers,\n        defines: defines,\n        maxSimultaneousLights: 4\n      });\n      subMesh.setEffect(scene.getEngine().createEffect(shaderName, {\n        attributes: attribs,\n        uniformsNames: uniforms,\n        uniformBuffersNames: uniformBuffers,\n        samplers: samplers,\n        defines: join,\n        fallbacks: fallbacks,\n        onCompiled: this.onCompiled,\n        onError: this.onError,\n        indexParameters: {\n          maxSimultaneousLights: 4\n        }\n      }, engine), defines, this._materialContext);\n    }\n    if (!subMesh.effect || !subMesh.effect.isReady()) {\n      return false;\n    }\n    defines._renderId = scene.getRenderId();\n    subMesh.effect._wasPreviouslyReady = true;\n    return true;\n  }\n  bindForSubMesh(world, mesh, subMesh) {\n    const defines = subMesh.materialDefines;\n    if (!defines) {\n      return;\n    }\n    const effect = subMesh.effect;\n    if (!effect) {\n      return;\n    }\n    this._activeEffect = effect;\n    // Matrices\n    this.bindOnlyWorldMatrix(world);\n    this._activeEffect.setMatrix(\"viewProjection\", this.getScene().getTransformMatrix());\n    this._activeEffect.setVector3(\"cameraPosition\", this.getScene().activeCamera.position);\n    // \"Round Rect\"\n    this._activeEffect.setFloat(\"_Radius_\", this.radius);\n    this._activeEffect.setFloat(\"_Bevel_Front_\", this.bevelFront);\n    this._activeEffect.setFloat(\"_Bevel_Front_Stretch_\", this.bevelFrontStretch);\n    this._activeEffect.setFloat(\"_Bevel_Back_\", this.bevelBack);\n    this._activeEffect.setFloat(\"_Bevel_Back_Stretch_\", this.bevelBackStretch);\n    // \"Radii Multipliers\"\n    this._activeEffect.setFloat(\"_Radius_Top_Left_\", this.radiusTopLeft);\n    this._activeEffect.setFloat(\"_Radius_Top_Right_\", this.radiusTopRight);\n    this._activeEffect.setFloat(\"_Radius_Bottom_Left_\", this.radiusBottomLeft);\n    this._activeEffect.setFloat(\"_Radius_Bottom_Right_\", this.radiusBottomRight);\n    // \"Bulge\"\n    this._activeEffect.setFloat(\"_Bulge_Enabled_\", this.bulgeEnabled ? 1.0 : 0.0);\n    this._activeEffect.setFloat(\"_Bulge_Height_\", this.bulgeHeight);\n    this._activeEffect.setFloat(\"_Bulge_Radius_\", this.bulgeRadius);\n    // \"Sun\"\n    this._activeEffect.setFloat(\"_Sun_Intensity_\", this.sunIntensity);\n    this._activeEffect.setFloat(\"_Sun_Theta_\", this.sunTheta);\n    this._activeEffect.setFloat(\"_Sun_Phi_\", this.sunPhi);\n    this._activeEffect.setFloat(\"_Indirect_Diffuse_\", this.indirectDiffuse);\n    // \"Diffuse And Specular\"\n    this._activeEffect.setDirectColor4(\"_Albedo_\", this.albedo);\n    this._activeEffect.setFloat(\"_Specular_\", this.specular);\n    this._activeEffect.setFloat(\"_Shininess_\", this.shininess);\n    this._activeEffect.setFloat(\"_Sharpness_\", this.sharpness);\n    this._activeEffect.setFloat(\"_Subsurface_\", this.subsurface);\n    // \"Gradient\"\n    this._activeEffect.setDirectColor4(\"_Left_Color_\", this.leftGradientColor);\n    this._activeEffect.setDirectColor4(\"_Right_Color_\", this.rightGradientColor);\n    // \"Reflection\"\n    this._activeEffect.setFloat(\"_Reflection_\", this.reflection);\n    this._activeEffect.setFloat(\"_Front_Reflect_\", this.frontReflect);\n    this._activeEffect.setFloat(\"_Edge_Reflect_\", this.edgeReflect);\n    this._activeEffect.setFloat(\"_Power_\", this.power);\n    // \"Sky Environment\"\n    //define SKY_ENABLED true;\n    this._activeEffect.setDirectColor4(\"_Sky_Color_\", this.skyColor);\n    this._activeEffect.setDirectColor4(\"_Horizon_Color_\", this.horizonColor);\n    this._activeEffect.setDirectColor4(\"_Ground_Color_\", this.groundColor);\n    this._activeEffect.setFloat(\"_Horizon_Power_\", this.horizonPower);\n    // \"Mapped Environment\"\n    //define ENV_ENABLE false;\n    this._activeEffect.setTexture(\"_Reflection_Map_\", this._reflectionMapTexture);\n    this._activeEffect.setTexture(\"_Indirect_Environment_\", this._indirectEnvTexture);\n    // \"FingerOcclusion\"\n    //define OCCLUSION_ENABLED false;\n    this._activeEffect.setFloat(\"_Width_\", this.width);\n    this._activeEffect.setFloat(\"_Fuzz_\", this.fuzz);\n    this._activeEffect.setFloat(\"_Min_Fuzz_\", this.minFuzz);\n    this._activeEffect.setFloat(\"_Clip_Fade_\", this.clipFade);\n    // \"View Based Color Shift\"\n    this._activeEffect.setFloat(\"_Hue_Shift_\", this.hueShift);\n    this._activeEffect.setFloat(\"_Saturation_Shift_\", this.saturationShift);\n    this._activeEffect.setFloat(\"_Value_Shift_\", this.valueShift);\n    // \"Blob\"\n    //define BLOB_ENABLE false;\n    this._activeEffect.setVector3(\"_Blob_Position_\", this.blobPosition);\n    this._activeEffect.setFloat(\"_Blob_Intensity_\", this.blobIntensity);\n    this._activeEffect.setFloat(\"_Blob_Near_Size_\", this.blobNearSize);\n    this._activeEffect.setFloat(\"_Blob_Far_Size_\", this.blobFarSize);\n    this._activeEffect.setFloat(\"_Blob_Near_Distance_\", this.blobNearDistance);\n    this._activeEffect.setFloat(\"_Blob_Far_Distance_\", this.blobFarDistance);\n    this._activeEffect.setFloat(\"_Blob_Fade_Length_\", this.blobFadeLength);\n    this._activeEffect.setFloat(\"_Blob_Pulse_\", this.blobPulse);\n    this._activeEffect.setFloat(\"_Blob_Fade_\", this.blobFade);\n    // \"Blob Texture\"\n    this._activeEffect.setTexture(\"_Blob_Texture_\", this.blobTexture);\n    // \"Blob 2\"\n    //define BLOB_ENABLE_2 true;\n    this._activeEffect.setVector3(\"_Blob_Position_2_\", this.blobPosition2);\n    this._activeEffect.setFloat(\"_Blob_Near_Size_2_\", this.blobNearSize2);\n    this._activeEffect.setFloat(\"_Blob_Pulse_2_\", this.blobPulse2);\n    this._activeEffect.setFloat(\"_Blob_Fade_2_\", this.blobFade2);\n    // \"Finger Positions\"\n    this._activeEffect.setVector3(\"_Left_Index_Pos_\", this.leftIndexPosition);\n    this._activeEffect.setVector3(\"_Right_Index_Pos_\", this.rightIndexPosition);\n    this._activeEffect.setVector3(\"_Left_Index_Middle_Pos_\", this.leftIndexMiddlePosition);\n    this._activeEffect.setVector3(\"_Right_Index_Middle_Pos_\", this.rightIndexMiddlePosition);\n    // \"Decal Texture\"\n    //define DECAL_ENABLE false;\n    this._activeEffect.setTexture(\"_Decal_\", this._decalTexture);\n    this._activeEffect.setVector2(\"_Decal_Scale_XY_\", this.decalScaleXY);\n    this._activeEffect.setFloat(\"_Decal_Front_Only_\", this.decalFrontOnly ? 1.0 : 0.0);\n    // \"Rim Light\"\n    this._activeEffect.setFloat(\"_Rim_Intensity_\", this.rimIntensity);\n    this._activeEffect.setTexture(\"_Rim_Texture_\", this._blueGradientTexture);\n    this._activeEffect.setFloat(\"_Rim_Hue_Shift_\", this.rimHueShift);\n    this._activeEffect.setFloat(\"_Rim_Saturation_Shift_\", this.rimSaturationShift);\n    this._activeEffect.setFloat(\"_Rim_Value_Shift_\", this.rimValueShift);\n    // \"Iridescence\"\n    //define IRIDESCENCE_ENABLED true;\n    this._activeEffect.setFloat(\"_Iridescence_Intensity_\", this.iridescenceIntensity);\n    this._activeEffect.setTexture(\"_Iridescence_Texture_\", this._blueGradientTexture);\n    // Global inputs\n    this._activeEffect.setFloat(\"Use_Global_Left_Index\", this.useGlobalLeftIndex);\n    this._activeEffect.setFloat(\"Use_Global_Right_Index\", this.useGlobalRightIndex);\n    this._activeEffect.setVector4(\"Global_Left_Index_Tip_Position\", this.globalLeftIndexTipPosition);\n    this._activeEffect.setVector4(\"Global_Right_Index_Tip_Position\", this.globaRightIndexTipPosition);\n    this._activeEffect.setVector4(\"Global_Left_Thumb_Tip_Position\", this.globalLeftThumbTipPosition);\n    this._activeEffect.setVector4(\"Global_Right_Thumb_Tip_Position\", this.globalRightThumbTipPosition);\n    this._activeEffect.setVector4(\"Global_Left_Index_Middle_Position\", this.globalLeftIndexMiddlePosition);\n    this._activeEffect.setVector4(\"Global_Right_Index_Middle_Position\", this.globalRightIndexMiddlePosition);\n    this._activeEffect.setFloat(\"Global_Left_Index_Tip_Proximity\", this.globalLeftIndexTipProximity);\n    this._activeEffect.setFloat(\"Global_Right_Index_Tip_Proximity\", this.globalRightIndexTipProximity);\n    this._afterBind(mesh, this._activeEffect);\n  }\n  /**\n   * Get the list of animatables in the material.\n   * @returns the list of animatables object used in the material\n   */\n  getAnimatables() {\n    return [];\n  }\n  dispose(forceDisposeEffect) {\n    super.dispose(forceDisposeEffect);\n    this._reflectionMapTexture.dispose();\n    this._indirectEnvTexture.dispose();\n    this._blueGradientTexture.dispose();\n    this._decalTexture.dispose();\n  }\n  clone(name) {\n    return SerializationHelper.Clone(() => new MRDLSliderBarMaterial(name, this.getScene()), this);\n  }\n  serialize() {\n    const serializationObject = super.serialize();\n    serializationObject.customType = \"BABYLON.MRDLSliderBarMaterial\";\n    return serializationObject;\n  }\n  getClassName() {\n    return \"MRDLSliderBarMaterial\";\n  }\n  // Statics\n  static Parse(source, scene, rootUrl) {\n    return SerializationHelper.Parse(() => new MRDLSliderBarMaterial(source.name, scene), source, scene, rootUrl);\n  }\n}\n/**\n * URL pointing to the texture used to define the coloring for the Iridescent Map effect.\n */\nMRDLSliderBarMaterial.BLUE_GRADIENT_TEXTURE_URL = \"https://assets.babylonjs.com/meshes/MRTK/MRDL/mrtk-mrdl-blue-gradient.png\";\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"radius\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"bevelFront\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"bevelFrontStretch\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"bevelBack\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"bevelBackStretch\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"radiusTopLeft\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"radiusTopRight\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"radiusBottomLeft\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"radiusBottomRight\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"bulgeEnabled\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"bulgeHeight\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"bulgeRadius\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"sunIntensity\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"sunTheta\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"sunPhi\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"indirectDiffuse\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"albedo\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"specular\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"shininess\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"sharpness\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"subsurface\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"leftGradientColor\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"rightGradientColor\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"reflection\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"frontReflect\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"edgeReflect\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"power\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"skyColor\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"horizonColor\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"groundColor\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"horizonPower\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"width\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"fuzz\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"minFuzz\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"clipFade\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"hueShift\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"saturationShift\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"valueShift\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"blobPosition\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"blobIntensity\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"blobNearSize\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"blobFarSize\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"blobNearDistance\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"blobFarDistance\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"blobFadeLength\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"blobPulse\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"blobFade\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"blobPosition2\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"blobNearSize2\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"blobPulse2\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"blobFade2\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"blobTexture\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"leftIndexPosition\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"rightIndexPosition\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"leftIndexMiddlePosition\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"rightIndexMiddlePosition\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"decalScaleXY\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"decalFrontOnly\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"rimIntensity\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"rimHueShift\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"rimSaturationShift\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"rimValueShift\", void 0);\n__decorate([serialize()], MRDLSliderBarMaterial.prototype, \"iridescenceIntensity\", void 0);\nRegisterClass(\"BABYLON.GUI.MRDLSliderBarMaterial\", MRDLSliderBarMaterial);","map":{"version":3,"names":["SerializationHelper","serialize","Vector2","Vector3","Vector4","Texture","MaterialDefines","MaterialHelper","PushMaterial","VertexBuffer","RegisterClass","Color4","EffectFallbacks","Constants","MRDLSliderBarMaterialDefines","constructor","SKY_ENABLED","BLOB_ENABLE_2","IRIDESCENCE_ENABLED","_needNormals","_needUVs","rebuild","MRDLSliderBarMaterial","name","scene","radius","bevelFront","bevelFrontStretch","bevelBack","bevelBackStretch","radiusTopLeft","radiusTopRight","radiusBottomLeft","radiusBottomRight","bulgeEnabled","bulgeHeight","bulgeRadius","sunIntensity","sunTheta","sunPhi","indirectDiffuse","albedo","specular","shininess","sharpness","subsurface","leftGradientColor","rightGradientColor","reflection","frontReflect","edgeReflect","power","skyColor","horizonColor","groundColor","horizonPower","width","fuzz","minFuzz","clipFade","hueShift","saturationShift","valueShift","blobPosition","blobIntensity","blobNearSize","blobFarSize","blobNearDistance","blobFarDistance","blobFadeLength","blobPulse","blobFade","blobPosition2","blobNearSize2","blobPulse2","blobFade2","blobTexture","getScene","leftIndexPosition","rightIndexPosition","leftIndexMiddlePosition","rightIndexMiddlePosition","decalScaleXY","decalFrontOnly","rimIntensity","rimHueShift","rimSaturationShift","rimValueShift","iridescenceIntensity","useGlobalLeftIndex","useGlobalRightIndex","globalLeftIndexTipProximity","globalRightIndexTipProximity","globalLeftIndexTipPosition","globaRightIndexTipPosition","globalLeftThumbTipPosition","globalRightThumbTipPosition","globalLeftIndexMiddlePosition","globalRightIndexMiddlePosition","alphaMode","ALPHA_DISABLE","backFaceCulling","_blueGradientTexture","BLUE_GRADIENT_TEXTURE_URL","NEAREST_SAMPLINGMODE","_decalTexture","_reflectionMapTexture","_indirectEnvTexture","needAlphaBlending","needAlphaTesting","getAlphaTestTexture","isReadyForSubMesh","mesh","subMesh","isFrozen","effect","_wasPreviouslyReady","materialDefines","defines","_isReadyForSubMesh","engine","getEngine","PrepareDefinesForAttributes","isDirty","markAsProcessed","resetCachedMaterial","fallbacks","FOG","addFallback","HandleFallbacksForShadows","IMAGEPROCESSINGPOSTPROCESS","imageProcessingConfiguration","applyByPostProcess","attribs","PositionKind","NORMAL","push","NormalKind","UV1","UVKind","UV2","UV2Kind","VERTEXCOLOR","ColorKind","TANGENT","TangentKind","PrepareAttributesForInstances","shaderName","join","toString","uniforms","samplers","uniformBuffers","Array","PrepareUniformsAndSamplersList","uniformsNames","uniformBuffersNames","maxSimultaneousLights","setEffect","createEffect","attributes","onCompiled","onError","indexParameters","_materialContext","isReady","_renderId","getRenderId","bindForSubMesh","world","_activeEffect","bindOnlyWorldMatrix","setMatrix","getTransformMatrix","setVector3","activeCamera","position","setFloat","setDirectColor4","setTexture","setVector2","setVector4","_afterBind","getAnimatables","dispose","forceDisposeEffect","clone","Clone","serializationObject","customType","getClassName","Parse","source","rootUrl","__decorate"],"sources":["../../../../../../dev/gui/src/3D/materials/mrdl/mrdlSliderBarMaterial.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\r\nimport type { Nullable } from \"core/types\";\r\nimport { SerializationHelper, serialize } from \"core/Misc/decorators\";\r\nimport type { Matrix } from \"core/Maths/math.vector\";\r\nimport { Vector2, Vector3, Vector4 } from \"core/Maths/math.vector\";\r\nimport type { IAnimatable } from \"core/Animations/animatable.interface\";\r\nimport type { BaseTexture } from \"core/Materials/Textures/baseTexture\";\r\nimport { Texture } from \"core/Materials/Textures/texture\";\r\nimport { MaterialDefines } from \"core/Materials/materialDefines\";\r\nimport { MaterialHelper } from \"core/Materials/materialHelper\";\r\nimport type { IEffectCreationOptions } from \"core/Materials/effect\";\r\nimport { PushMaterial } from \"core/Materials/pushMaterial\";\r\nimport { VertexBuffer } from \"core/Buffers/buffer\";\r\nimport type { AbstractMesh } from \"core/Meshes/abstractMesh\";\r\nimport type { SubMesh } from \"core/Meshes/subMesh\";\r\nimport type { Mesh } from \"core/Meshes/mesh\";\r\nimport type { Scene } from \"core/scene\";\r\nimport { RegisterClass } from \"core/Misc/typeStore\";\r\nimport { Color4 } from \"core/Maths/math.color\";\r\nimport { EffectFallbacks } from \"core/Materials/effectFallbacks\";\r\nimport { Constants } from \"core/Engines/constants\";\r\n\r\nimport \"./shaders/mrdlSliderBar.fragment\";\r\nimport \"./shaders/mrdlSliderBar.vertex\";\r\n\r\n/** @internal */\r\nclass MRDLSliderBarMaterialDefines extends MaterialDefines {\r\n    /*\r\n        \"SKY_ENABLED\", \"BLOB_ENABLE_2\", \"IRIDESCENCE_ENABLED\"\r\n    */\r\n    public SKY_ENABLED = true;\r\n    public BLOB_ENABLE_2 = true;\r\n    public IRIDESCENCE_ENABLED = true;\r\n\r\n    constructor() {\r\n        super();\r\n        this._needNormals = true;\r\n        this._needUVs = true;\r\n        this.rebuild();\r\n    }\r\n}\r\n\r\n/**\r\n * Class used to render Slider Bar material with MRDL\r\n */\r\nexport class MRDLSliderBarMaterial extends PushMaterial {\r\n    /**\r\n     * URL pointing to the texture used to define the coloring for the Iridescent Map effect.\r\n     */\r\n    public static BLUE_GRADIENT_TEXTURE_URL = \"https://assets.babylonjs.com/meshes/MRTK/MRDL/mrtk-mrdl-blue-gradient.png\";\r\n    private _blueGradientTexture: Texture;\r\n    private _decalTexture: Texture;\r\n    private _reflectionMapTexture: Texture;\r\n    private _indirectEnvTexture: Texture;\r\n\r\n    /**\r\n     * Gets or sets the corner Radius on the slider bar.\r\n     */\r\n    @serialize()\r\n    public radius = 0.6;\r\n\r\n    /**\r\n     * Gets or sets the Bevel Front on the slider bar.\r\n     */\r\n    @serialize()\r\n    public bevelFront = 0.6;\r\n\r\n    /**\r\n     * Gets or sets the Bevel Front Stretch on the slider bar.\r\n     */\r\n    @serialize()\r\n    public bevelFrontStretch = 0.077;\r\n\r\n    /**\r\n     * Gets or sets the Bevel Back on the slider bar.\r\n     */\r\n    @serialize()\r\n    public bevelBack = 0;\r\n\r\n    /**\r\n     * Gets or sets the Bevel Back Stretch on the slider bar.\r\n     */\r\n    @serialize()\r\n    public bevelBackStretch = 0;\r\n\r\n    /**\r\n     * Gets or sets the top left Radii Multiplier.\r\n     */\r\n    @serialize()\r\n    public radiusTopLeft = 1.0;\r\n\r\n    /**\r\n     * Gets or sets the top left Radii Multiplier.\r\n     */\r\n    @serialize()\r\n    public radiusTopRight = 1.0;\r\n\r\n    /**\r\n     * Gets or sets the top left Radii Multiplier.\r\n     */\r\n    @serialize()\r\n    public radiusBottomLeft = 1.0;\r\n\r\n    /**\r\n     * Gets or sets the top left Radii Multiplier.\r\n     */\r\n    @serialize()\r\n    public radiusBottomRight = 1.0;\r\n\r\n    /**\r\n     * Gets or sets whether Bulge is enabled.\r\n     * Default is false.\r\n     */\r\n    @serialize()\r\n    public bulgeEnabled = false;\r\n\r\n    /**\r\n     * Gets or sets the Bulge Height.\r\n     */\r\n    @serialize()\r\n    public bulgeHeight = -0.323;\r\n\r\n    /**\r\n     * Gets or sets the Bulge Radius.\r\n     */\r\n    @serialize()\r\n    public bulgeRadius = 0.73;\r\n\r\n    /**\r\n     * Gets or sets the Sun Intensity.\r\n     */\r\n    @serialize()\r\n    public sunIntensity = 1.102;\r\n\r\n    /**\r\n     * Gets or sets the Sun Theta.\r\n     */\r\n    @serialize()\r\n    public sunTheta = 0.76;\r\n\r\n    /**\r\n     * Gets or sets the Sun Phi.\r\n     */\r\n    @serialize()\r\n    public sunPhi = 0.526;\r\n\r\n    /**\r\n     * Gets or sets the Indirect Diffuse.\r\n     */\r\n    @serialize()\r\n    public indirectDiffuse = 0.658;\r\n\r\n    /**\r\n     * Gets or sets the base albedo.\r\n     */\r\n    @serialize()\r\n    public albedo = new Color4(0.0117647, 0.505882, 0.996078, 1);\r\n\r\n    /**\r\n     * Gets or sets the Specular value.\r\n     */\r\n    @serialize()\r\n    public specular = 0;\r\n\r\n    /**\r\n     * Gets or sets the Shininess value.\r\n     */\r\n    @serialize()\r\n    public shininess = 10;\r\n\r\n    /**\r\n     * Gets or sets the Sharpness value.\r\n     */\r\n    @serialize()\r\n    public sharpness = 0;\r\n\r\n    /**\r\n     * Gets or sets the Subsurface value.\r\n     */\r\n    @serialize()\r\n    public subsurface = 0;\r\n\r\n    /**\r\n     * Gets or sets the left gradient color.\r\n     */\r\n    @serialize()\r\n    public leftGradientColor = new Color4(0.0117647, 0.505882, 0.996078, 1);\r\n\r\n    /**\r\n     * Gets or sets the right gradient color.\r\n     */\r\n    @serialize()\r\n    public rightGradientColor = new Color4(0.0117647, 0.505882, 0.996078, 1);\r\n\r\n    /**\r\n     * Gets or sets the reflection value.\r\n     */\r\n    @serialize()\r\n    public reflection = 0.749;\r\n\r\n    /**\r\n     * Gets or sets the front reflect value.\r\n     */\r\n    @serialize()\r\n    public frontReflect = 0;\r\n\r\n    /**\r\n     * Gets or sets the edge reflect value.\r\n     */\r\n    @serialize()\r\n    public edgeReflect = 0.09;\r\n\r\n    /**\r\n     * Gets or sets the power value.\r\n     */\r\n    @serialize()\r\n    public power = 8.13;\r\n\r\n    /**\r\n     * Gets or sets the sky color.\r\n     */\r\n    @serialize()\r\n    public skyColor = new Color4(0.0117647, 0.964706, 0.996078, 1);\r\n\r\n    /**\r\n     * Gets or sets the horizon color.\r\n     */\r\n    @serialize()\r\n    public horizonColor = new Color4(0.0117647, 0.333333, 0.996078, 1);\r\n\r\n    /**\r\n     * Gets or sets the ground color.\r\n     */\r\n    @serialize()\r\n    public groundColor = new Color4(0, 0.254902, 0.996078, 1);\r\n\r\n    /**\r\n     * Gets or sets the horizon power value.\r\n     */\r\n    @serialize()\r\n    public horizonPower = 1;\r\n\r\n    /**\r\n     * Gets or sets the finger occlusion width value.\r\n     */\r\n    @serialize()\r\n    public width = 0.02;\r\n\r\n    /**\r\n     * Gets or sets the finger occlusion fuzz value.\r\n     */\r\n    @serialize()\r\n    public fuzz = 0.5;\r\n\r\n    /**\r\n     * Gets or sets the minimum finger occlusion fuzz value.\r\n     */\r\n    @serialize()\r\n    public minFuzz = 0.001;\r\n\r\n    /**\r\n     * Gets or sets the finger occlusion clip fade value.\r\n     */\r\n    @serialize()\r\n    public clipFade = 0.01;\r\n\r\n    /**\r\n     * Gets or sets the hue shift value.\r\n     */\r\n    @serialize()\r\n    public hueShift = 0;\r\n\r\n    /**\r\n     * Gets or sets the saturation shift value.\r\n     */\r\n    @serialize()\r\n    public saturationShift = 0;\r\n\r\n    /**\r\n     * Gets or sets the value shift.\r\n     */\r\n    @serialize()\r\n    public valueShift = 0;\r\n\r\n    /**\r\n     * Gets or sets the position of the hover glow effect.\r\n     */\r\n    @serialize()\r\n    public blobPosition = new Vector3(0, 0, 0.1);\r\n\r\n    /**\r\n     * Gets or sets the intensity of the hover glow effect.\r\n     */\r\n    @serialize()\r\n    public blobIntensity = 0.5;\r\n\r\n    /**\r\n     * Gets or sets the near size of the hover glow effect.\r\n     */\r\n    @serialize()\r\n    public blobNearSize = 0.01;\r\n    /**\r\n     * Gets or sets the far size of the hover glow effect.\r\n     */\r\n    @serialize()\r\n    public blobFarSize = 0.03;\r\n\r\n    /**\r\n     * Gets or sets the distance considered \"near\" to the mesh, which controls the size of the hover glow effect (see blobNearSize).\r\n     */\r\n    @serialize()\r\n    public blobNearDistance = 0;\r\n\r\n    /**\r\n     * Gets or sets the distance considered \"far\" from the mesh, which controls the size of the hover glow effect (see blobFarSize).\r\n     */\r\n    @serialize()\r\n    public blobFarDistance = 0.08;\r\n\r\n    /**\r\n     * Gets or sets the length of the hover glow effect fade.\r\n     */\r\n    @serialize()\r\n    public blobFadeLength = 0.576;\r\n\r\n    /**\r\n     * Gets or sets the progress of the hover glow effect selection animation corresponding to the left pointer (0.0 - 1.0).\r\n     */\r\n    @serialize()\r\n    public blobPulse = 0;\r\n\r\n    /**\r\n     * Gets or sets the opacity of the hover glow effect corresponding to the left pointer (0.0 - 1.0). Default is 0.\r\n     */\r\n    @serialize()\r\n    public blobFade = 1;\r\n\r\n    /**\r\n     * Gets or sets the position of the hover glow effect.\r\n     */\r\n    @serialize()\r\n    public blobPosition2 = new Vector3(0.2, 0, 0.1);\r\n\r\n    /**\r\n     * Gets or sets the size of the hover glow effect when the right pointer is considered \"near\" to the mesh (see blobNearDistance).\r\n     */\r\n    @serialize()\r\n    public blobNearSize2 = 0.01;\r\n\r\n    /**\r\n     * Gets or sets the progress of the hover glow effect selection animation corresponding to the right pointer (0.0 - 1.0).\r\n     */\r\n    @serialize()\r\n    public blobPulse2 = 0;\r\n\r\n    /**\r\n     * Gets or sets the opacity of the hover glow effect corresponding to the right pointer (0.0 - 1.0). Default is 1.\r\n     */\r\n    @serialize()\r\n    public blobFade2 = 1;\r\n\r\n    /**\r\n     * Gets or sets the texture of the hover glow effect.\r\n     */\r\n    @serialize()\r\n    public blobTexture = new Texture(\"\", this.getScene());\r\n\r\n    /**\r\n     * Gets or sets the finger position for left index.\r\n     */\r\n    @serialize()\r\n    public leftIndexPosition = new Vector3(0, 0, 1);\r\n\r\n    /**\r\n     * Gets or sets the finger position for right index.\r\n     */\r\n    @serialize()\r\n    public rightIndexPosition = new Vector3(-1, -1, -1);\r\n\r\n    /**\r\n     * Gets or sets the finger position for left index middle position.\r\n     */\r\n    @serialize()\r\n    public leftIndexMiddlePosition = new Vector3(0, 0, 0);\r\n\r\n    /**\r\n     * Gets or sets the finger position for right index middle position.\r\n     */\r\n    @serialize()\r\n    public rightIndexMiddlePosition = new Vector3(0, 0, 0);\r\n\r\n    /**\r\n     * Gets or sets the Decal Scle for XY.\r\n     */\r\n    @serialize()\r\n    public decalScaleXY = new Vector2(1.5, 1.5);\r\n\r\n    /**\r\n     * Gets or sets decalFrontOnly\r\n     * Default is true\r\n     */\r\n    @serialize()\r\n    public decalFrontOnly = true;\r\n\r\n    /**\r\n     * Gets or sets the Rim Light intensity.\r\n     */\r\n    @serialize()\r\n    public rimIntensity = 0.287;\r\n\r\n    /**\r\n     * Gets or sets the Rim Light hue shift value.\r\n     */\r\n    @serialize()\r\n    public rimHueShift = 0;\r\n\r\n    /**\r\n     * Gets or sets the Rim Light saturation shift value.\r\n     */\r\n    @serialize()\r\n    public rimSaturationShift = 0;\r\n\r\n    /**\r\n     * Gets or sets the Rim Light value shift.\r\n     */\r\n    @serialize()\r\n    public rimValueShift = -1;\r\n\r\n    /**\r\n     * Gets or sets the intensity of the iridescence effect.\r\n     */\r\n    @serialize()\r\n    public iridescenceIntensity = 0;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public useGlobalLeftIndex = 1.0;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public useGlobalRightIndex = 1.0;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public globalLeftIndexTipProximity = 0.0;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public globalRightIndexTipProximity = 0.0;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public globalLeftIndexTipPosition = new Vector4(0.5, 0.0, -0.55, 1.0);\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public globaRightIndexTipPosition = new Vector4(0.0, 0.0, 0.0, 1.0);\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public globalLeftThumbTipPosition = new Vector4(0.5, 0.0, -0.55, 1.0);\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public globalRightThumbTipPosition = new Vector4(0.0, 0.0, 0.0, 1.0);\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public globalLeftIndexMiddlePosition = new Vector4(0.5, 0.0, -0.55, 1.0);\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public globalRightIndexMiddlePosition = new Vector4(0.0, 0.0, 0.0, 1.0);\r\n\r\n    constructor(name: string, scene?: Scene) {\r\n        super(name, scene);\r\n        this.alphaMode = Constants.ALPHA_DISABLE;\r\n        this.backFaceCulling = false;\r\n        this._blueGradientTexture = new Texture(MRDLSliderBarMaterial.BLUE_GRADIENT_TEXTURE_URL, this.getScene(), true, false, Texture.NEAREST_SAMPLINGMODE);\r\n        this._decalTexture = new Texture(\"\", this.getScene());\r\n        this._reflectionMapTexture = new Texture(\"\", this.getScene());\r\n        this._indirectEnvTexture = new Texture(\"\", this.getScene());\r\n    }\r\n\r\n    public needAlphaBlending(): boolean {\r\n        return false;\r\n    }\r\n\r\n    public needAlphaTesting(): boolean {\r\n        return false;\r\n    }\r\n\r\n    public getAlphaTestTexture(): Nullable<BaseTexture> {\r\n        return null;\r\n    }\r\n\r\n    // Methods\r\n    public isReadyForSubMesh(mesh: AbstractMesh, subMesh: SubMesh): boolean {\r\n        if (this.isFrozen) {\r\n            if (subMesh.effect && subMesh.effect._wasPreviouslyReady) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        if (!subMesh.materialDefines) {\r\n            subMesh.materialDefines = new MRDLSliderBarMaterialDefines();\r\n        }\r\n\r\n        const defines = <MRDLSliderBarMaterialDefines>subMesh.materialDefines;\r\n        const scene = this.getScene();\r\n\r\n        if (this._isReadyForSubMesh(subMesh)) {\r\n            return true;\r\n        }\r\n\r\n        const engine = scene.getEngine();\r\n\r\n        // Attribs\r\n        MaterialHelper.PrepareDefinesForAttributes(mesh, defines, false, false);\r\n\r\n        // Get correct effect\r\n        if (defines.isDirty) {\r\n            defines.markAsProcessed();\r\n\r\n            scene.resetCachedMaterial();\r\n\r\n            // Fallbacks\r\n            const fallbacks = new EffectFallbacks();\r\n            if (defines.FOG) {\r\n                fallbacks.addFallback(1, \"FOG\");\r\n            }\r\n\r\n            MaterialHelper.HandleFallbacksForShadows(defines, fallbacks);\r\n\r\n            defines.IMAGEPROCESSINGPOSTPROCESS = scene.imageProcessingConfiguration.applyByPostProcess;\r\n\r\n            //Attributes\r\n            const attribs = [VertexBuffer.PositionKind];\r\n\r\n            if (defines.NORMAL) {\r\n                attribs.push(VertexBuffer.NormalKind);\r\n            }\r\n\r\n            if (defines.UV1) {\r\n                attribs.push(VertexBuffer.UVKind);\r\n            }\r\n\r\n            if (defines.UV2) {\r\n                attribs.push(VertexBuffer.UV2Kind);\r\n            }\r\n\r\n            if (defines.VERTEXCOLOR) {\r\n                attribs.push(VertexBuffer.ColorKind);\r\n            }\r\n\r\n            if (defines.TANGENT) {\r\n                attribs.push(VertexBuffer.TangentKind);\r\n            }\r\n\r\n            MaterialHelper.PrepareAttributesForInstances(attribs, defines);\r\n\r\n            // Legacy browser patch\r\n            const shaderName = \"mrdlSliderBar\";\r\n            const join = defines.toString();\r\n\r\n            const uniforms = [\r\n                \"world\",\r\n                \"viewProjection\",\r\n                \"cameraPosition\",\r\n                \"_Radius_\",\r\n                \"_Bevel_Front_\",\r\n                \"_Bevel_Front_Stretch_\",\r\n                \"_Bevel_Back_\",\r\n                \"_Bevel_Back_Stretch_\",\r\n                \"_Radius_Top_Left_\",\r\n                \"_Radius_Top_Right_\",\r\n                \"_Radius_Bottom_Left_\",\r\n                \"_Radius_Bottom_Right_\",\r\n                \"_Bulge_Enabled_\",\r\n                \"_Bulge_Height_\",\r\n                \"_Bulge_Radius_\",\r\n                \"_Sun_Intensity_\",\r\n                \"_Sun_Theta_\",\r\n                \"_Sun_Phi_\",\r\n                \"_Indirect_Diffuse_\",\r\n                \"_Albedo_\",\r\n                \"_Specular_\",\r\n                \"_Shininess_\",\r\n                \"_Sharpness_\",\r\n                \"_Subsurface_\",\r\n                \"_Left_Color_\",\r\n                \"_Right_Color_\",\r\n                \"_Reflection_\",\r\n                \"_Front_Reflect_\",\r\n                \"_Edge_Reflect_\",\r\n                \"_Power_\",\r\n                \"_Sky_Color_\",\r\n                \"_Horizon_Color_\",\r\n                \"_Ground_Color_\",\r\n                \"_Horizon_Power_\",\r\n                \"_Reflection_Map_\",\r\n                \"_Indirect_Environment_\",\r\n                \"_Width_\",\r\n                \"_Fuzz_\",\r\n                \"_Min_Fuzz_\",\r\n                \"_Clip_Fade_\",\r\n                \"_Hue_Shift_\",\r\n                \"_Saturation_Shift_\",\r\n                \"_Value_Shift_\",\r\n                \"_Blob_Position_\",\r\n                \"_Blob_Intensity_\",\r\n                \"_Blob_Near_Size_\",\r\n                \"_Blob_Far_Size_\",\r\n                \"_Blob_Near_Distance_\",\r\n                \"_Blob_Far_Distance_\",\r\n                \"_Blob_Fade_Length_\",\r\n                \"_Blob_Pulse_\",\r\n                \"_Blob_Fade_\",\r\n                \"_Blob_Texture_\",\r\n                \"_Blob_Position_2_\",\r\n                \"_Blob_Near_Size_2_\",\r\n                \"_Blob_Pulse_2_\",\r\n                \"_Blob_Fade_2_\",\r\n                \"_Left_Index_Pos_\",\r\n                \"_Right_Index_Pos_\",\r\n                \"_Left_Index_Middle_Pos_\",\r\n                \"_Right_Index_Middle_Pos_\",\r\n                \"_Decal_\",\r\n                \"_Decal_Scale_XY_\",\r\n                \"_Decal_Front_Only_\",\r\n                \"_Rim_Intensity_\",\r\n                \"_Rim_Texture_\",\r\n                \"_Rim_Hue_Shift_\",\r\n                \"_Rim_Saturation_Shift_\",\r\n                \"_Rim_Value_Shift_\",\r\n                \"_Iridescence_Intensity_\",\r\n                \"_Iridescence_Texture_\",\r\n                \"Use_Global_Left_Index\",\r\n                \"Use_Global_Right_Index\",\r\n                \"Global_Left_Index_Tip_Position\",\r\n                \"Global_Right_Index_Tip_Position\",\r\n                \"Global_Left_Thumb_Tip_Position\",\r\n                \"Global_Right_Thumb_Tip_Position\",\r\n                \"Global_Left_Index_Middle_Position;\",\r\n                \"Global_Right_Index_Middle_Position\",\r\n                \"Global_Left_Index_Tip_Proximity\",\r\n                \"Global_Right_Index_Tip_Proximity\",\r\n            ];\r\n            const samplers: string[] = [\"_Rim_Texture_\", \"_Iridescence_Texture_\"];\r\n            const uniformBuffers = new Array<string>();\r\n\r\n            MaterialHelper.PrepareUniformsAndSamplersList(<IEffectCreationOptions>{\r\n                uniformsNames: uniforms,\r\n                uniformBuffersNames: uniformBuffers,\r\n                samplers: samplers,\r\n                defines: defines,\r\n                maxSimultaneousLights: 4,\r\n            });\r\n\r\n            subMesh.setEffect(\r\n                scene.getEngine().createEffect(\r\n                    shaderName,\r\n                    <IEffectCreationOptions>{\r\n                        attributes: attribs,\r\n                        uniformsNames: uniforms,\r\n                        uniformBuffersNames: uniformBuffers,\r\n                        samplers: samplers,\r\n                        defines: join,\r\n                        fallbacks: fallbacks,\r\n                        onCompiled: this.onCompiled,\r\n                        onError: this.onError,\r\n                        indexParameters: { maxSimultaneousLights: 4 },\r\n                    },\r\n                    engine\r\n                ),\r\n                defines,\r\n                this._materialContext\r\n            );\r\n        }\r\n        if (!subMesh.effect || !subMesh.effect.isReady()) {\r\n            return false;\r\n        }\r\n\r\n        defines._renderId = scene.getRenderId();\r\n        subMesh.effect._wasPreviouslyReady = true;\r\n\r\n        return true;\r\n    }\r\n\r\n    public bindForSubMesh(world: Matrix, mesh: Mesh, subMesh: SubMesh): void {\r\n        const defines = <MRDLSliderBarMaterialDefines>subMesh.materialDefines;\r\n        if (!defines) {\r\n            return;\r\n        }\r\n\r\n        const effect = subMesh.effect;\r\n        if (!effect) {\r\n            return;\r\n        }\r\n\r\n        this._activeEffect = effect;\r\n\r\n        // Matrices\r\n        this.bindOnlyWorldMatrix(world);\r\n        this._activeEffect.setMatrix(\"viewProjection\", this.getScene().getTransformMatrix());\r\n        this._activeEffect.setVector3(\"cameraPosition\", this.getScene().activeCamera!.position);\r\n\r\n        // \"Round Rect\"\r\n        this._activeEffect.setFloat(\"_Radius_\", this.radius);\r\n        this._activeEffect.setFloat(\"_Bevel_Front_\", this.bevelFront);\r\n        this._activeEffect.setFloat(\"_Bevel_Front_Stretch_\", this.bevelFrontStretch);\r\n        this._activeEffect.setFloat(\"_Bevel_Back_\", this.bevelBack);\r\n        this._activeEffect.setFloat(\"_Bevel_Back_Stretch_\", this.bevelBackStretch);\r\n\r\n        // \"Radii Multipliers\"\r\n        this._activeEffect.setFloat(\"_Radius_Top_Left_\", this.radiusTopLeft);\r\n        this._activeEffect.setFloat(\"_Radius_Top_Right_\", this.radiusTopRight);\r\n        this._activeEffect.setFloat(\"_Radius_Bottom_Left_\", this.radiusBottomLeft);\r\n        this._activeEffect.setFloat(\"_Radius_Bottom_Right_\", this.radiusBottomRight);\r\n\r\n        // \"Bulge\"\r\n        this._activeEffect.setFloat(\"_Bulge_Enabled_\", this.bulgeEnabled ? 1.0 : 0.0);\r\n        this._activeEffect.setFloat(\"_Bulge_Height_\", this.bulgeHeight);\r\n        this._activeEffect.setFloat(\"_Bulge_Radius_\", this.bulgeRadius);\r\n\r\n        // \"Sun\"\r\n        this._activeEffect.setFloat(\"_Sun_Intensity_\", this.sunIntensity);\r\n        this._activeEffect.setFloat(\"_Sun_Theta_\", this.sunTheta);\r\n        this._activeEffect.setFloat(\"_Sun_Phi_\", this.sunPhi);\r\n        this._activeEffect.setFloat(\"_Indirect_Diffuse_\", this.indirectDiffuse);\r\n\r\n        // \"Diffuse And Specular\"\r\n        this._activeEffect.setDirectColor4(\"_Albedo_\", this.albedo);\r\n        this._activeEffect.setFloat(\"_Specular_\", this.specular);\r\n        this._activeEffect.setFloat(\"_Shininess_\", this.shininess);\r\n        this._activeEffect.setFloat(\"_Sharpness_\", this.sharpness);\r\n        this._activeEffect.setFloat(\"_Subsurface_\", this.subsurface);\r\n\r\n        // \"Gradient\"\r\n        this._activeEffect.setDirectColor4(\"_Left_Color_\", this.leftGradientColor);\r\n        this._activeEffect.setDirectColor4(\"_Right_Color_\", this.rightGradientColor);\r\n\r\n        // \"Reflection\"\r\n        this._activeEffect.setFloat(\"_Reflection_\", this.reflection);\r\n        this._activeEffect.setFloat(\"_Front_Reflect_\", this.frontReflect);\r\n        this._activeEffect.setFloat(\"_Edge_Reflect_\", this.edgeReflect);\r\n        this._activeEffect.setFloat(\"_Power_\", this.power);\r\n\r\n        // \"Sky Environment\"\r\n        //define SKY_ENABLED true;\r\n        this._activeEffect.setDirectColor4(\"_Sky_Color_\", this.skyColor);\r\n        this._activeEffect.setDirectColor4(\"_Horizon_Color_\", this.horizonColor);\r\n        this._activeEffect.setDirectColor4(\"_Ground_Color_\", this.groundColor);\r\n        this._activeEffect.setFloat(\"_Horizon_Power_\", this.horizonPower);\r\n\r\n        // \"Mapped Environment\"\r\n        //define ENV_ENABLE false;\r\n        this._activeEffect.setTexture(\"_Reflection_Map_\", this._reflectionMapTexture);\r\n        this._activeEffect.setTexture(\"_Indirect_Environment_\", this._indirectEnvTexture);\r\n\r\n        // \"FingerOcclusion\"\r\n        //define OCCLUSION_ENABLED false;\r\n        this._activeEffect.setFloat(\"_Width_\", this.width);\r\n        this._activeEffect.setFloat(\"_Fuzz_\", this.fuzz);\r\n        this._activeEffect.setFloat(\"_Min_Fuzz_\", this.minFuzz);\r\n        this._activeEffect.setFloat(\"_Clip_Fade_\", this.clipFade);\r\n\r\n        // \"View Based Color Shift\"\r\n        this._activeEffect.setFloat(\"_Hue_Shift_\", this.hueShift);\r\n        this._activeEffect.setFloat(\"_Saturation_Shift_\", this.saturationShift);\r\n        this._activeEffect.setFloat(\"_Value_Shift_\", this.valueShift);\r\n\r\n        // \"Blob\"\r\n        //define BLOB_ENABLE false;\r\n        this._activeEffect.setVector3(\"_Blob_Position_\", this.blobPosition);\r\n        this._activeEffect.setFloat(\"_Blob_Intensity_\", this.blobIntensity);\r\n        this._activeEffect.setFloat(\"_Blob_Near_Size_\", this.blobNearSize);\r\n        this._activeEffect.setFloat(\"_Blob_Far_Size_\", this.blobFarSize);\r\n        this._activeEffect.setFloat(\"_Blob_Near_Distance_\", this.blobNearDistance);\r\n        this._activeEffect.setFloat(\"_Blob_Far_Distance_\", this.blobFarDistance);\r\n        this._activeEffect.setFloat(\"_Blob_Fade_Length_\", this.blobFadeLength);\r\n        this._activeEffect.setFloat(\"_Blob_Pulse_\", this.blobPulse);\r\n        this._activeEffect.setFloat(\"_Blob_Fade_\", this.blobFade);\r\n\r\n        // \"Blob Texture\"\r\n        this._activeEffect.setTexture(\"_Blob_Texture_\", this.blobTexture);\r\n\r\n        // \"Blob 2\"\r\n        //define BLOB_ENABLE_2 true;\r\n        this._activeEffect.setVector3(\"_Blob_Position_2_\", this.blobPosition2);\r\n        this._activeEffect.setFloat(\"_Blob_Near_Size_2_\", this.blobNearSize2);\r\n        this._activeEffect.setFloat(\"_Blob_Pulse_2_\", this.blobPulse2);\r\n        this._activeEffect.setFloat(\"_Blob_Fade_2_\", this.blobFade2);\r\n\r\n        // \"Finger Positions\"\r\n        this._activeEffect.setVector3(\"_Left_Index_Pos_\", this.leftIndexPosition);\r\n        this._activeEffect.setVector3(\"_Right_Index_Pos_\", this.rightIndexPosition);\r\n        this._activeEffect.setVector3(\"_Left_Index_Middle_Pos_\", this.leftIndexMiddlePosition);\r\n        this._activeEffect.setVector3(\"_Right_Index_Middle_Pos_\", this.rightIndexMiddlePosition);\r\n\r\n        // \"Decal Texture\"\r\n        //define DECAL_ENABLE false;\r\n        this._activeEffect.setTexture(\"_Decal_\", this._decalTexture);\r\n        this._activeEffect.setVector2(\"_Decal_Scale_XY_\", this.decalScaleXY);\r\n        this._activeEffect.setFloat(\"_Decal_Front_Only_\", this.decalFrontOnly ? 1.0 : 0.0);\r\n\r\n        // \"Rim Light\"\r\n        this._activeEffect.setFloat(\"_Rim_Intensity_\", this.rimIntensity);\r\n        this._activeEffect.setTexture(\"_Rim_Texture_\", this._blueGradientTexture);\r\n        this._activeEffect.setFloat(\"_Rim_Hue_Shift_\", this.rimHueShift);\r\n        this._activeEffect.setFloat(\"_Rim_Saturation_Shift_\", this.rimSaturationShift);\r\n        this._activeEffect.setFloat(\"_Rim_Value_Shift_\", this.rimValueShift);\r\n\r\n        // \"Iridescence\"\r\n        //define IRIDESCENCE_ENABLED true;\r\n        this._activeEffect.setFloat(\"_Iridescence_Intensity_\", this.iridescenceIntensity);\r\n        this._activeEffect.setTexture(\"_Iridescence_Texture_\", this._blueGradientTexture);\r\n\r\n        // Global inputs\r\n        this._activeEffect.setFloat(\"Use_Global_Left_Index\", this.useGlobalLeftIndex);\r\n        this._activeEffect.setFloat(\"Use_Global_Right_Index\", this.useGlobalRightIndex);\r\n\r\n        this._activeEffect.setVector4(\"Global_Left_Index_Tip_Position\", this.globalLeftIndexTipPosition);\r\n        this._activeEffect.setVector4(\"Global_Right_Index_Tip_Position\", this.globaRightIndexTipPosition);\r\n\r\n        this._activeEffect.setVector4(\"Global_Left_Thumb_Tip_Position\", this.globalLeftThumbTipPosition);\r\n        this._activeEffect.setVector4(\"Global_Right_Thumb_Tip_Position\", this.globalRightThumbTipPosition);\r\n\r\n        this._activeEffect.setVector4(\"Global_Left_Index_Middle_Position\", this.globalLeftIndexMiddlePosition);\r\n        this._activeEffect.setVector4(\"Global_Right_Index_Middle_Position\", this.globalRightIndexMiddlePosition);\r\n\r\n        this._activeEffect.setFloat(\"Global_Left_Index_Tip_Proximity\", this.globalLeftIndexTipProximity);\r\n        this._activeEffect.setFloat(\"Global_Right_Index_Tip_Proximity\", this.globalRightIndexTipProximity);\r\n\r\n        this._afterBind(mesh, this._activeEffect);\r\n    }\r\n\r\n    /**\r\n     * Get the list of animatables in the material.\r\n     * @returns the list of animatables object used in the material\r\n     */\r\n    public getAnimatables(): IAnimatable[] {\r\n        return [];\r\n    }\r\n\r\n    public dispose(forceDisposeEffect?: boolean): void {\r\n        super.dispose(forceDisposeEffect);\r\n        this._reflectionMapTexture.dispose();\r\n        this._indirectEnvTexture.dispose();\r\n        this._blueGradientTexture.dispose();\r\n        this._decalTexture.dispose();\r\n    }\r\n\r\n    public clone(name: string): MRDLSliderBarMaterial {\r\n        return SerializationHelper.Clone(() => new MRDLSliderBarMaterial(name, this.getScene()), this);\r\n    }\r\n\r\n    public serialize(): any {\r\n        const serializationObject = super.serialize();\r\n        serializationObject.customType = \"BABYLON.MRDLSliderBarMaterial\";\r\n        return serializationObject;\r\n    }\r\n\r\n    public getClassName(): string {\r\n        return \"MRDLSliderBarMaterial\";\r\n    }\r\n\r\n    // Statics\r\n    public static Parse(source: any, scene: Scene, rootUrl: string): MRDLSliderBarMaterial {\r\n        return SerializationHelper.Parse(() => new MRDLSliderBarMaterial(source.name, scene), source, scene, rootUrl);\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.GUI.MRDLSliderBarMaterial\", MRDLSliderBarMaterial);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}