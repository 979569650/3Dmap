{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __decorate } from \"../../tslib.es6.js\";\nimport { serialize } from \"../../Misc/decorators.js\";\nimport { CameraInputTypes } from \"../../Cameras/cameraInputsManager.js\";\nimport { KeyboardEventTypes } from \"../../Events/keyboardEvents.js\";\nimport { Vector3 } from \"../../Maths/math.vector.js\";\nimport { Tools } from \"../../Misc/tools.js\";\n/**\n * Listen to keyboard events to control the camera.\n * @see https://doc.babylonjs.com/features/featuresDeepDive/cameras/customizingCameraInputs\n */\nexport class FlyCameraKeyboardInput {\n  constructor() {\n    /**\n     * The list of keyboard keys used to control the forward move of the camera.\n     */\n    this.keysForward = [87];\n    /**\n     * The list of keyboard keys used to control the backward move of the camera.\n     */\n    this.keysBackward = [83];\n    /**\n     * The list of keyboard keys used to control the forward move of the camera.\n     */\n    this.keysUp = [69];\n    /**\n     * The list of keyboard keys used to control the backward move of the camera.\n     */\n    this.keysDown = [81];\n    /**\n     * The list of keyboard keys used to control the right strafe move of the camera.\n     */\n    this.keysRight = [68];\n    /**\n     * The list of keyboard keys used to control the left strafe move of the camera.\n     */\n    this.keysLeft = [65];\n    this._keys = new Array();\n  }\n  /**\n   * Attach the input controls to a specific dom element to get the input from.\n   * @param noPreventDefault Defines whether event caught by the controls should call preventdefault() (https://developer.mozilla.org/en-US/docs/Web/API/Event/preventDefault)\n   */\n  attachControl(noPreventDefault) {\n    // eslint-disable-next-line prefer-rest-params\n    noPreventDefault = Tools.BackCompatCameraNoPreventDefault(arguments);\n    if (this._onCanvasBlurObserver) {\n      return;\n    }\n    this._scene = this.camera.getScene();\n    this._engine = this._scene.getEngine();\n    this._onCanvasBlurObserver = this._engine.onCanvasBlurObservable.add(() => {\n      this._keys.length = 0;\n    });\n    this._onKeyboardObserver = this._scene.onKeyboardObservable.add(info => {\n      const evt = info.event;\n      if (info.type === KeyboardEventTypes.KEYDOWN) {\n        if (this.keysForward.indexOf(evt.keyCode) !== -1 || this.keysBackward.indexOf(evt.keyCode) !== -1 || this.keysUp.indexOf(evt.keyCode) !== -1 || this.keysDown.indexOf(evt.keyCode) !== -1 || this.keysLeft.indexOf(evt.keyCode) !== -1 || this.keysRight.indexOf(evt.keyCode) !== -1) {\n          const index = this._keys.indexOf(evt.keyCode);\n          if (index === -1) {\n            this._keys.push(evt.keyCode);\n          }\n          if (!noPreventDefault) {\n            evt.preventDefault();\n          }\n        }\n      } else {\n        if (this.keysForward.indexOf(evt.keyCode) !== -1 || this.keysBackward.indexOf(evt.keyCode) !== -1 || this.keysUp.indexOf(evt.keyCode) !== -1 || this.keysDown.indexOf(evt.keyCode) !== -1 || this.keysLeft.indexOf(evt.keyCode) !== -1 || this.keysRight.indexOf(evt.keyCode) !== -1) {\n          const index = this._keys.indexOf(evt.keyCode);\n          if (index >= 0) {\n            this._keys.splice(index, 1);\n          }\n          if (!noPreventDefault) {\n            evt.preventDefault();\n          }\n        }\n      }\n    });\n  }\n  /**\n   * Detach the current controls from the specified dom element.\n   */\n  detachControl() {\n    if (this._scene) {\n      if (this._onKeyboardObserver) {\n        this._scene.onKeyboardObservable.remove(this._onKeyboardObserver);\n      }\n      if (this._onCanvasBlurObserver) {\n        this._engine.onCanvasBlurObservable.remove(this._onCanvasBlurObserver);\n      }\n      this._onKeyboardObserver = null;\n      this._onCanvasBlurObserver = null;\n    }\n    this._keys.length = 0;\n  }\n  /**\n   * Gets the class name of the current input.\n   * @returns the class name\n   */\n  getClassName() {\n    return \"FlyCameraKeyboardInput\";\n  }\n  /**\n   * @internal\n   */\n  _onLostFocus() {\n    this._keys.length = 0;\n  }\n  /**\n   * Get the friendly name associated with the input class.\n   * @returns the input friendly name\n   */\n  getSimpleName() {\n    return \"keyboard\";\n  }\n  /**\n   * Update the current camera state depending on the inputs that have been used this frame.\n   * This is a dynamically created lambda to avoid the performance penalty of looping for inputs in the render loop.\n   */\n  checkInputs() {\n    if (this._onKeyboardObserver) {\n      const camera = this.camera;\n      // Keyboard\n      for (let index = 0; index < this._keys.length; index++) {\n        const keyCode = this._keys[index];\n        const speed = camera._computeLocalCameraSpeed();\n        if (this.keysForward.indexOf(keyCode) !== -1) {\n          camera._localDirection.copyFromFloats(0, 0, speed);\n        } else if (this.keysBackward.indexOf(keyCode) !== -1) {\n          camera._localDirection.copyFromFloats(0, 0, -speed);\n        } else if (this.keysUp.indexOf(keyCode) !== -1) {\n          camera._localDirection.copyFromFloats(0, speed, 0);\n        } else if (this.keysDown.indexOf(keyCode) !== -1) {\n          camera._localDirection.copyFromFloats(0, -speed, 0);\n        } else if (this.keysRight.indexOf(keyCode) !== -1) {\n          camera._localDirection.copyFromFloats(speed, 0, 0);\n        } else if (this.keysLeft.indexOf(keyCode) !== -1) {\n          camera._localDirection.copyFromFloats(-speed, 0, 0);\n        }\n        if (camera.getScene().useRightHandedSystem) {\n          camera._localDirection.z *= -1;\n        }\n        camera.getViewMatrix().invertToRef(camera._cameraTransformMatrix);\n        Vector3.TransformNormalToRef(camera._localDirection, camera._cameraTransformMatrix, camera._transformedDirection);\n        camera.cameraDirection.addInPlace(camera._transformedDirection);\n      }\n    }\n  }\n}\n__decorate([serialize()], FlyCameraKeyboardInput.prototype, \"keysForward\", void 0);\n__decorate([serialize()], FlyCameraKeyboardInput.prototype, \"keysBackward\", void 0);\n__decorate([serialize()], FlyCameraKeyboardInput.prototype, \"keysUp\", void 0);\n__decorate([serialize()], FlyCameraKeyboardInput.prototype, \"keysDown\", void 0);\n__decorate([serialize()], FlyCameraKeyboardInput.prototype, \"keysRight\", void 0);\n__decorate([serialize()], FlyCameraKeyboardInput.prototype, \"keysLeft\", void 0);\nCameraInputTypes[\"FlyCameraKeyboardInput\"] = FlyCameraKeyboardInput;","map":{"version":3,"names":["serialize","CameraInputTypes","KeyboardEventTypes","Vector3","Tools","FlyCameraKeyboardInput","constructor","keysForward","keysBackward","keysUp","keysDown","keysRight","keysLeft","_keys","Array","attachControl","noPreventDefault","BackCompatCameraNoPreventDefault","arguments","_onCanvasBlurObserver","_scene","camera","getScene","_engine","getEngine","onCanvasBlurObservable","add","length","_onKeyboardObserver","onKeyboardObservable","info","evt","event","type","KEYDOWN","indexOf","keyCode","index","push","preventDefault","splice","detachControl","remove","getClassName","_onLostFocus","getSimpleName","checkInputs","speed","_computeLocalCameraSpeed","_localDirection","copyFromFloats","useRightHandedSystem","z","getViewMatrix","invertToRef","_cameraTransformMatrix","TransformNormalToRef","_transformedDirection","cameraDirection","addInPlace","__decorate"],"sources":["../../../../../dev/core/src/Cameras/Inputs/flyCameraKeyboardInput.ts"],"sourcesContent":["import type { Nullable } from \"../../types\";\r\nimport { serialize } from \"../../Misc/decorators\";\r\nimport type { Observer } from \"../../Misc/observable\";\r\nimport type { ICameraInput } from \"../../Cameras/cameraInputsManager\";\r\nimport { CameraInputTypes } from \"../../Cameras/cameraInputsManager\";\r\nimport type { FlyCamera } from \"../../Cameras/flyCamera\";\r\nimport type { Engine } from \"../../Engines/engine\";\r\nimport type { KeyboardInfo } from \"../../Events/keyboardEvents\";\r\nimport { KeyboardEventTypes } from \"../../Events/keyboardEvents\";\r\nimport type { Scene } from \"../../scene\";\r\nimport { Vector3 } from \"../../Maths/math.vector\";\r\nimport { Tools } from \"../../Misc/tools\";\r\n\r\n/**\r\n * Listen to keyboard events to control the camera.\r\n * @see https://doc.babylonjs.com/features/featuresDeepDive/cameras/customizingCameraInputs\r\n */\r\nexport class FlyCameraKeyboardInput implements ICameraInput<FlyCamera> {\r\n    /**\r\n     * Defines the camera the input is attached to.\r\n     */\r\n    public camera: FlyCamera;\r\n\r\n    /**\r\n     * The list of keyboard keys used to control the forward move of the camera.\r\n     */\r\n    @serialize()\r\n    public keysForward = [87];\r\n\r\n    /**\r\n     * The list of keyboard keys used to control the backward move of the camera.\r\n     */\r\n    @serialize()\r\n    public keysBackward = [83];\r\n\r\n    /**\r\n     * The list of keyboard keys used to control the forward move of the camera.\r\n     */\r\n    @serialize()\r\n    public keysUp = [69];\r\n\r\n    /**\r\n     * The list of keyboard keys used to control the backward move of the camera.\r\n     */\r\n    @serialize()\r\n    public keysDown = [81];\r\n\r\n    /**\r\n     * The list of keyboard keys used to control the right strafe move of the camera.\r\n     */\r\n    @serialize()\r\n    public keysRight = [68];\r\n\r\n    /**\r\n     * The list of keyboard keys used to control the left strafe move of the camera.\r\n     */\r\n    @serialize()\r\n    public keysLeft = [65];\r\n\r\n    private _keys = new Array<number>();\r\n    private _onCanvasBlurObserver: Nullable<Observer<Engine>>;\r\n    private _onKeyboardObserver: Nullable<Observer<KeyboardInfo>>;\r\n    private _engine: Engine;\r\n    private _scene: Scene;\r\n\r\n    /**\r\n     * Attach the input controls to a specific dom element to get the input from.\r\n     * @param noPreventDefault Defines whether event caught by the controls should call preventdefault() (https://developer.mozilla.org/en-US/docs/Web/API/Event/preventDefault)\r\n     */\r\n    public attachControl(noPreventDefault?: boolean): void {\r\n        // eslint-disable-next-line prefer-rest-params\r\n        noPreventDefault = Tools.BackCompatCameraNoPreventDefault(arguments);\r\n        if (this._onCanvasBlurObserver) {\r\n            return;\r\n        }\r\n\r\n        this._scene = this.camera.getScene();\r\n        this._engine = this._scene.getEngine();\r\n\r\n        this._onCanvasBlurObserver = this._engine.onCanvasBlurObservable.add(() => {\r\n            this._keys.length = 0;\r\n        });\r\n\r\n        this._onKeyboardObserver = this._scene.onKeyboardObservable.add((info) => {\r\n            const evt = info.event;\r\n\r\n            if (info.type === KeyboardEventTypes.KEYDOWN) {\r\n                if (\r\n                    this.keysForward.indexOf(evt.keyCode) !== -1 ||\r\n                    this.keysBackward.indexOf(evt.keyCode) !== -1 ||\r\n                    this.keysUp.indexOf(evt.keyCode) !== -1 ||\r\n                    this.keysDown.indexOf(evt.keyCode) !== -1 ||\r\n                    this.keysLeft.indexOf(evt.keyCode) !== -1 ||\r\n                    this.keysRight.indexOf(evt.keyCode) !== -1\r\n                ) {\r\n                    const index = this._keys.indexOf(evt.keyCode);\r\n\r\n                    if (index === -1) {\r\n                        this._keys.push(evt.keyCode);\r\n                    }\r\n                    if (!noPreventDefault) {\r\n                        evt.preventDefault();\r\n                    }\r\n                }\r\n            } else {\r\n                if (\r\n                    this.keysForward.indexOf(evt.keyCode) !== -1 ||\r\n                    this.keysBackward.indexOf(evt.keyCode) !== -1 ||\r\n                    this.keysUp.indexOf(evt.keyCode) !== -1 ||\r\n                    this.keysDown.indexOf(evt.keyCode) !== -1 ||\r\n                    this.keysLeft.indexOf(evt.keyCode) !== -1 ||\r\n                    this.keysRight.indexOf(evt.keyCode) !== -1\r\n                ) {\r\n                    const index = this._keys.indexOf(evt.keyCode);\r\n\r\n                    if (index >= 0) {\r\n                        this._keys.splice(index, 1);\r\n                    }\r\n                    if (!noPreventDefault) {\r\n                        evt.preventDefault();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Detach the current controls from the specified dom element.\r\n     */\r\n    public detachControl(): void {\r\n        if (this._scene) {\r\n            if (this._onKeyboardObserver) {\r\n                this._scene.onKeyboardObservable.remove(this._onKeyboardObserver);\r\n            }\r\n\r\n            if (this._onCanvasBlurObserver) {\r\n                this._engine.onCanvasBlurObservable.remove(this._onCanvasBlurObserver);\r\n            }\r\n            this._onKeyboardObserver = null;\r\n            this._onCanvasBlurObserver = null;\r\n        }\r\n        this._keys.length = 0;\r\n    }\r\n\r\n    /**\r\n     * Gets the class name of the current input.\r\n     * @returns the class name\r\n     */\r\n    public getClassName(): string {\r\n        return \"FlyCameraKeyboardInput\";\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public _onLostFocus(): void {\r\n        this._keys.length = 0;\r\n    }\r\n\r\n    /**\r\n     * Get the friendly name associated with the input class.\r\n     * @returns the input friendly name\r\n     */\r\n    public getSimpleName(): string {\r\n        return \"keyboard\";\r\n    }\r\n\r\n    /**\r\n     * Update the current camera state depending on the inputs that have been used this frame.\r\n     * This is a dynamically created lambda to avoid the performance penalty of looping for inputs in the render loop.\r\n     */\r\n    public checkInputs(): void {\r\n        if (this._onKeyboardObserver) {\r\n            const camera = this.camera;\r\n            // Keyboard\r\n            for (let index = 0; index < this._keys.length; index++) {\r\n                const keyCode = this._keys[index];\r\n                const speed = camera._computeLocalCameraSpeed();\r\n\r\n                if (this.keysForward.indexOf(keyCode) !== -1) {\r\n                    camera._localDirection.copyFromFloats(0, 0, speed);\r\n                } else if (this.keysBackward.indexOf(keyCode) !== -1) {\r\n                    camera._localDirection.copyFromFloats(0, 0, -speed);\r\n                } else if (this.keysUp.indexOf(keyCode) !== -1) {\r\n                    camera._localDirection.copyFromFloats(0, speed, 0);\r\n                } else if (this.keysDown.indexOf(keyCode) !== -1) {\r\n                    camera._localDirection.copyFromFloats(0, -speed, 0);\r\n                } else if (this.keysRight.indexOf(keyCode) !== -1) {\r\n                    camera._localDirection.copyFromFloats(speed, 0, 0);\r\n                } else if (this.keysLeft.indexOf(keyCode) !== -1) {\r\n                    camera._localDirection.copyFromFloats(-speed, 0, 0);\r\n                }\r\n\r\n                if (camera.getScene().useRightHandedSystem) {\r\n                    camera._localDirection.z *= -1;\r\n                }\r\n\r\n                camera.getViewMatrix().invertToRef(camera._cameraTransformMatrix);\r\n                Vector3.TransformNormalToRef(camera._localDirection, camera._cameraTransformMatrix, camera._transformedDirection);\r\n                camera.cameraDirection.addInPlace(camera._transformedDirection);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n(<any>CameraInputTypes)[\"FlyCameraKeyboardInput\"] = FlyCameraKeyboardInput;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}