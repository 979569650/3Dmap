{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*\n * Base Gradient class. Should not be used directly.\n */\n/**\n * Class that serves as a base for all the gradients created from context.\n */\nexport class BaseGradient {\n  constructor() {\n    this._colorStops = [];\n    this._gradientDirty = true;\n  }\n  _addColorStopsToCanvasGradient() {\n    for (const stop of this._colorStops) {\n      this._canvasGradient.addColorStop(stop.offset, stop.color);\n    }\n  }\n  /**\n   * If there are any changes or the context changed, regenerate the canvas gradient object. Else,\n   * reuse the existing gradient.\n   **/\n  getCanvasGradient(context) {\n    if (this._gradientDirty || this._context !== context) {\n      this._context = context;\n      this._canvasGradient = this._createCanvasGradient(context);\n      this._addColorStopsToCanvasGradient();\n      this._gradientDirty = false;\n    }\n    return this._canvasGradient;\n  }\n  /**\n   * Adds a new color stop to the gradient.\n   * @param offset the offset of the stop on the gradient. Should be between 0 and 1\n   * @param color the color of the stop\n   */\n  addColorStop(offset, color) {\n    this._colorStops.push({\n      offset,\n      color\n    });\n    this._gradientDirty = true;\n  }\n  /**\n   * Removes an existing color stop with the specified offset from the gradient\n   * @param offset the offset of the stop to be removed\n   */\n  removeColorStop(offset) {\n    this._colorStops = this._colorStops.filter(colorStop => colorStop.offset !== offset);\n    this._gradientDirty = true;\n  }\n  /**\n   * Removes all color stops from the gradient\n   */\n  clearColorStops() {\n    this._colorStops = [];\n    this._gradientDirty = true;\n  }\n  /** Color stops of the gradient */\n  get colorStops() {\n    return this._colorStops;\n  }\n  /** Type of the gradient */\n  getClassName() {\n    return \"BaseGradient\";\n  }\n  /** Serialize into a json object */\n  serialize(serializationObject) {\n    serializationObject.colorStops = this._colorStops;\n    serializationObject.className = this.getClassName();\n  }\n  /** Parse from json object */\n  parse(serializationObject) {\n    this._colorStops = serializationObject.colorStops;\n  }\n}","map":{"version":3,"names":["BaseGradient","constructor","_colorStops","_gradientDirty","_addColorStopsToCanvasGradient","stop","_canvasGradient","addColorStop","offset","color","getCanvasGradient","context","_context","_createCanvasGradient","push","removeColorStop","filter","colorStop","clearColorStops","colorStops","getClassName","serialize","serializationObject","className","parse"],"sources":["../../../../../../dev/gui/src/2D/controls/gradient/BaseGradient.ts"],"sourcesContent":["/*\r\n * Base Gradient class. Should not be used directly.\r\n */\r\n\r\nimport type { ICanvasGradient, ICanvasRenderingContext } from \"core/Engines/ICanvas\";\r\n\r\n/**\r\n * Type that represents a single stop on the gradient.\r\n */\r\nexport type GradientColorStop = {\r\n    /**\r\n     * Offset from the start where the color will be applied.\r\n     */\r\n    offset: number;\r\n    /**\r\n     * Color to be applied.\r\n     */\r\n    color: string;\r\n};\r\n\r\n/**\r\n * Class that serves as a base for all the gradients created from context.\r\n */\r\nexport abstract class BaseGradient {\r\n    private _colorStops: GradientColorStop[] = [];\r\n\r\n    private _canvasGradient: CanvasGradient;\r\n    private _context: ICanvasRenderingContext;\r\n    private _gradientDirty: boolean = true;\r\n\r\n    /**\r\n     * Overwritten by child classes to create the canvas gradient.\r\n     * @param context\r\n     */\r\n    protected abstract _createCanvasGradient(context: ICanvasRenderingContext): ICanvasGradient;\r\n\r\n    private _addColorStopsToCanvasGradient() {\r\n        for (const stop of this._colorStops) {\r\n            this._canvasGradient.addColorStop(stop.offset, stop.color);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * If there are any changes or the context changed, regenerate the canvas gradient object. Else,\r\n     * reuse the existing gradient.\r\n     **/\r\n    public getCanvasGradient(context: ICanvasRenderingContext) {\r\n        if (this._gradientDirty || this._context !== context) {\r\n            this._context = context;\r\n            this._canvasGradient = this._createCanvasGradient(context);\r\n            this._addColorStopsToCanvasGradient();\r\n            this._gradientDirty = false;\r\n        }\r\n        return this._canvasGradient;\r\n    }\r\n\r\n    /**\r\n     * Adds a new color stop to the gradient.\r\n     * @param offset the offset of the stop on the gradient. Should be between 0 and 1\r\n     * @param color the color of the stop\r\n     */\r\n    public addColorStop(offset: number, color: string) {\r\n        this._colorStops.push({ offset, color });\r\n        this._gradientDirty = true;\r\n    }\r\n\r\n    /**\r\n     * Removes an existing color stop with the specified offset from the gradient\r\n     * @param offset the offset of the stop to be removed\r\n     */\r\n    public removeColorStop(offset: number) {\r\n        this._colorStops = this._colorStops.filter((colorStop) => colorStop.offset !== offset);\r\n        this._gradientDirty = true;\r\n    }\r\n\r\n    /**\r\n     * Removes all color stops from the gradient\r\n     */\r\n    public clearColorStops() {\r\n        this._colorStops = [];\r\n        this._gradientDirty = true;\r\n    }\r\n\r\n    /** Color stops of the gradient */\r\n    public get colorStops() {\r\n        return this._colorStops;\r\n    }\r\n\r\n    /** Type of the gradient */\r\n    public getClassName() {\r\n        return \"BaseGradient\";\r\n    }\r\n\r\n    /** Serialize into a json object */\r\n    public serialize(serializationObject: any) {\r\n        serializationObject.colorStops = this._colorStops;\r\n        serializationObject.className = this.getClassName();\r\n    }\r\n\r\n    /** Parse from json object */\r\n    public parse(serializationObject: any) {\r\n        this._colorStops = serializationObject.colorStops;\r\n    }\r\n}\r\n"],"mappings":";AAAA;;;AAoBA;;;AAGA,OAAM,MAAgBA,YAAY;EAAlCC,YAAA;IACY,KAAAC,WAAW,GAAwB,EAAE;IAIrC,KAAAC,cAAc,GAAY,IAAI;EA2E1C;EAnEYC,8BAA8BA,CAAA;IAClC,KAAK,MAAMC,IAAI,IAAI,IAAI,CAACH,WAAW,EAAE;MACjC,IAAI,CAACI,eAAe,CAACC,YAAY,CAACF,IAAI,CAACG,MAAM,EAAEH,IAAI,CAACI,KAAK,CAAC;;EAElE;EAEA;;;;EAIOC,iBAAiBA,CAACC,OAAgC;IACrD,IAAI,IAAI,CAACR,cAAc,IAAI,IAAI,CAACS,QAAQ,KAAKD,OAAO,EAAE;MAClD,IAAI,CAACC,QAAQ,GAAGD,OAAO;MACvB,IAAI,CAACL,eAAe,GAAG,IAAI,CAACO,qBAAqB,CAACF,OAAO,CAAC;MAC1D,IAAI,CAACP,8BAA8B,EAAE;MACrC,IAAI,CAACD,cAAc,GAAG,KAAK;;IAE/B,OAAO,IAAI,CAACG,eAAe;EAC/B;EAEA;;;;;EAKOC,YAAYA,CAACC,MAAc,EAAEC,KAAa;IAC7C,IAAI,CAACP,WAAW,CAACY,IAAI,CAAC;MAAEN,MAAM;MAAEC;IAAK,CAAE,CAAC;IACxC,IAAI,CAACN,cAAc,GAAG,IAAI;EAC9B;EAEA;;;;EAIOY,eAAeA,CAACP,MAAc;IACjC,IAAI,CAACN,WAAW,GAAG,IAAI,CAACA,WAAW,CAACc,MAAM,CAAEC,SAAS,IAAKA,SAAS,CAACT,MAAM,KAAKA,MAAM,CAAC;IACtF,IAAI,CAACL,cAAc,GAAG,IAAI;EAC9B;EAEA;;;EAGOe,eAAeA,CAAA;IAClB,IAAI,CAAChB,WAAW,GAAG,EAAE;IACrB,IAAI,CAACC,cAAc,GAAG,IAAI;EAC9B;EAEA;EACA,IAAWgB,UAAUA,CAAA;IACjB,OAAO,IAAI,CAACjB,WAAW;EAC3B;EAEA;EACOkB,YAAYA,CAAA;IACf,OAAO,cAAc;EACzB;EAEA;EACOC,SAASA,CAACC,mBAAwB;IACrCA,mBAAmB,CAACH,UAAU,GAAG,IAAI,CAACjB,WAAW;IACjDoB,mBAAmB,CAACC,SAAS,GAAG,IAAI,CAACH,YAAY,EAAE;EACvD;EAEA;EACOI,KAAKA,CAACF,mBAAwB;IACjC,IAAI,CAACpB,WAAW,GAAGoB,mBAAmB,CAACH,UAAU;EACrD"},"metadata":{},"sourceType":"module","externalDependencies":[]}