{"ast":null,"code":"import { __decorate } from \"../../../../tslib.es6.js\";\nimport { NodeGeometryBlockConnectionPointTypes } from \"../../Enums/nodeGeometryConnectionPointTypes.js\";\nimport { NodeGeometryBlock } from \"../../nodeGeometryBlock.js\";\nimport { RegisterClass } from \"../../../../Misc/typeStore.js\";\nimport { VertexData } from \"../../../../Meshes/mesh.vertexData.js\";\nimport { PropertyTypeForEdition, editableInPropertyPage } from \"../../../../Decorators/nodeDecorator.js\";\n/**\n * Defines a block used to generate a user defined mesh geometry data\n */\nexport class MeshBlock extends NodeGeometryBlock {\n  /**\n   * Gets or sets the mesh to use to get vertex data\n   */\n  get mesh() {\n    return this._mesh;\n  }\n  set mesh(value) {\n    this._mesh = value;\n  }\n  /**\n   * Create a new MeshBlock\n   * @param name defines the block name\n   */\n  constructor(name) {\n    super(name);\n    this._cachedVertexData = null;\n    /**\n     * Gets or sets a boolean indicating that winding order needs to be reserved\n     */\n    this.reverseWindingOrder = false;\n    /**\n     * Gets or sets a boolean indicating that this block should serialize its cached data\n     */\n    this.serializedCachedData = false;\n    this.registerOutput(\"geometry\", NodeGeometryBlockConnectionPointTypes.Geometry);\n  }\n  /**\n   * Gets the current class name\n   * @returns the class name\n   */\n  getClassName() {\n    return \"MeshBlock\";\n  }\n  /**\n   * Gets a boolean indicating if the block is using cached data\n   */\n  get isUsingCachedData() {\n    return !this.mesh && !!this._cachedVertexData;\n  }\n  /**\n   * Gets the geometry output component\n   */\n  get geometry() {\n    return this._outputs[0];\n  }\n  /**\n   * Remove stored data\n   */\n  cleanData() {\n    this._mesh = null;\n    this._cachedVertexData = null;\n  }\n  _buildBlock() {\n    if (!this._mesh) {\n      if (this._cachedVertexData) {\n        this.geometry._storedValue = this._cachedVertexData.clone();\n      } else {\n        this.geometry._storedValue = null;\n      }\n      return;\n    }\n    const vertexData = VertexData.ExtractFromMesh(this._mesh, false, true);\n    this._cachedVertexData = null;\n    if (this.reverseWindingOrder && vertexData.indices) {\n      for (let index = 0; index < vertexData.indices.length; index += 3) {\n        const tmp = vertexData.indices[index];\n        vertexData.indices[index] = vertexData.indices[index + 2];\n        vertexData.indices[index + 2] = tmp;\n      }\n    }\n    this.geometry._storedFunction = () => {\n      return vertexData.clone();\n    };\n  }\n  /**\n   * Serializes this block in a JSON representation\n   * @returns the serialized block object\n   */\n  serialize() {\n    const serializationObject = super.serialize();\n    serializationObject.serializedCachedData = this.serializedCachedData;\n    if (this.serializedCachedData) {\n      if (this._mesh) {\n        serializationObject.cachedVertexData = VertexData.ExtractFromMesh(this._mesh, false, true).serialize();\n      } else if (this._cachedVertexData) {\n        serializationObject.cachedVertexData = this._cachedVertexData.serialize();\n      }\n    }\n    serializationObject.reverseWindingOrder = this.reverseWindingOrder;\n    return serializationObject;\n  }\n  _deserialize(serializationObject) {\n    super._deserialize(serializationObject);\n    if (serializationObject.cachedVertexData) {\n      this._cachedVertexData = VertexData.Parse(serializationObject.cachedVertexData);\n    }\n    this.serializedCachedData = !!serializationObject.serializedCachedData;\n    this.reverseWindingOrder = serializationObject.reverseWindingOrder;\n  }\n}\n__decorate([editableInPropertyPage(\"Serialize cached data\", PropertyTypeForEdition.Boolean, \"ADVANCED\", {\n  notifiers: {\n    rebuild: true\n  }\n})], MeshBlock.prototype, \"serializedCachedData\", void 0);\nRegisterClass(\"BABYLON.MeshBlock\", MeshBlock);","map":{"version":3,"names":["NodeGeometryBlockConnectionPointTypes","NodeGeometryBlock","RegisterClass","VertexData","PropertyTypeForEdition","editableInPropertyPage","MeshBlock","mesh","_mesh","value","constructor","name","_cachedVertexData","reverseWindingOrder","serializedCachedData","registerOutput","Geometry","getClassName","isUsingCachedData","geometry","_outputs","cleanData","_buildBlock","_storedValue","clone","vertexData","ExtractFromMesh","indices","index","length","tmp","_storedFunction","serialize","serializationObject","cachedVertexData","_deserialize","Parse","__decorate","Boolean","notifiers","rebuild"],"sources":["../../../../../../../dev/core/src/Meshes/Node/Blocks/Sources/meshBlock.ts"],"sourcesContent":["import { NodeGeometryBlockConnectionPointTypes } from \"../../Enums/nodeGeometryConnectionPointTypes\";\r\nimport { NodeGeometryBlock } from \"../../nodeGeometryBlock\";\r\nimport type { NodeGeometryConnectionPoint } from \"../../nodeGeometryBlockConnectionPoint\";\r\nimport { RegisterClass } from \"../../../../Misc/typeStore\";\r\nimport type { Mesh } from \"../../../../Meshes/mesh\";\r\nimport { VertexData } from \"../../../../Meshes/mesh.vertexData\";\r\nimport type { Nullable } from \"../../../../types\";\r\nimport { PropertyTypeForEdition, editableInPropertyPage } from \"core/Decorators/nodeDecorator\";\r\n\r\n/**\r\n * Defines a block used to generate a user defined mesh geometry data\r\n */\r\nexport class MeshBlock extends NodeGeometryBlock {\r\n    private _mesh: Nullable<Mesh>;\r\n    private _cachedVertexData: Nullable<VertexData> = null;\r\n\r\n    /**\r\n     * Gets or sets a boolean indicating that winding order needs to be reserved\r\n     */\r\n    public reverseWindingOrder = false;\r\n\r\n    /**\r\n     * Gets or sets a boolean indicating that this block should serialize its cached data\r\n     */\r\n    @editableInPropertyPage(\"Serialize cached data\", PropertyTypeForEdition.Boolean, \"ADVANCED\", { notifiers: { rebuild: true } })\r\n    public serializedCachedData = false;\r\n\r\n    /**\r\n     * Gets or sets the mesh to use to get vertex data\r\n     */\r\n    public get mesh() {\r\n        return this._mesh;\r\n    }\r\n\r\n    public set mesh(value: Nullable<Mesh>) {\r\n        this._mesh = value;\r\n    }\r\n\r\n    /**\r\n     * Create a new MeshBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name);\r\n\r\n        this.registerOutput(\"geometry\", NodeGeometryBlockConnectionPointTypes.Geometry);\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"MeshBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets a boolean indicating if the block is using cached data\r\n     */\r\n    public get isUsingCachedData() {\r\n        return !this.mesh && !!this._cachedVertexData;\r\n    }\r\n\r\n    /**\r\n     * Gets the geometry output component\r\n     */\r\n    public get geometry(): NodeGeometryConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    /**\r\n     * Remove stored data\r\n     */\r\n    public cleanData() {\r\n        this._mesh = null;\r\n        this._cachedVertexData = null;\r\n    }\r\n\r\n    protected _buildBlock() {\r\n        if (!this._mesh) {\r\n            if (this._cachedVertexData) {\r\n                this.geometry._storedValue = this._cachedVertexData.clone();\r\n            } else {\r\n                this.geometry._storedValue = null;\r\n            }\r\n            return;\r\n        }\r\n\r\n        const vertexData = VertexData.ExtractFromMesh(this._mesh, false, true);\r\n        this._cachedVertexData = null;\r\n\r\n        if (this.reverseWindingOrder && vertexData.indices) {\r\n            for (let index = 0; index < vertexData.indices.length; index += 3) {\r\n                const tmp = vertexData.indices[index];\r\n                vertexData.indices[index] = vertexData.indices[index + 2];\r\n                vertexData.indices[index + 2] = tmp;\r\n            }\r\n        }\r\n\r\n        this.geometry._storedFunction = () => {\r\n            return vertexData.clone();\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Serializes this block in a JSON representation\r\n     * @returns the serialized block object\r\n     */\r\n    public serialize(): any {\r\n        const serializationObject = super.serialize();\r\n        serializationObject.serializedCachedData = this.serializedCachedData;\r\n\r\n        if (this.serializedCachedData) {\r\n            if (this._mesh) {\r\n                serializationObject.cachedVertexData = VertexData.ExtractFromMesh(this._mesh, false, true).serialize();\r\n            } else if (this._cachedVertexData) {\r\n                serializationObject.cachedVertexData = this._cachedVertexData.serialize();\r\n            }\r\n        }\r\n\r\n        serializationObject.reverseWindingOrder = this.reverseWindingOrder;\r\n\r\n        return serializationObject;\r\n    }\r\n\r\n    public _deserialize(serializationObject: any) {\r\n        super._deserialize(serializationObject);\r\n\r\n        if (serializationObject.cachedVertexData) {\r\n            this._cachedVertexData = VertexData.Parse(serializationObject.cachedVertexData);\r\n        }\r\n\r\n        this.serializedCachedData = !!serializationObject.serializedCachedData;\r\n        this.reverseWindingOrder = serializationObject.reverseWindingOrder;\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.MeshBlock\", MeshBlock);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}