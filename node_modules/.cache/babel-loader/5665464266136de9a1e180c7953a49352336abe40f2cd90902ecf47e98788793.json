{"ast":null,"code":"import { FlowGraphWithOnDoneExecutionBlock } from \"../../flowGraphWithOnDoneExecutionBlock.js\";\nimport { RichTypeAny } from \"../../flowGraphRichTypes.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * @experimental\n * Block that logs a message to the console.\n */\nexport class FlowGraphLogBlock extends FlowGraphWithOnDoneExecutionBlock {\n  constructor(config) {\n    super(config);\n    this.message = this._registerDataInput(\"message\", RichTypeAny);\n  }\n  /**\n   * @internal\n   */\n  _execute(context) {\n    const messageValue = this.message.getValue(context);\n    console.log(messageValue);\n    // activate the output flow block\n    this.onDone._activateSignal(context);\n  }\n  getClassName() {\n    return \"FGLogBlock\";\n  }\n}\nRegisterClass(\"FGLogBlock\", FlowGraphLogBlock);","map":{"version":3,"names":["FlowGraphWithOnDoneExecutionBlock","RichTypeAny","RegisterClass","FlowGraphLogBlock","constructor","config","message","_registerDataInput","_execute","context","messageValue","getValue","console","log","onDone","_activateSignal","getClassName"],"sources":["../../../../../../dev/core/src/FlowGraph/Blocks/Execution/flowGraphLogBlock.ts"],"sourcesContent":["import type { FlowGraphContext } from \"../../flowGraphContext\";\r\nimport type { FlowGraphDataConnection } from \"../../flowGraphDataConnection\";\r\nimport { FlowGraphWithOnDoneExecutionBlock } from \"../../flowGraphWithOnDoneExecutionBlock\";\r\nimport { RichTypeAny } from \"../../flowGraphRichTypes\";\r\nimport { RegisterClass } from \"../../../Misc/typeStore\";\r\nimport type { IFlowGraphBlockConfiguration } from \"../../flowGraphBlock\";\r\n\r\n/**\r\n * @experimental\r\n * Block that logs a message to the console.\r\n */\r\nexport class FlowGraphLogBlock extends FlowGraphWithOnDoneExecutionBlock {\r\n    /**\r\n     * Input connection: The message to log.\r\n     */\r\n    public readonly message: FlowGraphDataConnection<any>;\r\n\r\n    public constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(config);\r\n        this.message = this._registerDataInput(\"message\", RichTypeAny);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public _execute(context: FlowGraphContext): void {\r\n        const messageValue = this.message.getValue(context);\r\n        console.log(messageValue);\r\n        // activate the output flow block\r\n        this.onDone._activateSignal(context);\r\n    }\r\n\r\n    public getClassName(): string {\r\n        return \"FGLogBlock\";\r\n    }\r\n}\r\nRegisterClass(\"FGLogBlock\", FlowGraphLogBlock);\r\n"],"mappings":"AAEA,SAASA,iCAAiC,QAAQ,4CAA0C;AAC5F,SAASC,WAAW,QAAQ,6BAA2B;AACvD,SAASC,aAAa,QAAQ,4BAA0B;AAGxD;;;;AAIA,OAAM,MAAOC,iBAAkB,SAAQH,iCAAiC;EAMpEI,YAAmBC,MAAqC;IACpD,KAAK,CAACA,MAAM,CAAC;IACb,IAAI,CAACC,OAAO,GAAG,IAAI,CAACC,kBAAkB,CAAC,SAAS,EAAEN,WAAW,CAAC;EAClE;EAEA;;;EAGOO,QAAQA,CAACC,OAAyB;IACrC,MAAMC,YAAY,GAAG,IAAI,CAACJ,OAAO,CAACK,QAAQ,CAACF,OAAO,CAAC;IACnDG,OAAO,CAACC,GAAG,CAACH,YAAY,CAAC;IACzB;IACA,IAAI,CAACI,MAAM,CAACC,eAAe,CAACN,OAAO,CAAC;EACxC;EAEOO,YAAYA,CAAA;IACf,OAAO,YAAY;EACvB;;AAEJd,aAAa,CAAC,YAAY,EAAEC,iBAAiB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}