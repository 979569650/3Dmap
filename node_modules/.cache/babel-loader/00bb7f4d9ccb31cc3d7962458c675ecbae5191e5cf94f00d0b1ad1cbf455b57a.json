{"ast":null,"code":"import { Control } from \"./control.js\";\nimport { StackPanel } from \"./stackPanel.js\";\nimport { TextBlock } from \"./textBlock.js\";\n/**\n * Forcing an export so that this code will execute\n * @internal\n */\nconst name = \"Statics\";\nexport { name };\n/**\n * Creates a stack panel that can be used to render headers\n * @param control defines the control to associate with the header\n * @param text defines the text of the header\n * @param size defines the size of the header\n * @param options defines options used to configure the header\n * @param options.isHorizontal\n * @param options.controlFirst\n * @returns a new StackPanel\n */\nControl.AddHeader = function (control, text, size, options) {\n  const panel = new StackPanel(\"panel\");\n  const isHorizontal = options ? options.isHorizontal : true;\n  const controlFirst = options ? options.controlFirst : true;\n  panel.isVertical = !isHorizontal;\n  const header = new TextBlock(\"header\");\n  header.text = text;\n  header.textHorizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n  if (isHorizontal) {\n    header.width = size;\n  } else {\n    header.height = size;\n  }\n  if (controlFirst) {\n    panel.addControl(control);\n    panel.addControl(header);\n    header.paddingLeft = \"5px\";\n  } else {\n    panel.addControl(header);\n    panel.addControl(control);\n    header.paddingRight = \"5px\";\n  }\n  header.shadowBlur = control.shadowBlur;\n  header.shadowColor = control.shadowColor;\n  header.shadowOffsetX = control.shadowOffsetX;\n  header.shadowOffsetY = control.shadowOffsetY;\n  return panel;\n};","map":{"version":3,"names":["Control","StackPanel","TextBlock","name","AddHeader","control","text","size","options","panel","isHorizontal","controlFirst","isVertical","header","textHorizontalAlignment","HORIZONTAL_ALIGNMENT_LEFT","width","height","addControl","paddingLeft","paddingRight","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY"],"sources":["../../../../../dev/gui/src/2D/controls/statics.ts"],"sourcesContent":["import { Control } from \"./control\";\r\nimport { StackPanel } from \"./stackPanel\";\r\nimport { TextBlock } from \"./textBlock\";\r\n\r\n/**\r\n * Forcing an export so that this code will execute\r\n * @internal\r\n */\r\nconst name = \"Statics\";\r\n\r\nexport { name };\r\n\r\n/**\r\n * Creates a stack panel that can be used to render headers\r\n * @param control defines the control to associate with the header\r\n * @param text defines the text of the header\r\n * @param size defines the size of the header\r\n * @param options defines options used to configure the header\r\n * @param options.isHorizontal\r\n * @param options.controlFirst\r\n * @returns a new StackPanel\r\n */\r\nControl.AddHeader = function (control: Control, text: string, size: string | number, options: { isHorizontal: boolean; controlFirst: boolean }): StackPanel {\r\n    const panel = new StackPanel(\"panel\");\r\n    const isHorizontal = options ? options.isHorizontal : true;\r\n    const controlFirst = options ? options.controlFirst : true;\r\n\r\n    panel.isVertical = !isHorizontal;\r\n\r\n    const header = new TextBlock(\"header\");\r\n    header.text = text;\r\n    header.textHorizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\r\n    if (isHorizontal) {\r\n        header.width = size;\r\n    } else {\r\n        header.height = size;\r\n    }\r\n\r\n    if (controlFirst) {\r\n        panel.addControl(control);\r\n        panel.addControl(header);\r\n        header.paddingLeft = \"5px\";\r\n    } else {\r\n        panel.addControl(header);\r\n        panel.addControl(control);\r\n        header.paddingRight = \"5px\";\r\n    }\r\n\r\n    header.shadowBlur = control.shadowBlur;\r\n    header.shadowColor = control.shadowColor;\r\n    header.shadowOffsetX = control.shadowOffsetX;\r\n    header.shadowOffsetY = control.shadowOffsetY;\r\n\r\n    return panel;\r\n};\r\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,cAAY;AACpC,SAASC,UAAU,QAAQ,iBAAe;AAC1C,SAASC,SAAS,QAAQ,gBAAc;AAExC;;;;AAIA,MAAMC,IAAI,GAAG,SAAS;AAEtB,SAASA,IAAI;AAEb;;;;;;;;;;AAUAH,OAAO,CAACI,SAAS,GAAG,UAAUC,OAAgB,EAAEC,IAAY,EAAEC,IAAqB,EAAEC,OAAyD;EAC1I,MAAMC,KAAK,GAAG,IAAIR,UAAU,CAAC,OAAO,CAAC;EACrC,MAAMS,YAAY,GAAGF,OAAO,GAAGA,OAAO,CAACE,YAAY,GAAG,IAAI;EAC1D,MAAMC,YAAY,GAAGH,OAAO,GAAGA,OAAO,CAACG,YAAY,GAAG,IAAI;EAE1DF,KAAK,CAACG,UAAU,GAAG,CAACF,YAAY;EAEhC,MAAMG,MAAM,GAAG,IAAIX,SAAS,CAAC,QAAQ,CAAC;EACtCW,MAAM,CAACP,IAAI,GAAGA,IAAI;EAClBO,MAAM,CAACC,uBAAuB,GAAGd,OAAO,CAACe,yBAAyB;EAClE,IAAIL,YAAY,EAAE;IACdG,MAAM,CAACG,KAAK,GAAGT,IAAI;GACtB,MAAM;IACHM,MAAM,CAACI,MAAM,GAAGV,IAAI;;EAGxB,IAAII,YAAY,EAAE;IACdF,KAAK,CAACS,UAAU,CAACb,OAAO,CAAC;IACzBI,KAAK,CAACS,UAAU,CAACL,MAAM,CAAC;IACxBA,MAAM,CAACM,WAAW,GAAG,KAAK;GAC7B,MAAM;IACHV,KAAK,CAACS,UAAU,CAACL,MAAM,CAAC;IACxBJ,KAAK,CAACS,UAAU,CAACb,OAAO,CAAC;IACzBQ,MAAM,CAACO,YAAY,GAAG,KAAK;;EAG/BP,MAAM,CAACQ,UAAU,GAAGhB,OAAO,CAACgB,UAAU;EACtCR,MAAM,CAACS,WAAW,GAAGjB,OAAO,CAACiB,WAAW;EACxCT,MAAM,CAACU,aAAa,GAAGlB,OAAO,CAACkB,aAAa;EAC5CV,MAAM,CAACW,aAAa,GAAGnB,OAAO,CAACmB,aAAa;EAE5C,OAAOf,KAAK;AAChB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}