{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\nimport { Color3 } from \"../../../Maths/math.color.js\";\nimport { Observable } from \"../../../Misc/observable.js\";\n/**\n * Class used to store a color step for the GradientBlock\n */\nexport class GradientBlockColorStep {\n  /**\n   * Gets value indicating which step this color is associated with (between 0 and 1)\n   */\n  get step() {\n    return this._step;\n  }\n  /**\n   * Sets a value indicating which step this color is associated with (between 0 and 1)\n   */\n  set step(val) {\n    this._step = val;\n  }\n  /**\n   * Gets the color associated with this step\n   */\n  get color() {\n    return this._color;\n  }\n  /**\n   * Sets the color associated with this step\n   */\n  set color(val) {\n    this._color = val;\n  }\n  /**\n   * Creates a new GradientBlockColorStep\n   * @param step defines a value indicating which step this color is associated with (between 0 and 1)\n   * @param color defines the color associated with this step\n   */\n  constructor(step, color) {\n    this.step = step;\n    this.color = color;\n  }\n}\n/**\n * Block used to return a color from a gradient based on an input value between 0 and 1\n */\nexport class GradientBlock extends NodeMaterialBlock {\n  /** calls observable when the value is changed*/\n  colorStepsUpdated() {\n    this.onValueChangedObservable.notifyObservers(this);\n  }\n  /**\n   * Creates a new GradientBlock\n   * @param name defines the block name\n   */\n  constructor(name) {\n    super(name, NodeMaterialBlockTargets.Neutral);\n    /**\n     * Gets or sets the list of color steps\n     */\n    this.colorSteps = [new GradientBlockColorStep(0, Color3.Black()), new GradientBlockColorStep(1.0, Color3.White())];\n    /** Gets an observable raised when the value is changed */\n    this.onValueChangedObservable = new Observable();\n    this.registerInput(\"gradient\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n    this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Color3);\n    this._inputs[0].addExcludedConnectionPointFromAllowedTypes(NodeMaterialBlockConnectionPointTypes.Float | NodeMaterialBlockConnectionPointTypes.Vector2 | NodeMaterialBlockConnectionPointTypes.Vector3 | NodeMaterialBlockConnectionPointTypes.Vector4 | NodeMaterialBlockConnectionPointTypes.Color3 | NodeMaterialBlockConnectionPointTypes.Color4);\n  }\n  /**\n   * Gets the current class name\n   * @returns the class name\n   */\n  getClassName() {\n    return \"GradientBlock\";\n  }\n  /**\n   * Gets the gradient input component\n   */\n  get gradient() {\n    return this._inputs[0];\n  }\n  /**\n   * Gets the output component\n   */\n  get output() {\n    return this._outputs[0];\n  }\n  _writeColorConstant(index) {\n    const step = this.colorSteps[index];\n    return `vec3(${step.color.r}, ${step.color.g}, ${step.color.b})`;\n  }\n  _buildBlock(state) {\n    super._buildBlock(state);\n    const output = this._outputs[0];\n    if (!this.colorSteps.length || !this.gradient.connectedPoint) {\n      state.compilationString += this._declareOutput(output, state) + ` = vec3(0., 0., 0.);\\n`;\n      return;\n    }\n    const tempColor = state._getFreeVariableName(\"gradientTempColor\");\n    const tempPosition = state._getFreeVariableName(\"gradientTempPosition\");\n    state.compilationString += `vec3 ${tempColor} = ${this._writeColorConstant(0)};\\n`;\n    state.compilationString += `float ${tempPosition};\\n`;\n    let gradientSource = this.gradient.associatedVariableName;\n    if (this.gradient.connectedPoint.type !== NodeMaterialBlockConnectionPointTypes.Float) {\n      gradientSource += \".x\";\n    }\n    for (let index = 1; index < this.colorSteps.length; index++) {\n      const step = this.colorSteps[index];\n      const previousStep = this.colorSteps[index - 1];\n      state.compilationString += `${tempPosition} = clamp((${gradientSource} - ${state._emitFloat(previousStep.step)}) / (${state._emitFloat(step.step)} -  ${state._emitFloat(previousStep.step)}), 0.0, 1.0) * step(${state._emitFloat(index)}, ${state._emitFloat(this.colorSteps.length - 1)});\\n`;\n      state.compilationString += `${tempColor} = mix(${tempColor}, ${this._writeColorConstant(index)}, ${tempPosition});\\n`;\n    }\n    state.compilationString += this._declareOutput(output, state) + ` = ${tempColor};\\n`;\n    return this;\n  }\n  serialize() {\n    const serializationObject = super.serialize();\n    serializationObject.colorSteps = [];\n    for (const step of this.colorSteps) {\n      serializationObject.colorSteps.push({\n        step: step.step,\n        color: {\n          r: step.color.r,\n          g: step.color.g,\n          b: step.color.b\n        }\n      });\n    }\n    return serializationObject;\n  }\n  _deserialize(serializationObject, scene, rootUrl) {\n    super._deserialize(serializationObject, scene, rootUrl);\n    this.colorSteps.length = 0;\n    for (const step of serializationObject.colorSteps) {\n      this.colorSteps.push(new GradientBlockColorStep(step.step, new Color3(step.color.r, step.color.g, step.color.b)));\n    }\n  }\n  _dumpPropertiesCode() {\n    let codeString = super._dumpPropertiesCode();\n    codeString += `${this._codeVariableName}.colorSteps = [];\\n`;\n    for (const colorStep of this.colorSteps) {\n      codeString += `${this._codeVariableName}.colorSteps.push(new BABYLON.GradientBlockColorStep(${colorStep.step}, new BABYLON.Color3(${colorStep.color.r}, ${colorStep.color.g}, ${colorStep.color.b})));\\n`;\n    }\n    return codeString;\n  }\n}\nRegisterClass(\"BABYLON.GradientBlock\", GradientBlock);","map":{"version":3,"names":["NodeMaterialBlock","NodeMaterialBlockConnectionPointTypes","NodeMaterialBlockTargets","RegisterClass","Color3","Observable","GradientBlockColorStep","step","_step","val","color","_color","constructor","GradientBlock","colorStepsUpdated","onValueChangedObservable","notifyObservers","name","Neutral","colorSteps","Black","White","registerInput","AutoDetect","registerOutput","_inputs","addExcludedConnectionPointFromAllowedTypes","Float","Vector2","Vector3","Vector4","Color4","getClassName","gradient","output","_outputs","_writeColorConstant","index","r","g","b","_buildBlock","state","length","connectedPoint","compilationString","_declareOutput","tempColor","_getFreeVariableName","tempPosition","gradientSource","associatedVariableName","type","previousStep","_emitFloat","serialize","serializationObject","push","_deserialize","scene","rootUrl","_dumpPropertiesCode","codeString","_codeVariableName","colorStep"],"sources":["../../../../../../dev/core/src/Materials/Node/Blocks/gradientBlock.ts"],"sourcesContent":["import { NodeMaterialBlock } from \"../nodeMaterialBlock\";\r\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes\";\r\nimport type { NodeMaterialBuildState } from \"../nodeMaterialBuildState\";\r\nimport type { NodeMaterialConnectionPoint } from \"../nodeMaterialBlockConnectionPoint\";\r\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets\";\r\nimport { RegisterClass } from \"../../../Misc/typeStore\";\r\nimport { Color3 } from \"../../../Maths/math.color\";\r\nimport type { Scene } from \"../../../scene\";\r\nimport { Observable } from \"../../../Misc/observable\";\r\n\r\n/**\r\n * Class used to store a color step for the GradientBlock\r\n */\r\nexport class GradientBlockColorStep {\r\n    private _step: number;\r\n    /**\r\n     * Gets value indicating which step this color is associated with (between 0 and 1)\r\n     */\r\n    public get step(): number {\r\n        return this._step;\r\n    }\r\n\r\n    /**\r\n     * Sets a value indicating which step this color is associated with (between 0 and 1)\r\n     */\r\n    public set step(val: number) {\r\n        this._step = val;\r\n    }\r\n\r\n    private _color: Color3;\r\n\r\n    /**\r\n     * Gets the color associated with this step\r\n     */\r\n    public get color(): Color3 {\r\n        return this._color;\r\n    }\r\n\r\n    /**\r\n     * Sets the color associated with this step\r\n     */\r\n    public set color(val: Color3) {\r\n        this._color = val;\r\n    }\r\n\r\n    /**\r\n     * Creates a new GradientBlockColorStep\r\n     * @param step defines a value indicating which step this color is associated with (between 0 and 1)\r\n     * @param color defines the color associated with this step\r\n     */\r\n    public constructor(step: number, color: Color3) {\r\n        this.step = step;\r\n        this.color = color;\r\n    }\r\n}\r\n\r\n/**\r\n * Block used to return a color from a gradient based on an input value between 0 and 1\r\n */\r\nexport class GradientBlock extends NodeMaterialBlock {\r\n    /**\r\n     * Gets or sets the list of color steps\r\n     */\r\n    public colorSteps: GradientBlockColorStep[] = [new GradientBlockColorStep(0, Color3.Black()), new GradientBlockColorStep(1.0, Color3.White())];\r\n\r\n    /** Gets an observable raised when the value is changed */\r\n    public onValueChangedObservable = new Observable<GradientBlock>();\r\n\r\n    /** calls observable when the value is changed*/\r\n    public colorStepsUpdated() {\r\n        this.onValueChangedObservable.notifyObservers(this);\r\n    }\r\n    /**\r\n     * Creates a new GradientBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name, NodeMaterialBlockTargets.Neutral);\r\n\r\n        this.registerInput(\"gradient\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\r\n        this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Color3);\r\n\r\n        this._inputs[0].addExcludedConnectionPointFromAllowedTypes(\r\n            NodeMaterialBlockConnectionPointTypes.Float |\r\n                NodeMaterialBlockConnectionPointTypes.Vector2 |\r\n                NodeMaterialBlockConnectionPointTypes.Vector3 |\r\n                NodeMaterialBlockConnectionPointTypes.Vector4 |\r\n                NodeMaterialBlockConnectionPointTypes.Color3 |\r\n                NodeMaterialBlockConnectionPointTypes.Color4\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"GradientBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the gradient input component\r\n     */\r\n    public get gradient(): NodeMaterialConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the output component\r\n     */\r\n    public get output(): NodeMaterialConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    private _writeColorConstant(index: number) {\r\n        const step = this.colorSteps[index];\r\n        return `vec3(${step.color.r}, ${step.color.g}, ${step.color.b})`;\r\n    }\r\n\r\n    protected _buildBlock(state: NodeMaterialBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        const output = this._outputs[0];\r\n\r\n        if (!this.colorSteps.length || !this.gradient.connectedPoint) {\r\n            state.compilationString += this._declareOutput(output, state) + ` = vec3(0., 0., 0.);\\n`;\r\n            return;\r\n        }\r\n\r\n        const tempColor = state._getFreeVariableName(\"gradientTempColor\");\r\n        const tempPosition = state._getFreeVariableName(\"gradientTempPosition\");\r\n\r\n        state.compilationString += `vec3 ${tempColor} = ${this._writeColorConstant(0)};\\n`;\r\n        state.compilationString += `float ${tempPosition};\\n`;\r\n\r\n        let gradientSource = this.gradient.associatedVariableName;\r\n\r\n        if (this.gradient.connectedPoint!.type !== NodeMaterialBlockConnectionPointTypes.Float) {\r\n            gradientSource += \".x\";\r\n        }\r\n\r\n        for (let index = 1; index < this.colorSteps.length; index++) {\r\n            const step = this.colorSteps[index];\r\n            const previousStep = this.colorSteps[index - 1];\r\n            state.compilationString += `${tempPosition} = clamp((${gradientSource} - ${state._emitFloat(previousStep.step)}) / (${state._emitFloat(\r\n                step.step\r\n            )} -  ${state._emitFloat(previousStep.step)}), 0.0, 1.0) * step(${state._emitFloat(index)}, ${state._emitFloat(this.colorSteps.length - 1)});\\n`;\r\n            state.compilationString += `${tempColor} = mix(${tempColor}, ${this._writeColorConstant(index)}, ${tempPosition});\\n`;\r\n        }\r\n        state.compilationString += this._declareOutput(output, state) + ` = ${tempColor};\\n`;\r\n\r\n        return this;\r\n    }\r\n\r\n    public serialize(): any {\r\n        const serializationObject = super.serialize();\r\n\r\n        serializationObject.colorSteps = [];\r\n\r\n        for (const step of this.colorSteps) {\r\n            serializationObject.colorSteps.push({\r\n                step: step.step,\r\n                color: {\r\n                    r: step.color.r,\r\n                    g: step.color.g,\r\n                    b: step.color.b,\r\n                },\r\n            });\r\n        }\r\n\r\n        return serializationObject;\r\n    }\r\n\r\n    public _deserialize(serializationObject: any, scene: Scene, rootUrl: string) {\r\n        super._deserialize(serializationObject, scene, rootUrl);\r\n\r\n        this.colorSteps.length = 0;\r\n\r\n        for (const step of serializationObject.colorSteps) {\r\n            this.colorSteps.push(new GradientBlockColorStep(step.step, new Color3(step.color.r, step.color.g, step.color.b)));\r\n        }\r\n    }\r\n\r\n    protected _dumpPropertiesCode() {\r\n        let codeString = super._dumpPropertiesCode();\r\n\r\n        codeString += `${this._codeVariableName}.colorSteps = [];\\n`;\r\n\r\n        for (const colorStep of this.colorSteps) {\r\n            codeString += `${this._codeVariableName}.colorSteps.push(new BABYLON.GradientBlockColorStep(${colorStep.step}, new BABYLON.Color3(${colorStep.color.r}, ${colorStep.color.g}, ${colorStep.color.b})));\\n`;\r\n        }\r\n\r\n        return codeString;\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.GradientBlock\", GradientBlock);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}