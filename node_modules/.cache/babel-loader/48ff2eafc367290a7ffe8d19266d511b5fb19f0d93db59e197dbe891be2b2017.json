{"ast":null,"code":"import { WebGPUEngine } from \"../../webgpuEngine.js\";\nimport { Effect } from \"../../../Materials/effect.js\";\nEffect.prototype.setTextureSampler = function (name, sampler) {\n  this._engine.setTextureSampler(name, sampler);\n};\nWebGPUEngine.prototype.setTextureSampler = function (name, sampler) {\n  var _a;\n  (_a = this._currentMaterialContext) === null || _a === void 0 ? void 0 : _a.setSampler(name, sampler);\n};","map":{"version":3,"names":["WebGPUEngine","Effect","prototype","setTextureSampler","name","sampler","_engine","_a","_currentMaterialContext","setSampler"],"sources":["../../../../../../dev/core/src/Engines/WebGPU/Extensions/engine.textureSampler.ts"],"sourcesContent":["import { WebGPUEngine } from \"../../webgpuEngine\";\r\nimport type { Nullable } from \"../../../types\";\r\nimport { Effect } from \"../../../Materials/effect\";\r\n\r\nimport type { TextureSampler } from \"../../../Materials/Textures/textureSampler\";\r\n\r\ndeclare module \"../../../Materials/effect\" {\r\n    export interface Effect {\r\n        /**\r\n         * Sets a sampler on the engine to be used in the shader.\r\n         * @param name Name of the sampler variable.\r\n         * @param sampler Sampler to set.\r\n         */\r\n        setTextureSampler(name: string, sampler: Nullable<TextureSampler>): void;\r\n    }\r\n}\r\n\r\nEffect.prototype.setTextureSampler = function (name: string, sampler: Nullable<TextureSampler>): void {\r\n    this._engine.setTextureSampler(name, sampler);\r\n};\r\n\r\nWebGPUEngine.prototype.setTextureSampler = function (name: string, sampler: Nullable<TextureSampler>): void {\r\n    this._currentMaterialContext?.setSampler(name, sampler);\r\n};\r\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,uBAAqB;AAElD,SAASC,MAAM,QAAQ,8BAA4B;AAenDA,MAAM,CAACC,SAAS,CAACC,iBAAiB,GAAG,UAAUC,IAAY,EAAEC,OAAiC;EAC1F,IAAI,CAACC,OAAO,CAACH,iBAAiB,CAACC,IAAI,EAAEC,OAAO,CAAC;AACjD,CAAC;AAEDL,YAAY,CAACE,SAAS,CAACC,iBAAiB,GAAG,UAAUC,IAAY,EAAEC,OAAiC;;EAChG,CAAAE,EAAA,OAAI,CAACC,uBAAuB,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,UAAU,CAACL,IAAI,EAAEC,OAAO,CAAC;AAC3D,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}