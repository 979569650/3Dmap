{"ast":null,"code":"import { NodeGeometryBlock } from \"../nodeGeometryBlock.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\nimport { NodeGeometryBlockConnectionPointTypes } from \"../Enums/nodeGeometryConnectionPointTypes.js\";\nimport { Vector3 } from \"../../../Maths/math.vector.js\";\nimport { Scalar } from \"../../../Maths/math.scalar.js\";\nimport { NodeGeometryContextualSources } from \"../Enums/nodeGeometryContextualSources.js\";\n/**\n * Block used to get a noise value\n */\nexport class NoiseBlock extends NodeGeometryBlock {\n  /**\n   * Create a new NoiseBlock\n   * @param name defines the block name\n   */\n  constructor(name) {\n    super(name);\n    this.registerInput(\"offset\", NodeGeometryBlockConnectionPointTypes.Vector3, true, Vector3.Zero());\n    this.registerInput(\"scale\", NodeGeometryBlockConnectionPointTypes.Float, true, 1);\n    this.registerInput(\"octaves\", NodeGeometryBlockConnectionPointTypes.Float, true, 2, 0, 16);\n    this.registerInput(\"roughness\", NodeGeometryBlockConnectionPointTypes.Float, true, 0.5, 0, 1);\n    this.registerOutput(\"output\", NodeGeometryBlockConnectionPointTypes.Float);\n  }\n  /**\n   * Gets the current class name\n   * @returns the class name\n   */\n  getClassName() {\n    return \"NoiseBlock\";\n  }\n  /**\n   * Gets the offset input component\n   */\n  get offset() {\n    return this._inputs[0];\n  }\n  /**\n   * Gets the scale input component\n   */\n  get scale() {\n    return this._inputs[1];\n  }\n  /**\n   * Gets the octaves input component\n   */\n  get octaves() {\n    return this._inputs[2];\n  }\n  /**\n   * Gets the roughtness input component\n   */\n  get roughness() {\n    return this._inputs[3];\n  }\n  /**\n   * Gets the geometry output component\n   */\n  get output() {\n    return this._outputs[0];\n  }\n  _negateIf(value, condition) {\n    return condition !== 0 ? -value : value;\n  }\n  _noiseGrad(hash, x, y, z) {\n    const h = hash & 15;\n    const u = h < 8 ? x : y;\n    const vt = h === 12 || h == 14 ? x : z;\n    const v = h < 4 ? y : vt;\n    return this._negateIf(u, h & u) + this._negateIf(v, h & 2);\n  }\n  _fade(t) {\n    return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);\n  }\n  _hashBitRotate(x, k) {\n    return x << k | x >> 32 - k;\n  }\n  _hash(kx, ky, kz) {\n    let a, b, c;\n    a = b = c = 0xdeadbeef + (3 << 2) + 13;\n    c += kz;\n    b += ky;\n    a += kx;\n    c ^= b;\n    c -= this._hashBitRotate(b, 14);\n    a ^= c;\n    a -= this._hashBitRotate(c, 11);\n    b ^= a;\n    b -= this._hashBitRotate(a, 25);\n    c ^= b;\n    c -= this._hashBitRotate(b, 16);\n    a ^= c;\n    a -= this._hashBitRotate(c, 4);\n    b ^= a;\n    b -= this._hashBitRotate(a, 14);\n    c ^= b;\n    c -= this._hashBitRotate(b, 24);\n    return c;\n  }\n  _mix(v0, v1, v2, v3, v4, v5, v6, v7, x, y, z) {\n    const x1 = 1.0 - x;\n    const y1 = 1.0 - y;\n    const z1 = 1.0 - z;\n    return z1 * (y1 * (v0 * x1 + v1 * x) + y * (v2 * x1 + v3 * x)) + z * (y1 * (v4 * x1 + v5 * x) + y * (v6 * x1 + v7 * x));\n  }\n  _perlinNoise(position) {\n    const X = (position.x | 0) - (position.x < 0 ? 1 : 0);\n    const Y = (position.y | 0) - (position.y < 0 ? 1 : 0);\n    const Z = (position.z | 0) - (position.z < 0 ? 1 : 0);\n    const fx = position.x - X;\n    const fy = position.y - Y;\n    const fz = position.z - Z;\n    const u = this._fade(fx);\n    const v = this._fade(fy);\n    const w = this._fade(fz);\n    return this._mix(this._noiseGrad(this._hash(X, Y, Z), fx, fy, fz), this._noiseGrad(this._hash(X + 1, Y, Z), fx - 1, fy, fz), this._noiseGrad(this._hash(X, Y + 1, Z), fx, fy - 1, fz), this._noiseGrad(this._hash(X + 1, Y + 1, Z), fx - 1, fy - 1, fz), this._noiseGrad(this._hash(X, Y, Z + 1), fx, fy, fz - 1), this._noiseGrad(this._hash(X + 1, Y, Z + 1), fx - 1, fy, fz - 1), this._noiseGrad(this._hash(X, Y + 1, Z + 1), fx, fy - 1, fz - 1), this._noiseGrad(this._hash(X + 1, Y + 1, Z + 1), fx - 1, fy - 1, fz - 1), u, v, w);\n  }\n  _perlinSigned(position) {\n    return this._perlinNoise(position) * 0.982;\n  }\n  _perlin(position) {\n    return this._perlinSigned(position) / 2.0 + 0.5;\n  }\n  /**\n   * Gets a perlin noise value\n   * @param octaves\n   * @param roughness\n   * @param position\n   * @returns a value between 0 and 1\n   * @see Based on https://github.com/blender/blender/blob/main/source/blender/blenlib/intern/noise.cc#L533\n   */\n  noise(octaves, roughness, _position, offset, scale) {\n    const position = new Vector3(_position.x * scale + offset.x, _position.y * scale + offset.y, _position.z * scale + offset.z);\n    let fscale = 1.0;\n    let amp = 1.0;\n    let maxamp = 0.0;\n    let sum = 0.0;\n    octaves = Scalar.Clamp(octaves, 0, 15.0);\n    const step = octaves | 0;\n    for (let i = 0; i <= step; i++) {\n      const t = this._perlin(position.scale(fscale));\n      sum += t * amp;\n      maxamp += amp;\n      amp *= Scalar.Clamp(roughness, 0.0, 1.0);\n      fscale *= 2.0;\n    }\n    const rmd = octaves - Math.floor(octaves);\n    if (rmd == 0.0) {\n      return sum / maxamp;\n    }\n    const t = this._perlin(position.scale(fscale));\n    let sum2 = sum + t * amp;\n    sum /= maxamp;\n    sum2 /= maxamp + amp;\n    return (1.0 - rmd) * sum + rmd * sum2;\n  }\n  _buildBlock() {\n    this.output._storedFunction = state => {\n      const position = state.getContextualValue(NodeGeometryContextualSources.Positions);\n      const octaves = this.octaves.getConnectedValue(state);\n      const roughness = this.roughness.getConnectedValue(state);\n      const offset = this.offset.getConnectedValue(state);\n      const scale = this.scale.getConnectedValue(state);\n      return this.noise(octaves, roughness, position, offset, scale);\n    };\n  }\n}\nRegisterClass(\"BABYLON.NoiseBlock\", NoiseBlock);","map":{"version":3,"names":["NodeGeometryBlock","RegisterClass","NodeGeometryBlockConnectionPointTypes","Vector3","Scalar","NodeGeometryContextualSources","NoiseBlock","constructor","name","registerInput","Zero","Float","registerOutput","getClassName","offset","_inputs","scale","octaves","roughness","output","_outputs","_negateIf","value","condition","_noiseGrad","hash","x","y","z","h","u","vt","v","_fade","t","_hashBitRotate","k","_hash","kx","ky","kz","a","b","c","_mix","v0","v1","v2","v3","v4","v5","v6","v7","x1","y1","z1","_perlinNoise","position","X","Y","Z","fx","fy","fz","w","_perlinSigned","_perlin","noise","_position","fscale","amp","maxamp","sum","Clamp","step","i","rmd","Math","floor","sum2","_buildBlock","_storedFunction","state","getContextualValue","Positions","getConnectedValue"],"sources":["../../../../../../dev/core/src/Meshes/Node/Blocks/noiseBlock.ts"],"sourcesContent":["import { NodeGeometryBlock } from \"../nodeGeometryBlock\";\r\nimport type { NodeGeometryConnectionPoint } from \"../nodeGeometryBlockConnectionPoint\";\r\nimport { RegisterClass } from \"../../../Misc/typeStore\";\r\nimport { NodeGeometryBlockConnectionPointTypes } from \"../Enums/nodeGeometryConnectionPointTypes\";\r\nimport { Vector3 } from \"../../../Maths/math.vector\";\r\nimport { Scalar } from \"../../../Maths/math.scalar\";\r\nimport { NodeGeometryContextualSources } from \"../Enums/nodeGeometryContextualSources\";\r\n\r\n/**\r\n * Block used to get a noise value\r\n */\r\nexport class NoiseBlock extends NodeGeometryBlock {\r\n    /**\r\n     * Create a new NoiseBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name);\r\n\r\n        this.registerInput(\"offset\", NodeGeometryBlockConnectionPointTypes.Vector3, true, Vector3.Zero());\r\n        this.registerInput(\"scale\", NodeGeometryBlockConnectionPointTypes.Float, true, 1);\r\n\r\n        this.registerInput(\"octaves\", NodeGeometryBlockConnectionPointTypes.Float, true, 2, 0, 16);\r\n        this.registerInput(\"roughness\", NodeGeometryBlockConnectionPointTypes.Float, true, 0.5, 0, 1);\r\n\r\n        this.registerOutput(\"output\", NodeGeometryBlockConnectionPointTypes.Float);\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"NoiseBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the offset input component\r\n     */\r\n    public get offset(): NodeGeometryConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the scale input component\r\n     */\r\n    public get scale(): NodeGeometryConnectionPoint {\r\n        return this._inputs[1];\r\n    }\r\n\r\n    /**\r\n     * Gets the octaves input component\r\n     */\r\n    public get octaves(): NodeGeometryConnectionPoint {\r\n        return this._inputs[2];\r\n    }\r\n\r\n    /**\r\n     * Gets the roughtness input component\r\n     */\r\n    public get roughness(): NodeGeometryConnectionPoint {\r\n        return this._inputs[3];\r\n    }\r\n\r\n    /**\r\n     * Gets the geometry output component\r\n     */\r\n    public get output(): NodeGeometryConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    private _negateIf(value: number, condition: number) {\r\n        return condition !== 0 ? -value : value;\r\n    }\r\n\r\n    private _noiseGrad(hash: number, x: number, y: number, z: number) {\r\n        const h = hash & 15;\r\n        const u = h < 8 ? x : y;\r\n        const vt = h === 12 || h == 14 ? x : z;\r\n        const v = h < 4 ? y : vt;\r\n        return this._negateIf(u, h & u) + this._negateIf(v, h & 2);\r\n    }\r\n\r\n    private _fade(t: number) {\r\n        return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);\r\n    }\r\n\r\n    private _hashBitRotate(x: number, k: number) {\r\n        return (x << k) | (x >> (32 - k));\r\n    }\r\n\r\n    private _hash(kx: number, ky: number, kz: number) {\r\n        let a: number, b: number, c: number;\r\n        a = b = c = 0xdeadbeef + (3 << 2) + 13;\r\n\r\n        c += kz;\r\n        b += ky;\r\n        a += kx;\r\n\r\n        c ^= b;\r\n        c -= this._hashBitRotate(b, 14);\r\n        a ^= c;\r\n        a -= this._hashBitRotate(c, 11);\r\n        b ^= a;\r\n        b -= this._hashBitRotate(a, 25);\r\n        c ^= b;\r\n        c -= this._hashBitRotate(b, 16);\r\n        a ^= c;\r\n        a -= this._hashBitRotate(c, 4);\r\n        b ^= a;\r\n        b -= this._hashBitRotate(a, 14);\r\n        c ^= b;\r\n        c -= this._hashBitRotate(b, 24);\r\n\r\n        return c;\r\n    }\r\n\r\n    private _mix(v0: number, v1: number, v2: number, v3: number, v4: number, v5: number, v6: number, v7: number, x: number, y: number, z: number) {\r\n        const x1 = 1.0 - x;\r\n        const y1 = 1.0 - y;\r\n        const z1 = 1.0 - z;\r\n        return z1 * (y1 * (v0 * x1 + v1 * x) + y * (v2 * x1 + v3 * x)) + z * (y1 * (v4 * x1 + v5 * x) + y * (v6 * x1 + v7 * x));\r\n    }\r\n\r\n    private _perlinNoise(position: Vector3) {\r\n        const X = (position.x | 0) - (position.x < 0 ? 1 : 0);\r\n        const Y = (position.y | 0) - (position.y < 0 ? 1 : 0);\r\n        const Z = (position.z | 0) - (position.z < 0 ? 1 : 0);\r\n\r\n        const fx = position.x - X;\r\n        const fy = position.y - Y;\r\n        const fz = position.z - Z;\r\n\r\n        const u = this._fade(fx);\r\n        const v = this._fade(fy);\r\n        const w = this._fade(fz);\r\n\r\n        return this._mix(\r\n            this._noiseGrad(this._hash(X, Y, Z), fx, fy, fz),\r\n            this._noiseGrad(this._hash(X + 1, Y, Z), fx - 1, fy, fz),\r\n            this._noiseGrad(this._hash(X, Y + 1, Z), fx, fy - 1, fz),\r\n            this._noiseGrad(this._hash(X + 1, Y + 1, Z), fx - 1, fy - 1, fz),\r\n            this._noiseGrad(this._hash(X, Y, Z + 1), fx, fy, fz - 1),\r\n            this._noiseGrad(this._hash(X + 1, Y, Z + 1), fx - 1, fy, fz - 1),\r\n            this._noiseGrad(this._hash(X, Y + 1, Z + 1), fx, fy - 1, fz - 1),\r\n            this._noiseGrad(this._hash(X + 1, Y + 1, Z + 1), fx - 1, fy - 1, fz - 1),\r\n            u,\r\n            v,\r\n            w\r\n        );\r\n    }\r\n\r\n    private _perlinSigned(position: Vector3) {\r\n        return this._perlinNoise(position) * 0.982;\r\n    }\r\n\r\n    private _perlin(position: Vector3) {\r\n        return this._perlinSigned(position) / 2.0 + 0.5;\r\n    }\r\n\r\n    /**\r\n     * Gets a perlin noise value\r\n     * @param octaves\r\n     * @param roughness\r\n     * @param position\r\n     * @returns a value between 0 and 1\r\n     * @see Based on https://github.com/blender/blender/blob/main/source/blender/blenlib/intern/noise.cc#L533\r\n     */\r\n    noise(octaves: number, roughness: number, _position: Vector3, offset: Vector3, scale: number) {\r\n        const position = new Vector3(_position.x * scale + offset.x, _position.y * scale + offset.y, _position.z * scale + offset.z);\r\n\r\n        let fscale = 1.0;\r\n        let amp = 1.0;\r\n        let maxamp = 0.0;\r\n        let sum = 0.0;\r\n        octaves = Scalar.Clamp(octaves, 0, 15.0);\r\n        const step = octaves | 0;\r\n\r\n        for (let i = 0; i <= step; i++) {\r\n            const t = this._perlin(position.scale(fscale));\r\n            sum += t * amp;\r\n            maxamp += amp;\r\n            amp *= Scalar.Clamp(roughness, 0.0, 1.0);\r\n            fscale *= 2.0;\r\n        }\r\n\r\n        const rmd = octaves - Math.floor(octaves);\r\n        if (rmd == 0.0) {\r\n            return sum / maxamp;\r\n        }\r\n\r\n        const t = this._perlin(position.scale(fscale));\r\n        let sum2 = sum + t * amp;\r\n        sum /= maxamp;\r\n        sum2 /= maxamp + amp;\r\n        return (1.0 - rmd) * sum + rmd * sum2;\r\n    }\r\n\r\n    protected _buildBlock() {\r\n        this.output._storedFunction = (state) => {\r\n            const position = state.getContextualValue(NodeGeometryContextualSources.Positions) as Vector3;\r\n            const octaves = this.octaves.getConnectedValue(state);\r\n            const roughness = this.roughness.getConnectedValue(state);\r\n\r\n            const offset = this.offset.getConnectedValue(state) as Vector3;\r\n            const scale = this.scale.getConnectedValue(state);\r\n\r\n            return this.noise(octaves, roughness, position, offset, scale);\r\n        };\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.NoiseBlock\", NoiseBlock);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}