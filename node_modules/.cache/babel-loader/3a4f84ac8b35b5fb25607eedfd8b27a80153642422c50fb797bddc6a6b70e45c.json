{"ast":null,"code":"/**\n * Wrapper class for promise with external resolve and reject.\n */\nexport class Deferred {\n  /**\n   * The resolve method of the promise associated with this deferred object.\n   */\n  get resolve() {\n    return this._resolve;\n  }\n  /**\n   * The reject method of the promise associated with this deferred object.\n   */\n  get reject() {\n    return this._reject;\n  }\n  /**\n   * Constructor for this deferred object.\n   */\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n}","map":{"version":3,"names":["Deferred","resolve","_resolve","reject","_reject","constructor","promise","Promise"],"sources":["../../../../dev/core/src/Misc/deferred.ts"],"sourcesContent":["/**\r\n * Wrapper class for promise with external resolve and reject.\r\n */\r\nexport class Deferred<T> {\r\n    /**\r\n     * The promise associated with this deferred object.\r\n     */\r\n    public readonly promise: Promise<T>;\r\n\r\n    private _resolve: (value: T | PromiseLike<T>) => void;\r\n    private _reject: (reason?: any) => void;\r\n\r\n    /**\r\n     * The resolve method of the promise associated with this deferred object.\r\n     */\r\n    public get resolve() {\r\n        return this._resolve;\r\n    }\r\n\r\n    /**\r\n     * The reject method of the promise associated with this deferred object.\r\n     */\r\n    public get reject() {\r\n        return this._reject;\r\n    }\r\n\r\n    /**\r\n     * Constructor for this deferred object.\r\n     */\r\n    constructor() {\r\n        this.promise = new Promise((resolve: (value: T | PromiseLike<T>) => void, reject) => {\r\n            this._resolve = resolve;\r\n            this._reject = reject;\r\n        });\r\n    }\r\n}\r\n"],"mappings":"AAAA;;;AAGA,OAAM,MAAOA,QAAQ;EASjB;;;EAGA,IAAWC,OAAOA,CAAA;IACd,OAAO,IAAI,CAACC,QAAQ;EACxB;EAEA;;;EAGA,IAAWC,MAAMA,CAAA;IACb,OAAO,IAAI,CAACC,OAAO;EACvB;EAEA;;;EAGAC,YAAA;IACI,IAAI,CAACC,OAAO,GAAG,IAAIC,OAAO,CAAC,CAACN,OAA4C,EAAEE,MAAM,KAAI;MAChF,IAAI,CAACD,QAAQ,GAAGD,OAAO;MACvB,IAAI,CAACG,OAAO,GAAGD,MAAM;IACzB,CAAC,CAAC;EACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}