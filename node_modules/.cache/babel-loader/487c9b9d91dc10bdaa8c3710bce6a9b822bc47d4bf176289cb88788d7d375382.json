{"ast":null,"code":"import { FlowGraphBlock } from \"../../flowGraphBlock.js\";\nimport { RichTypeString, RichTypeAny } from \"../../flowGraphRichTypes.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * A block that gets the value of a variable.\n * @experimental\n */\nexport class FlowGraphGetVariableBlock extends FlowGraphBlock {\n  /**\n   * Construct a FlowGraphGetVariableBlock.\n   * @param params optional construction parameters\n   */\n  constructor(config) {\n    super(config);\n    this.variableName = this._registerDataInput(\"variableName\", RichTypeString);\n    this.output = this._registerDataOutput(\"output\", RichTypeAny);\n  }\n  /**\n   * @internal\n   */\n  _updateOutputs(context) {\n    const variableNameValue = this.variableName.getValue(context);\n    if (context.hasVariable(variableNameValue)) {\n      this.output.setValue(context.getVariable(variableNameValue), context);\n    }\n  }\n  getClassName() {\n    return \"FGGetVariableBlock\";\n  }\n}\nRegisterClass(\"FGGetVariableBlock\", FlowGraphGetVariableBlock);","map":{"version":3,"names":["FlowGraphBlock","RichTypeString","RichTypeAny","RegisterClass","FlowGraphGetVariableBlock","constructor","config","variableName","_registerDataInput","output","_registerDataOutput","_updateOutputs","context","variableNameValue","getValue","hasVariable","setValue","getVariable","getClassName"],"sources":["../../../../../../dev/core/src/FlowGraph/Blocks/Data/flowGraphGetVariableBlock.ts"],"sourcesContent":["import type { FlowGraphContext } from \"../../flowGraphContext\";\r\nimport type { IFlowGraphBlockConfiguration } from \"../../flowGraphBlock\";\r\nimport { FlowGraphBlock } from \"../../flowGraphBlock\";\r\nimport type { FlowGraphDataConnection } from \"../../flowGraphDataConnection\";\r\nimport { RichTypeString, RichTypeAny } from \"../../flowGraphRichTypes\";\r\nimport { RegisterClass } from \"../../../Misc/typeStore\";\r\n\r\n/**\r\n * A block that gets the value of a variable.\r\n * @experimental\r\n */\r\nexport class FlowGraphGetVariableBlock<T> extends FlowGraphBlock {\r\n    /**\r\n     * Input connection: The name of the variable to get.\r\n     */\r\n    public readonly variableName: FlowGraphDataConnection<string>;\r\n    /**\r\n     * Output connection: The value of the variable.\r\n     */\r\n    public readonly output: FlowGraphDataConnection<T>;\r\n\r\n    /**\r\n     * Construct a FlowGraphGetVariableBlock.\r\n     * @param params optional construction parameters\r\n     */\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(config);\r\n\r\n        this.variableName = this._registerDataInput(\"variableName\", RichTypeString);\r\n        this.output = this._registerDataOutput(\"output\", RichTypeAny);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public _updateOutputs(context: FlowGraphContext): void {\r\n        const variableNameValue = this.variableName.getValue(context);\r\n        if (context.hasVariable(variableNameValue)) {\r\n            this.output.setValue(context.getVariable(variableNameValue), context);\r\n        }\r\n    }\r\n\r\n    public getClassName(): string {\r\n        return \"FGGetVariableBlock\";\r\n    }\r\n}\r\nRegisterClass(\"FGGetVariableBlock\", FlowGraphGetVariableBlock);\r\n"],"mappings":"AAEA,SAASA,cAAc,QAAQ,yBAAuB;AAEtD,SAASC,cAAc,EAAEC,WAAW,QAAQ,6BAA2B;AACvE,SAASC,aAAa,QAAQ,4BAA0B;AAExD;;;;AAIA,OAAM,MAAOC,yBAA6B,SAAQJ,cAAc;EAU5D;;;;EAIAK,YAAYC,MAAqC;IAC7C,KAAK,CAACA,MAAM,CAAC;IAEb,IAAI,CAACC,YAAY,GAAG,IAAI,CAACC,kBAAkB,CAAC,cAAc,EAAEP,cAAc,CAAC;IAC3E,IAAI,CAACQ,MAAM,GAAG,IAAI,CAACC,mBAAmB,CAAC,QAAQ,EAAER,WAAW,CAAC;EACjE;EAEA;;;EAGOS,cAAcA,CAACC,OAAyB;IAC3C,MAAMC,iBAAiB,GAAG,IAAI,CAACN,YAAY,CAACO,QAAQ,CAACF,OAAO,CAAC;IAC7D,IAAIA,OAAO,CAACG,WAAW,CAACF,iBAAiB,CAAC,EAAE;MACxC,IAAI,CAACJ,MAAM,CAACO,QAAQ,CAACJ,OAAO,CAACK,WAAW,CAACJ,iBAAiB,CAAC,EAAED,OAAO,CAAC;;EAE7E;EAEOM,YAAYA,CAAA;IACf,OAAO,oBAAoB;EAC/B;;AAEJf,aAAa,CAAC,oBAAoB,EAAEC,yBAAyB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}