{"ast":null,"code":"import { Engine } from \"./engine.js\";\nimport { NullEngine } from \"./nullEngine.js\";\nimport { WebGPUEngine } from \"./webgpuEngine.js\";\n/**\n * Helper class to create the best engine depending on the current hardware\n */\nexport class EngineFactory {\n  /**\n   * Creates an engine based on the capabilities of the underlying hardware\n   * @param canvas Defines the canvas to use to display the result\n   * @param options Defines the options passed to the engine to create the context dependencies\n   * @returns a promise that resolves with the created engine\n   */\n  static async CreateAsync(canvas, options) {\n    const supported = await WebGPUEngine.IsSupportedAsync;\n    if (supported) {\n      return WebGPUEngine.CreateAsync(canvas, options);\n    }\n    if (Engine.IsSupported) {\n      return new Engine(canvas, undefined, options);\n    }\n    return new NullEngine(options);\n  }\n}","map":{"version":3,"names":["Engine","NullEngine","WebGPUEngine","EngineFactory","CreateAsync","canvas","options","supported","IsSupportedAsync","IsSupported","undefined"],"sources":["../../../../dev/core/src/Engines/engineFactory.ts"],"sourcesContent":["import { Engine } from \"./engine\";\r\nimport { NullEngine } from \"./nullEngine\";\r\nimport { WebGPUEngine } from \"./webgpuEngine\";\r\n\r\n/**\r\n * Helper class to create the best engine depending on the current hardware\r\n */\r\nexport class EngineFactory {\r\n    /**\r\n     * Creates an engine based on the capabilities of the underlying hardware\r\n     * @param canvas Defines the canvas to use to display the result\r\n     * @param options Defines the options passed to the engine to create the context dependencies\r\n     * @returns a promise that resolves with the created engine\r\n     */\r\n    public static async CreateAsync(canvas: HTMLCanvasElement, options: any): Promise<Engine> {\r\n        const supported = await WebGPUEngine.IsSupportedAsync;\r\n        if (supported) {\r\n            return WebGPUEngine.CreateAsync(canvas, options);\r\n        }\r\n        if (Engine.IsSupported) {\r\n            return new Engine(canvas, undefined, options);\r\n        }\r\n        return new NullEngine(options);\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,aAAW;AAClC,SAASC,UAAU,QAAQ,iBAAe;AAC1C,SAASC,YAAY,QAAQ,mBAAiB;AAE9C;;;AAGA,OAAM,MAAOC,aAAa;EACtB;;;;;;EAMO,aAAaC,WAAWA,CAACC,MAAyB,EAAEC,OAAY;IACnE,MAAMC,SAAS,GAAG,MAAML,YAAY,CAACM,gBAAgB;IACrD,IAAID,SAAS,EAAE;MACX,OAAOL,YAAY,CAACE,WAAW,CAACC,MAAM,EAAEC,OAAO,CAAC;;IAEpD,IAAIN,MAAM,CAACS,WAAW,EAAE;MACpB,OAAO,IAAIT,MAAM,CAACK,MAAM,EAAEK,SAAS,EAAEJ,OAAO,CAAC;;IAEjD,OAAO,IAAIL,UAAU,CAACK,OAAO,CAAC;EAClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}