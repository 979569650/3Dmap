{"ast":null,"code":"/**\n * Groups all the scene component constants in one place to ease maintenance.\n * @internal\n */\nexport class SceneComponentConstants {}\nSceneComponentConstants.NAME_EFFECTLAYER = \"EffectLayer\";\nSceneComponentConstants.NAME_LAYER = \"Layer\";\nSceneComponentConstants.NAME_LENSFLARESYSTEM = \"LensFlareSystem\";\nSceneComponentConstants.NAME_BOUNDINGBOXRENDERER = \"BoundingBoxRenderer\";\nSceneComponentConstants.NAME_PARTICLESYSTEM = \"ParticleSystem\";\nSceneComponentConstants.NAME_GAMEPAD = \"Gamepad\";\nSceneComponentConstants.NAME_SIMPLIFICATIONQUEUE = \"SimplificationQueue\";\nSceneComponentConstants.NAME_GEOMETRYBUFFERRENDERER = \"GeometryBufferRenderer\";\nSceneComponentConstants.NAME_PREPASSRENDERER = \"PrePassRenderer\";\nSceneComponentConstants.NAME_DEPTHRENDERER = \"DepthRenderer\";\nSceneComponentConstants.NAME_DEPTHPEELINGRENDERER = \"DepthPeelingRenderer\";\nSceneComponentConstants.NAME_POSTPROCESSRENDERPIPELINEMANAGER = \"PostProcessRenderPipelineManager\";\nSceneComponentConstants.NAME_SPRITE = \"Sprite\";\nSceneComponentConstants.NAME_SUBSURFACE = \"SubSurface\";\nSceneComponentConstants.NAME_OUTLINERENDERER = \"Outline\";\nSceneComponentConstants.NAME_PROCEDURALTEXTURE = \"ProceduralTexture\";\nSceneComponentConstants.NAME_SHADOWGENERATOR = \"ShadowGenerator\";\nSceneComponentConstants.NAME_OCTREE = \"Octree\";\nSceneComponentConstants.NAME_PHYSICSENGINE = \"PhysicsEngine\";\nSceneComponentConstants.NAME_AUDIO = \"Audio\";\nSceneComponentConstants.NAME_FLUIDRENDERER = \"FluidRenderer\";\nSceneComponentConstants.STEP_ISREADYFORMESH_EFFECTLAYER = 0;\nSceneComponentConstants.STEP_BEFOREEVALUATEACTIVEMESH_BOUNDINGBOXRENDERER = 0;\nSceneComponentConstants.STEP_EVALUATESUBMESH_BOUNDINGBOXRENDERER = 0;\nSceneComponentConstants.STEP_PREACTIVEMESH_BOUNDINGBOXRENDERER = 0;\nSceneComponentConstants.STEP_CAMERADRAWRENDERTARGET_EFFECTLAYER = 1;\nSceneComponentConstants.STEP_BEFORECAMERADRAW_PREPASS = 0;\nSceneComponentConstants.STEP_BEFORECAMERADRAW_EFFECTLAYER = 1;\nSceneComponentConstants.STEP_BEFORECAMERADRAW_LAYER = 2;\nSceneComponentConstants.STEP_BEFORERENDERTARGETDRAW_PREPASS = 0;\nSceneComponentConstants.STEP_BEFORERENDERTARGETDRAW_LAYER = 1;\nSceneComponentConstants.STEP_BEFORERENDERINGMESH_PREPASS = 0;\nSceneComponentConstants.STEP_BEFORERENDERINGMESH_OUTLINE = 1;\nSceneComponentConstants.STEP_AFTERRENDERINGMESH_PREPASS = 0;\nSceneComponentConstants.STEP_AFTERRENDERINGMESH_OUTLINE = 1;\nSceneComponentConstants.STEP_AFTERRENDERINGGROUPDRAW_EFFECTLAYER_DRAW = 0;\nSceneComponentConstants.STEP_AFTERRENDERINGGROUPDRAW_BOUNDINGBOXRENDERER = 1;\nSceneComponentConstants.STEP_BEFORECAMERAUPDATE_SIMPLIFICATIONQUEUE = 0;\nSceneComponentConstants.STEP_BEFORECAMERAUPDATE_GAMEPAD = 1;\nSceneComponentConstants.STEP_BEFORECLEAR_PROCEDURALTEXTURE = 0;\nSceneComponentConstants.STEP_BEFORECLEAR_PREPASS = 1;\nSceneComponentConstants.STEP_BEFORERENDERTARGETCLEAR_PREPASS = 0;\nSceneComponentConstants.STEP_AFTERRENDERTARGETDRAW_PREPASS = 0;\nSceneComponentConstants.STEP_AFTERRENDERTARGETDRAW_LAYER = 1;\nSceneComponentConstants.STEP_AFTERCAMERADRAW_PREPASS = 0;\nSceneComponentConstants.STEP_AFTERCAMERADRAW_EFFECTLAYER = 1;\nSceneComponentConstants.STEP_AFTERCAMERADRAW_LENSFLARESYSTEM = 2;\nSceneComponentConstants.STEP_AFTERCAMERADRAW_EFFECTLAYER_DRAW = 3;\nSceneComponentConstants.STEP_AFTERCAMERADRAW_LAYER = 4;\nSceneComponentConstants.STEP_AFTERCAMERADRAW_FLUIDRENDERER = 5;\nSceneComponentConstants.STEP_AFTERCAMERAPOSTPROCESS_LAYER = 0;\nSceneComponentConstants.STEP_AFTERRENDERTARGETPOSTPROCESS_LAYER = 0;\nSceneComponentConstants.STEP_AFTERRENDER_AUDIO = 0;\nSceneComponentConstants.STEP_GATHERRENDERTARGETS_DEPTHRENDERER = 0;\nSceneComponentConstants.STEP_GATHERRENDERTARGETS_GEOMETRYBUFFERRENDERER = 1;\nSceneComponentConstants.STEP_GATHERRENDERTARGETS_SHADOWGENERATOR = 2;\nSceneComponentConstants.STEP_GATHERRENDERTARGETS_POSTPROCESSRENDERPIPELINEMANAGER = 3;\nSceneComponentConstants.STEP_GATHERACTIVECAMERARENDERTARGETS_DEPTHRENDERER = 0;\nSceneComponentConstants.STEP_GATHERACTIVECAMERARENDERTARGETS_FLUIDRENDERER = 1;\nSceneComponentConstants.STEP_POINTERMOVE_SPRITE = 0;\nSceneComponentConstants.STEP_POINTERDOWN_SPRITE = 0;\nSceneComponentConstants.STEP_POINTERUP_SPRITE = 0;\n/**\n * Representation of a stage in the scene (Basically a list of ordered steps)\n * @internal\n */\nexport class Stage extends Array {\n  /**\n   * Hide ctor from the rest of the world.\n   * @param items The items to add.\n   */\n  constructor(items) {\n    super(...items);\n  }\n  /**\n   * Creates a new Stage.\n   * @returns A new instance of a Stage\n   */\n  static Create() {\n    return Object.create(Stage.prototype);\n  }\n  /**\n   * Registers a step in an ordered way in the targeted stage.\n   * @param index Defines the position to register the step in\n   * @param component Defines the component attached to the step\n   * @param action Defines the action to launch during the step\n   */\n  registerStep(index, component, action) {\n    let i = 0;\n    let maxIndex = Number.MAX_VALUE;\n    for (; i < this.length; i++) {\n      const step = this[i];\n      maxIndex = step.index;\n      if (index < maxIndex) {\n        break;\n      }\n    }\n    this.splice(i, 0, {\n      index,\n      component,\n      action: action.bind(component)\n    });\n  }\n  /**\n   * Clears all the steps from the stage.\n   */\n  clear() {\n    this.length = 0;\n  }\n}","map":{"version":3,"names":["SceneComponentConstants","NAME_EFFECTLAYER","NAME_LAYER","NAME_LENSFLARESYSTEM","NAME_BOUNDINGBOXRENDERER","NAME_PARTICLESYSTEM","NAME_GAMEPAD","NAME_SIMPLIFICATIONQUEUE","NAME_GEOMETRYBUFFERRENDERER","NAME_PREPASSRENDERER","NAME_DEPTHRENDERER","NAME_DEPTHPEELINGRENDERER","NAME_POSTPROCESSRENDERPIPELINEMANAGER","NAME_SPRITE","NAME_SUBSURFACE","NAME_OUTLINERENDERER","NAME_PROCEDURALTEXTURE","NAME_SHADOWGENERATOR","NAME_OCTREE","NAME_PHYSICSENGINE","NAME_AUDIO","NAME_FLUIDRENDERER","STEP_ISREADYFORMESH_EFFECTLAYER","STEP_BEFOREEVALUATEACTIVEMESH_BOUNDINGBOXRENDERER","STEP_EVALUATESUBMESH_BOUNDINGBOXRENDERER","STEP_PREACTIVEMESH_BOUNDINGBOXRENDERER","STEP_CAMERADRAWRENDERTARGET_EFFECTLAYER","STEP_BEFORECAMERADRAW_PREPASS","STEP_BEFORECAMERADRAW_EFFECTLAYER","STEP_BEFORECAMERADRAW_LAYER","STEP_BEFORERENDERTARGETDRAW_PREPASS","STEP_BEFORERENDERTARGETDRAW_LAYER","STEP_BEFORERENDERINGMESH_PREPASS","STEP_BEFORERENDERINGMESH_OUTLINE","STEP_AFTERRENDERINGMESH_PREPASS","STEP_AFTERRENDERINGMESH_OUTLINE","STEP_AFTERRENDERINGGROUPDRAW_EFFECTLAYER_DRAW","STEP_AFTERRENDERINGGROUPDRAW_BOUNDINGBOXRENDERER","STEP_BEFORECAMERAUPDATE_SIMPLIFICATIONQUEUE","STEP_BEFORECAMERAUPDATE_GAMEPAD","STEP_BEFORECLEAR_PROCEDURALTEXTURE","STEP_BEFORECLEAR_PREPASS","STEP_BEFORERENDERTARGETCLEAR_PREPASS","STEP_AFTERRENDERTARGETDRAW_PREPASS","STEP_AFTERRENDERTARGETDRAW_LAYER","STEP_AFTERCAMERADRAW_PREPASS","STEP_AFTERCAMERADRAW_EFFECTLAYER","STEP_AFTERCAMERADRAW_LENSFLARESYSTEM","STEP_AFTERCAMERADRAW_EFFECTLAYER_DRAW","STEP_AFTERCAMERADRAW_LAYER","STEP_AFTERCAMERADRAW_FLUIDRENDERER","STEP_AFTERCAMERAPOSTPROCESS_LAYER","STEP_AFTERRENDERTARGETPOSTPROCESS_LAYER","STEP_AFTERRENDER_AUDIO","STEP_GATHERRENDERTARGETS_DEPTHRENDERER","STEP_GATHERRENDERTARGETS_GEOMETRYBUFFERRENDERER","STEP_GATHERRENDERTARGETS_SHADOWGENERATOR","STEP_GATHERRENDERTARGETS_POSTPROCESSRENDERPIPELINEMANAGER","STEP_GATHERACTIVECAMERARENDERTARGETS_DEPTHRENDERER","STEP_GATHERACTIVECAMERARENDERTARGETS_FLUIDRENDERER","STEP_POINTERMOVE_SPRITE","STEP_POINTERDOWN_SPRITE","STEP_POINTERUP_SPRITE","Stage","Array","constructor","items","Create","Object","create","prototype","registerStep","index","component","action","i","maxIndex","Number","MAX_VALUE","length","step","splice","bind","clear"],"sources":["../../../dev/core/src/sceneComponent.ts"],"sourcesContent":["import type { Scene } from \"./scene\";\r\nimport type { SmartArrayNoDuplicate } from \"./Misc/smartArray\";\r\nimport type { Nullable } from \"./types\";\r\nimport type { PickingInfo } from \"./Collisions/pickingInfo\";\r\nimport type { AbstractScene } from \"./abstractScene\";\r\nimport type { IPointerEvent } from \"./Events/deviceInputEvents\";\r\n\r\nimport type { Mesh } from \"./Meshes/mesh\";\r\nimport type { Effect } from \"./Materials/effect\";\r\nimport type { Camera } from \"./Cameras/camera\";\r\nimport type { AbstractMesh } from \"./Meshes/abstractMesh\";\r\nimport type { SubMesh } from \"./Meshes/subMesh\";\r\nimport type { RenderTargetTexture } from \"./Materials/Textures/renderTargetTexture\";\r\n\r\n/**\r\n * Groups all the scene component constants in one place to ease maintenance.\r\n * @internal\r\n */\r\nexport class SceneComponentConstants {\r\n    public static readonly NAME_EFFECTLAYER = \"EffectLayer\";\r\n    public static readonly NAME_LAYER = \"Layer\";\r\n    public static readonly NAME_LENSFLARESYSTEM = \"LensFlareSystem\";\r\n    public static readonly NAME_BOUNDINGBOXRENDERER = \"BoundingBoxRenderer\";\r\n    public static readonly NAME_PARTICLESYSTEM = \"ParticleSystem\";\r\n    public static readonly NAME_GAMEPAD = \"Gamepad\";\r\n    public static readonly NAME_SIMPLIFICATIONQUEUE = \"SimplificationQueue\";\r\n    public static readonly NAME_GEOMETRYBUFFERRENDERER = \"GeometryBufferRenderer\";\r\n    public static readonly NAME_PREPASSRENDERER = \"PrePassRenderer\";\r\n    public static readonly NAME_DEPTHRENDERER = \"DepthRenderer\";\r\n    public static readonly NAME_DEPTHPEELINGRENDERER = \"DepthPeelingRenderer\";\r\n    public static readonly NAME_POSTPROCESSRENDERPIPELINEMANAGER = \"PostProcessRenderPipelineManager\";\r\n    public static readonly NAME_SPRITE = \"Sprite\";\r\n    public static readonly NAME_SUBSURFACE = \"SubSurface\";\r\n    public static readonly NAME_OUTLINERENDERER = \"Outline\";\r\n    public static readonly NAME_PROCEDURALTEXTURE = \"ProceduralTexture\";\r\n    public static readonly NAME_SHADOWGENERATOR = \"ShadowGenerator\";\r\n    public static readonly NAME_OCTREE = \"Octree\";\r\n    public static readonly NAME_PHYSICSENGINE = \"PhysicsEngine\";\r\n    public static readonly NAME_AUDIO = \"Audio\";\r\n    public static readonly NAME_FLUIDRENDERER = \"FluidRenderer\";\r\n\r\n    public static readonly STEP_ISREADYFORMESH_EFFECTLAYER = 0;\r\n\r\n    public static readonly STEP_BEFOREEVALUATEACTIVEMESH_BOUNDINGBOXRENDERER = 0;\r\n\r\n    public static readonly STEP_EVALUATESUBMESH_BOUNDINGBOXRENDERER = 0;\r\n\r\n    public static readonly STEP_PREACTIVEMESH_BOUNDINGBOXRENDERER = 0;\r\n\r\n    public static readonly STEP_CAMERADRAWRENDERTARGET_EFFECTLAYER = 1;\r\n\r\n    public static readonly STEP_BEFORECAMERADRAW_PREPASS = 0;\r\n    public static readonly STEP_BEFORECAMERADRAW_EFFECTLAYER = 1;\r\n    public static readonly STEP_BEFORECAMERADRAW_LAYER = 2;\r\n\r\n    public static readonly STEP_BEFORERENDERTARGETDRAW_PREPASS = 0;\r\n    public static readonly STEP_BEFORERENDERTARGETDRAW_LAYER = 1;\r\n\r\n    public static readonly STEP_BEFORERENDERINGMESH_PREPASS = 0;\r\n    public static readonly STEP_BEFORERENDERINGMESH_OUTLINE = 1;\r\n\r\n    public static readonly STEP_AFTERRENDERINGMESH_PREPASS = 0;\r\n    public static readonly STEP_AFTERRENDERINGMESH_OUTLINE = 1;\r\n\r\n    public static readonly STEP_AFTERRENDERINGGROUPDRAW_EFFECTLAYER_DRAW = 0;\r\n    public static readonly STEP_AFTERRENDERINGGROUPDRAW_BOUNDINGBOXRENDERER = 1;\r\n\r\n    public static readonly STEP_BEFORECAMERAUPDATE_SIMPLIFICATIONQUEUE = 0;\r\n    public static readonly STEP_BEFORECAMERAUPDATE_GAMEPAD = 1;\r\n\r\n    public static readonly STEP_BEFORECLEAR_PROCEDURALTEXTURE = 0;\r\n    public static readonly STEP_BEFORECLEAR_PREPASS = 1;\r\n\r\n    public static readonly STEP_BEFORERENDERTARGETCLEAR_PREPASS = 0;\r\n\r\n    public static readonly STEP_AFTERRENDERTARGETDRAW_PREPASS = 0;\r\n    public static readonly STEP_AFTERRENDERTARGETDRAW_LAYER = 1;\r\n\r\n    public static readonly STEP_AFTERCAMERADRAW_PREPASS = 0;\r\n    public static readonly STEP_AFTERCAMERADRAW_EFFECTLAYER = 1;\r\n    public static readonly STEP_AFTERCAMERADRAW_LENSFLARESYSTEM = 2;\r\n    public static readonly STEP_AFTERCAMERADRAW_EFFECTLAYER_DRAW = 3;\r\n    public static readonly STEP_AFTERCAMERADRAW_LAYER = 4;\r\n    public static readonly STEP_AFTERCAMERADRAW_FLUIDRENDERER = 5;\r\n\r\n    public static readonly STEP_AFTERCAMERAPOSTPROCESS_LAYER = 0;\r\n\r\n    public static readonly STEP_AFTERRENDERTARGETPOSTPROCESS_LAYER = 0;\r\n\r\n    public static readonly STEP_AFTERRENDER_AUDIO = 0;\r\n\r\n    public static readonly STEP_GATHERRENDERTARGETS_DEPTHRENDERER = 0;\r\n    public static readonly STEP_GATHERRENDERTARGETS_GEOMETRYBUFFERRENDERER = 1;\r\n    public static readonly STEP_GATHERRENDERTARGETS_SHADOWGENERATOR = 2;\r\n    public static readonly STEP_GATHERRENDERTARGETS_POSTPROCESSRENDERPIPELINEMANAGER = 3;\r\n\r\n    public static readonly STEP_GATHERACTIVECAMERARENDERTARGETS_DEPTHRENDERER = 0;\r\n    public static readonly STEP_GATHERACTIVECAMERARENDERTARGETS_FLUIDRENDERER = 1;\r\n\r\n    public static readonly STEP_POINTERMOVE_SPRITE = 0;\r\n    public static readonly STEP_POINTERDOWN_SPRITE = 0;\r\n    public static readonly STEP_POINTERUP_SPRITE = 0;\r\n}\r\n\r\n/**\r\n * This represents a scene component.\r\n *\r\n * This is used to decouple the dependency the scene is having on the different workloads like\r\n * layers, post processes...\r\n */\r\nexport interface ISceneComponent {\r\n    /**\r\n     * The name of the component. Each component must have a unique name.\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * The scene the component belongs to.\r\n     */\r\n    scene: Scene;\r\n\r\n    /**\r\n     * Register the component to one instance of a scene.\r\n     */\r\n    register(): void;\r\n\r\n    /**\r\n     * Rebuilds the elements related to this component in case of\r\n     * context lost for instance.\r\n     */\r\n    rebuild(): void;\r\n\r\n    /**\r\n     * Disposes the component and the associated ressources.\r\n     */\r\n    dispose(): void;\r\n}\r\n\r\n/**\r\n * This represents a SERIALIZABLE scene component.\r\n *\r\n * This extends Scene Component to add Serialization methods on top.\r\n */\r\nexport interface ISceneSerializableComponent extends ISceneComponent {\r\n    /**\r\n     * Adds all the elements from the container to the scene\r\n     * @param container the container holding the elements\r\n     */\r\n    addFromContainer(container: AbstractScene): void;\r\n\r\n    /**\r\n     * Removes all the elements in the container from the scene\r\n     * @param container contains the elements to remove\r\n     * @param dispose if the removed element should be disposed (default: false)\r\n     */\r\n    removeFromContainer(container: AbstractScene, dispose?: boolean): void;\r\n\r\n    /**\r\n     * Serializes the component data to the specified json object\r\n     * @param serializationObject The object to serialize to\r\n     */\r\n    serialize(serializationObject: any): void;\r\n}\r\n\r\n/**\r\n * Strong typing of a Mesh related stage step action\r\n */\r\nexport type MeshStageAction = (mesh: AbstractMesh, hardwareInstancedRendering: boolean) => boolean;\r\n\r\n/**\r\n * Strong typing of a Evaluate Sub Mesh related stage step action\r\n */\r\nexport type EvaluateSubMeshStageAction = (mesh: AbstractMesh, subMesh: SubMesh) => void;\r\n\r\n/**\r\n * Strong typing of a pre active Mesh related stage step action\r\n */\r\nexport type PreActiveMeshStageAction = (mesh: AbstractMesh) => void;\r\n\r\n/**\r\n * Strong typing of a Camera related stage step action\r\n */\r\nexport type CameraStageAction = (camera: Camera) => void;\r\n\r\n/**\r\n * Strong typing of a Camera Frame buffer related stage step action\r\n */\r\nexport type CameraStageFrameBufferAction = (camera: Camera) => boolean;\r\n\r\n/**\r\n * Strong typing of a Render Target related stage step action\r\n */\r\nexport type RenderTargetStageAction = (renderTarget: RenderTargetTexture, faceIndex?: number, layer?: number) => void;\r\n\r\n/**\r\n * Strong typing of a RenderingGroup related stage step action\r\n */\r\nexport type RenderingGroupStageAction = (renderingGroupId: number) => void;\r\n\r\n/**\r\n * Strong typing of a Mesh Render related stage step action\r\n */\r\nexport type RenderingMeshStageAction = (mesh: Mesh, subMesh: SubMesh, batch: any, effect: Nullable<Effect>) => void;\r\n\r\n/**\r\n * Strong typing of a simple stage step action\r\n */\r\nexport type SimpleStageAction = () => void;\r\n\r\n/**\r\n * Strong typing of a render target action.\r\n */\r\nexport type RenderTargetsStageAction = (renderTargets: SmartArrayNoDuplicate<RenderTargetTexture>) => void;\r\n\r\n/**\r\n * Strong typing of a pointer move action.\r\n */\r\nexport type PointerMoveStageAction = (\r\n    unTranslatedPointerX: number,\r\n    unTranslatedPointerY: number,\r\n    pickResult: Nullable<PickingInfo>,\r\n    isMeshPicked: boolean,\r\n    element: Nullable<HTMLElement>\r\n) => Nullable<PickingInfo>;\r\n\r\n/**\r\n * Strong typing of a pointer up/down action.\r\n */\r\nexport type PointerUpDownStageAction = (\r\n    unTranslatedPointerX: number,\r\n    unTranslatedPointerY: number,\r\n    pickResult: Nullable<PickingInfo>,\r\n    evt: IPointerEvent,\r\n    doubleClick: boolean\r\n) => Nullable<PickingInfo>;\r\n\r\n/**\r\n * Representation of a stage in the scene (Basically a list of ordered steps)\r\n * @internal\r\n */\r\nexport class Stage<T extends Function> extends Array<{ index: number; component: ISceneComponent; action: T }> {\r\n    /**\r\n     * Hide ctor from the rest of the world.\r\n     * @param items The items to add.\r\n     */\r\n    private constructor(items?: { index: number; component: ISceneComponent; action: T }[]) {\r\n        super(...(<any>items));\r\n    }\r\n\r\n    /**\r\n     * Creates a new Stage.\r\n     * @returns A new instance of a Stage\r\n     */\r\n    static Create<T extends Function>(): Stage<T> {\r\n        return Object.create(Stage.prototype);\r\n    }\r\n\r\n    /**\r\n     * Registers a step in an ordered way in the targeted stage.\r\n     * @param index Defines the position to register the step in\r\n     * @param component Defines the component attached to the step\r\n     * @param action Defines the action to launch during the step\r\n     */\r\n    public registerStep(index: number, component: ISceneComponent, action: T): void {\r\n        let i = 0;\r\n        let maxIndex = Number.MAX_VALUE;\r\n        for (; i < this.length; i++) {\r\n            const step = this[i];\r\n            maxIndex = step.index;\r\n            if (index < maxIndex) {\r\n                break;\r\n            }\r\n        }\r\n        this.splice(i, 0, { index, component, action: action.bind(component) });\r\n    }\r\n\r\n    /**\r\n     * Clears all the steps from the stage.\r\n     */\r\n    public clear(): void {\r\n        this.length = 0;\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}