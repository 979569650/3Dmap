{"ast":null,"code":"import { FlowGraphBlock } from \"../../flowGraphBlock.js\";\nimport { RichTypeBoolean, RichTypeAny } from \"../../flowGraphRichTypes.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * @experimental\n * Block that returns a value based on a condition.\n */\nexport class FlowGraphConditionalDataBlock extends FlowGraphBlock {\n  constructor(config) {\n    super(config);\n    this.condition = this._registerDataInput(\"condition\", RichTypeBoolean);\n    this.trueValue = this._registerDataInput(\"trueValue\", RichTypeAny);\n    this.falseValue = this._registerDataInput(\"falseValue\", RichTypeAny);\n    this.output = this._registerDataOutput(\"output\", RichTypeAny);\n  }\n  /**\n   * @internal\n   */\n  _updateOutputs(context) {\n    this.output.setValue(this.condition.getValue(context) ? this.trueValue.getValue(context) : this.falseValue.getValue(context), context);\n  }\n  getClassName() {\n    return \"FGConditionalDataBlock\";\n  }\n}\nRegisterClass(\"FGConditionalDataBlock\", FlowGraphConditionalDataBlock);","map":{"version":3,"names":["FlowGraphBlock","RichTypeBoolean","RichTypeAny","RegisterClass","FlowGraphConditionalDataBlock","constructor","config","condition","_registerDataInput","trueValue","falseValue","output","_registerDataOutput","_updateOutputs","context","setValue","getValue","getClassName"],"sources":["../../../../../../dev/core/src/FlowGraph/Blocks/Data/flowGraphConditionalDataBlock.ts"],"sourcesContent":["import type { FlowGraphContext } from \"../../flowGraphContext\";\r\nimport { FlowGraphBlock } from \"../../flowGraphBlock\";\r\nimport type { FlowGraphDataConnection } from \"../../flowGraphDataConnection\";\r\nimport { RichTypeBoolean, RichTypeAny } from \"../../flowGraphRichTypes\";\r\nimport type { IFlowGraphBlockConfiguration } from \"../../flowGraphBlock\";\r\nimport { RegisterClass } from \"../../../Misc/typeStore\";\r\n/**\r\n * @experimental\r\n * Block that returns a value based on a condition.\r\n */\r\nexport class FlowGraphConditionalDataBlock<T> extends FlowGraphBlock {\r\n    /**\r\n     * Input connection: The condition to check.\r\n     */\r\n    public readonly condition: FlowGraphDataConnection<boolean>;\r\n    /**\r\n     * Input connection: The value to return if the condition is true.\r\n     */\r\n    public readonly trueValue: FlowGraphDataConnection<T>;\r\n    /**\r\n     * Input connection: The value to return if the condition is false.\r\n     */\r\n    public readonly falseValue: FlowGraphDataConnection<T>;\r\n\r\n    /**\r\n     * Output connection: The value that was returned.\r\n     */\r\n    public readonly output: FlowGraphDataConnection<T>;\r\n\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(config);\r\n\r\n        this.condition = this._registerDataInput(\"condition\", RichTypeBoolean);\r\n        this.trueValue = this._registerDataInput(\"trueValue\", RichTypeAny);\r\n        this.falseValue = this._registerDataInput(\"falseValue\", RichTypeAny);\r\n\r\n        this.output = this._registerDataOutput(\"output\", RichTypeAny);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public _updateOutputs(context: FlowGraphContext): void {\r\n        this.output.setValue(this.condition.getValue(context) ? this.trueValue.getValue(context) : this.falseValue.getValue(context), context);\r\n    }\r\n\r\n    public getClassName(): string {\r\n        return \"FGConditionalDataBlock\";\r\n    }\r\n}\r\nRegisterClass(\"FGConditionalDataBlock\", FlowGraphConditionalDataBlock);\r\n"],"mappings":"AACA,SAASA,cAAc,QAAQ,yBAAuB;AAEtD,SAASC,eAAe,EAAEC,WAAW,QAAQ,6BAA2B;AAExE,SAASC,aAAa,QAAQ,4BAA0B;AACxD;;;;AAIA,OAAM,MAAOC,6BAAiC,SAAQJ,cAAc;EAmBhEK,YAAYC,MAAqC;IAC7C,KAAK,CAACA,MAAM,CAAC;IAEb,IAAI,CAACC,SAAS,GAAG,IAAI,CAACC,kBAAkB,CAAC,WAAW,EAAEP,eAAe,CAAC;IACtE,IAAI,CAACQ,SAAS,GAAG,IAAI,CAACD,kBAAkB,CAAC,WAAW,EAAEN,WAAW,CAAC;IAClE,IAAI,CAACQ,UAAU,GAAG,IAAI,CAACF,kBAAkB,CAAC,YAAY,EAAEN,WAAW,CAAC;IAEpE,IAAI,CAACS,MAAM,GAAG,IAAI,CAACC,mBAAmB,CAAC,QAAQ,EAAEV,WAAW,CAAC;EACjE;EAEA;;;EAGOW,cAAcA,CAACC,OAAyB;IAC3C,IAAI,CAACH,MAAM,CAACI,QAAQ,CAAC,IAAI,CAACR,SAAS,CAACS,QAAQ,CAACF,OAAO,CAAC,GAAG,IAAI,CAACL,SAAS,CAACO,QAAQ,CAACF,OAAO,CAAC,GAAG,IAAI,CAACJ,UAAU,CAACM,QAAQ,CAACF,OAAO,CAAC,EAAEA,OAAO,CAAC;EAC1I;EAEOG,YAAYA,CAAA;IACf,OAAO,wBAAwB;EACnC;;AAEJd,aAAa,CAAC,wBAAwB,EAAEC,6BAA6B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}