{"ast":null,"code":"/**\n * Defines the kind of connection point for node geometry\n */\nexport var NodeGeometryBlockConnectionPointTypes;\n(function (NodeGeometryBlockConnectionPointTypes) {\n  /** Int */\n  NodeGeometryBlockConnectionPointTypes[NodeGeometryBlockConnectionPointTypes[\"Int\"] = 1] = \"Int\";\n  /** Float */\n  NodeGeometryBlockConnectionPointTypes[NodeGeometryBlockConnectionPointTypes[\"Float\"] = 2] = \"Float\";\n  /** Vector2 */\n  NodeGeometryBlockConnectionPointTypes[NodeGeometryBlockConnectionPointTypes[\"Vector2\"] = 4] = \"Vector2\";\n  /** Vector3 */\n  NodeGeometryBlockConnectionPointTypes[NodeGeometryBlockConnectionPointTypes[\"Vector3\"] = 8] = \"Vector3\";\n  /** Vector4 */\n  NodeGeometryBlockConnectionPointTypes[NodeGeometryBlockConnectionPointTypes[\"Vector4\"] = 16] = \"Vector4\";\n  /** Matrix */\n  NodeGeometryBlockConnectionPointTypes[NodeGeometryBlockConnectionPointTypes[\"Matrix\"] = 32] = \"Matrix\";\n  /** Geometry */\n  NodeGeometryBlockConnectionPointTypes[NodeGeometryBlockConnectionPointTypes[\"Geometry\"] = 64] = \"Geometry\";\n  /** Texture */\n  NodeGeometryBlockConnectionPointTypes[NodeGeometryBlockConnectionPointTypes[\"Texture\"] = 128] = \"Texture\";\n  /** Detect type based on connection */\n  NodeGeometryBlockConnectionPointTypes[NodeGeometryBlockConnectionPointTypes[\"AutoDetect\"] = 1024] = \"AutoDetect\";\n  /** Output type that will be defined by input type */\n  NodeGeometryBlockConnectionPointTypes[NodeGeometryBlockConnectionPointTypes[\"BasedOnInput\"] = 2048] = \"BasedOnInput\";\n  /** Undefined */\n  NodeGeometryBlockConnectionPointTypes[NodeGeometryBlockConnectionPointTypes[\"Undefined\"] = 4096] = \"Undefined\";\n  /** Bitmask of all types */\n  NodeGeometryBlockConnectionPointTypes[NodeGeometryBlockConnectionPointTypes[\"All\"] = 4095] = \"All\";\n})(NodeGeometryBlockConnectionPointTypes || (NodeGeometryBlockConnectionPointTypes = {}));","map":{"version":3,"names":["NodeGeometryBlockConnectionPointTypes"],"sources":["../../../../../../dev/core/src/Meshes/Node/Enums/nodeGeometryConnectionPointTypes.ts"],"sourcesContent":["/**\r\n * Defines the kind of connection point for node geometry\r\n */\r\nexport enum NodeGeometryBlockConnectionPointTypes {\r\n    /** Int */\r\n    Int = 0x0001,\r\n    /** Float */\r\n    Float = 0x0002,\r\n    /** Vector2 */\r\n    Vector2 = 0x0004,\r\n    /** Vector3 */\r\n    Vector3 = 0x0008,\r\n    /** Vector4 */\r\n    Vector4 = 0x0010,\r\n    /** Matrix */\r\n    Matrix = 0x0020,\r\n    /** Geometry */\r\n    Geometry = 0x0040,\r\n    /** Texture */\r\n    Texture = 0x0080,\r\n    /** Detect type based on connection */\r\n    AutoDetect = 0x0400,\r\n    /** Output type that will be defined by input type */\r\n    BasedOnInput = 0x0800,\r\n    /** Undefined */\r\n    Undefined = 0x1000,\r\n    /** Bitmask of all types */\r\n    All = 0x0fff,\r\n}\r\n"],"mappings":"AAAA;;;AAGA,WAAYA,qCAyBX;AAzBD,WAAYA,qCAAqC;EAC7C;EACAA,qCAAA,CAAAA,qCAAA,oBAAY;EACZ;EACAA,qCAAA,CAAAA,qCAAA,wBAAc;EACd;EACAA,qCAAA,CAAAA,qCAAA,4BAAgB;EAChB;EACAA,qCAAA,CAAAA,qCAAA,4BAAgB;EAChB;EACAA,qCAAA,CAAAA,qCAAA,6BAAgB;EAChB;EACAA,qCAAA,CAAAA,qCAAA,2BAAe;EACf;EACAA,qCAAA,CAAAA,qCAAA,+BAAiB;EACjB;EACAA,qCAAA,CAAAA,qCAAA,8BAAgB;EAChB;EACAA,qCAAA,CAAAA,qCAAA,qCAAmB;EACnB;EACAA,qCAAA,CAAAA,qCAAA,yCAAqB;EACrB;EACAA,qCAAA,CAAAA,qCAAA,mCAAkB;EAClB;EACAA,qCAAA,CAAAA,qCAAA,uBAAY;AAChB,CAAC,EAzBWA,qCAAqC,KAArCA,qCAAqC"},"metadata":{},"sourceType":"module","externalDependencies":[]}