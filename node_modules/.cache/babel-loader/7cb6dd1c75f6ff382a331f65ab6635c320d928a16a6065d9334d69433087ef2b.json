{"ast":null,"code":"import { FlowGraphExecutionBlock } from \"../../../flowGraphExecutionBlock.js\";\nimport { RichTypeBoolean } from \"../../../flowGraphRichTypes.js\";\nimport { RegisterClass } from \"../../../../Misc/typeStore.js\";\n/**\n * @experimental\n * This block flip flops between two outputs.\n */\nexport class FlowGraphFlipFlopBlock extends FlowGraphExecutionBlock {\n  constructor(config) {\n    super(config);\n    this.onOn = this._registerSignalOutput(\"onOn\");\n    this.onOff = this._registerSignalOutput(\"onOff\");\n    this.isOn = this._registerDataOutput(\"isOn\", RichTypeBoolean);\n  }\n  _execute(context, _callingSignal) {\n    let value = context._getExecutionVariable(this, \"value\", false);\n    value = !value;\n    context._setExecutionVariable(this, \"value\", value);\n    this.isOn.setValue(value, context);\n    if (value) {\n      this.onOn._activateSignal(context);\n    } else {\n      this.onOff._activateSignal(context);\n    }\n  }\n  getClassName() {\n    return \"FGFlipFlopBlock\";\n  }\n}\nRegisterClass(\"FGFlipFlopBlock\", FlowGraphFlipFlopBlock);","map":{"version":3,"names":["FlowGraphExecutionBlock","RichTypeBoolean","RegisterClass","FlowGraphFlipFlopBlock","constructor","config","onOn","_registerSignalOutput","onOff","isOn","_registerDataOutput","_execute","context","_callingSignal","value","_getExecutionVariable","_setExecutionVariable","setValue","_activateSignal","getClassName"],"sources":["../../../../../../../dev/core/src/FlowGraph/Blocks/Execution/ControlFlow/flowGraphFlipFlopBlock.ts"],"sourcesContent":["import type { FlowGraphContext } from \"core/FlowGraph/flowGraphContext\";\r\nimport type { FlowGraphDataConnection } from \"core/FlowGraph/flowGraphDataConnection\";\r\nimport { FlowGraphExecutionBlock } from \"core/FlowGraph/flowGraphExecutionBlock\";\r\nimport { RichTypeBoolean } from \"core/FlowGraph/flowGraphRichTypes\";\r\nimport type { FlowGraphSignalConnection } from \"core/FlowGraph/flowGraphSignalConnection\";\r\nimport { RegisterClass } from \"../../../../Misc/typeStore\";\r\nimport type { IFlowGraphBlockConfiguration } from \"../../../flowGraphBlock\";\r\n\r\n/**\r\n * @experimental\r\n * This block flip flops between two outputs.\r\n */\r\nexport class FlowGraphFlipFlopBlock extends FlowGraphExecutionBlock {\r\n    /**\r\n     * Output connection: The signal to execute when the variable is on.\r\n     */\r\n    public readonly onOn: FlowGraphSignalConnection;\r\n    /**\r\n     * Output connection: The signal to execute when the variable is off.\r\n     */\r\n    public readonly onOff: FlowGraphSignalConnection;\r\n    /**\r\n     * Output connection: If the variable is on.\r\n     */\r\n    public readonly isOn: FlowGraphDataConnection<boolean>;\r\n\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(config);\r\n\r\n        this.onOn = this._registerSignalOutput(\"onOn\");\r\n        this.onOff = this._registerSignalOutput(\"onOff\");\r\n        this.isOn = this._registerDataOutput(\"isOn\", RichTypeBoolean);\r\n    }\r\n\r\n    public _execute(context: FlowGraphContext, _callingSignal: FlowGraphSignalConnection): void {\r\n        let value = context._getExecutionVariable(this, \"value\", false);\r\n\r\n        value = !value;\r\n        context._setExecutionVariable(this, \"value\", value);\r\n        this.isOn.setValue(value, context);\r\n        if (value) {\r\n            this.onOn._activateSignal(context);\r\n        } else {\r\n            this.onOff._activateSignal(context);\r\n        }\r\n    }\r\n\r\n    public getClassName(): string {\r\n        return \"FGFlipFlopBlock\";\r\n    }\r\n}\r\nRegisterClass(\"FGFlipFlopBlock\", FlowGraphFlipFlopBlock);\r\n"],"mappings":"AAEA,SAASA,uBAAuB,QAAE;AAClC,SAASC,eAAe,QAAE;AAE1B,SAASC,aAAa,QAAQ,+BAA6B;AAG3D;;;;AAIA,OAAM,MAAOC,sBAAuB,SAAQH,uBAAuB;EAc/DI,YAAYC,MAAqC;IAC7C,KAAK,CAACA,MAAM,CAAC;IAEb,IAAI,CAACC,IAAI,GAAG,IAAI,CAACC,qBAAqB,CAAC,MAAM,CAAC;IAC9C,IAAI,CAACC,KAAK,GAAG,IAAI,CAACD,qBAAqB,CAAC,OAAO,CAAC;IAChD,IAAI,CAACE,IAAI,GAAG,IAAI,CAACC,mBAAmB,CAAC,MAAM,EAAET,eAAe,CAAC;EACjE;EAEOU,QAAQA,CAACC,OAAyB,EAAEC,cAAyC;IAChF,IAAIC,KAAK,GAAGF,OAAO,CAACG,qBAAqB,CAAC,IAAI,EAAE,OAAO,EAAE,KAAK,CAAC;IAE/DD,KAAK,GAAG,CAACA,KAAK;IACdF,OAAO,CAACI,qBAAqB,CAAC,IAAI,EAAE,OAAO,EAAEF,KAAK,CAAC;IACnD,IAAI,CAACL,IAAI,CAACQ,QAAQ,CAACH,KAAK,EAAEF,OAAO,CAAC;IAClC,IAAIE,KAAK,EAAE;MACP,IAAI,CAACR,IAAI,CAACY,eAAe,CAACN,OAAO,CAAC;KACrC,MAAM;MACH,IAAI,CAACJ,KAAK,CAACU,eAAe,CAACN,OAAO,CAAC;;EAE3C;EAEOO,YAAYA,CAAA;IACf,OAAO,iBAAiB;EAC5B;;AAEJjB,aAAa,CAAC,iBAAiB,EAAEC,sBAAsB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}