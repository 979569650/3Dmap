{"ast":null,"code":"import { NodeGeometryBlock } from \"../nodeGeometryBlock.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\nimport { NodeGeometryBlockConnectionPointTypes } from \"../Enums/nodeGeometryConnectionPointTypes.js\";\n/**\n * Block used to generate the final geometry\n */\nexport class GeometryOutputBlock extends NodeGeometryBlock {\n  /**\n   * Gets the current vertex data if the graph was successfully built\n   */\n  get currentVertexData() {\n    return this._vertexData;\n  }\n  /**\n   * Create a new GeometryOutputBlock\n   * @param name defines the block name\n   */\n  constructor(name) {\n    super(name);\n    this._vertexData = null;\n    this._isUnique = true;\n    this.registerInput(\"geometry\", NodeGeometryBlockConnectionPointTypes.Geometry);\n  }\n  /**\n   * Gets the current class name\n   * @returns the class name\n   */\n  getClassName() {\n    return \"GeometryOutputBlock\";\n  }\n  /**\n   * Gets the geometry input component\n   */\n  get geometry() {\n    return this._inputs[0];\n  }\n  _buildBlock(state) {\n    state.vertexData = this.geometry.getConnectedValue(state);\n    this._vertexData = state.vertexData;\n  }\n}\nRegisterClass(\"BABYLON.GeometryOutputBlock\", GeometryOutputBlock);","map":{"version":3,"names":["NodeGeometryBlock","RegisterClass","NodeGeometryBlockConnectionPointTypes","GeometryOutputBlock","currentVertexData","_vertexData","constructor","name","_isUnique","registerInput","Geometry","getClassName","geometry","_inputs","_buildBlock","state","vertexData","getConnectedValue"],"sources":["../../../../../../dev/core/src/Meshes/Node/Blocks/geometryOutputBlock.ts"],"sourcesContent":["import { NodeGeometryBlock } from \"../nodeGeometryBlock\";\r\nimport type { NodeGeometryConnectionPoint } from \"../nodeGeometryBlockConnectionPoint\";\r\nimport { RegisterClass } from \"../../../Misc/typeStore\";\r\nimport { NodeGeometryBlockConnectionPointTypes } from \"../Enums/nodeGeometryConnectionPointTypes\";\r\nimport type { NodeGeometryBuildState } from \"../nodeGeometryBuildState\";\r\nimport type { VertexData } from \"core/Meshes/mesh.vertexData\";\r\nimport type { Nullable } from \"../../../types\";\r\n\r\n/**\r\n * Block used to generate the final geometry\r\n */\r\nexport class GeometryOutputBlock extends NodeGeometryBlock {\r\n    private _vertexData: Nullable<VertexData> = null;\r\n\r\n    /**\r\n     * Gets the current vertex data if the graph was successfully built\r\n     */\r\n    public get currentVertexData() {\r\n        return this._vertexData;\r\n    }\r\n\r\n    /**\r\n     * Create a new GeometryOutputBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name);\r\n\r\n        this._isUnique = true;\r\n\r\n        this.registerInput(\"geometry\", NodeGeometryBlockConnectionPointTypes.Geometry);\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"GeometryOutputBlock\";\r\n    }\r\n    /**\r\n     * Gets the geometry input component\r\n     */\r\n    public get geometry(): NodeGeometryConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    protected _buildBlock(state: NodeGeometryBuildState) {\r\n        state.vertexData = this.geometry.getConnectedValue(state);\r\n        this._vertexData = state.vertexData;\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.GeometryOutputBlock\", GeometryOutputBlock);\r\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,yBAAuB;AAEzD,SAASC,aAAa,QAAQ,4BAA0B;AACxD,SAASC,qCAAqC,QAAQ,8CAA4C;AAKlG;;;AAGA,OAAM,MAAOC,mBAAoB,SAAQH,iBAAiB;EAGtD;;;EAGA,IAAWI,iBAAiBA,CAAA;IACxB,OAAO,IAAI,CAACC,WAAW;EAC3B;EAEA;;;;EAIAC,YAAmBC,IAAY;IAC3B,KAAK,CAACA,IAAI,CAAC;IAdP,KAAAF,WAAW,GAAyB,IAAI;IAgB5C,IAAI,CAACG,SAAS,GAAG,IAAI;IAErB,IAAI,CAACC,aAAa,CAAC,UAAU,EAAEP,qCAAqC,CAACQ,QAAQ,CAAC;EAClF;EAEA;;;;EAIOC,YAAYA,CAAA;IACf,OAAO,qBAAqB;EAChC;EACA;;;EAGA,IAAWC,QAAQA,CAAA;IACf,OAAO,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC;EAC1B;EAEUC,WAAWA,CAACC,KAA6B;IAC/CA,KAAK,CAACC,UAAU,GAAG,IAAI,CAACJ,QAAQ,CAACK,iBAAiB,CAACF,KAAK,CAAC;IACzD,IAAI,CAACV,WAAW,GAAGU,KAAK,CAACC,UAAU;EACvC;;AAGJf,aAAa,CAAC,6BAA6B,EAAEE,mBAAmB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}